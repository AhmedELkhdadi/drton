Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    3AMM
    DOUZ
    3AKSS
    3AREF
    RED
    TELE3
    NAW3

Grammar

Rule 0     S' -> program
Rule 1     program -> instruction_list
Rule 2     incrementation -> ID INCREMENTATION
Rule 3     decrementation -> ID DECREMENTATION
Rule 4     var_assign -> ID EQUALS expression
Rule 5     var_assign -> ID EQUALS input
Rule 6     if -> ILA ( condition ) { instruction_list }
Rule 7     if -> ILA ( condition ) { instruction_list } WLA { instruction_list }
Rule 8     for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
Rule 9     for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
Rule 10    for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list }
Rule 11    for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list }
Rule 12    while -> MA7ED ( condition ) { instruction_list }
Rule 13    doWhile -> DIR { instruction_list } MA7ED ( condition )
Rule 14    instruction -> var_assign
Rule 15    instruction -> printing
Rule 16    instruction -> incrementation
Rule 17    instruction -> decrementation
Rule 18    instruction -> expression
Rule 19    instruction -> try
Rule 20    instruction -> if
Rule 21    instruction -> for
Rule 22    instruction -> KHREJ
Rule 23    instruction -> KMEL
Rule 24    instruction -> while
Rule 25    instruction -> doWhile
Rule 26    instruction -> input
Rule 27    instruction -> empty
Rule 28    instruction_list -> instruction
Rule 29    instruction_list -> instruction_list instruction
Rule 30    condition -> ( condition ) AW ( condition )
Rule 31    condition -> ( condition ) WA ( condition )
Rule 32    condition -> condition WA ( condition )
Rule 33    condition -> condition AW ( condition )
Rule 34    condition -> ( condition ) WA condition
Rule 35    condition -> ( condition ) AW condition
Rule 36    condition -> condition WA condition
Rule 37    condition -> condition AW condition
Rule 38    condition -> expression > expression
Rule 39    condition -> expression < expression
Rule 40    condition -> expression EQUALSCOMP expression
Rule 41    condition -> expression SUPEQUALS expression
Rule 42    condition -> expression INFEQUALS expression
Rule 43    condition -> expression DIFFERENT expression
Rule 44    condition -> expression
Rule 45    expression -> expression + expression
Rule 46    expression -> expression MINUS expression
Rule 47    expression -> expression TIMES expression
Rule 48    expression -> expression DIVIDE expression
Rule 49    expression -> ( expression )
Rule 50    expression -> MINUS expression
Rule 51    expression -> + expression
Rule 52    expression -> ID
Rule 53    input -> QRA ( expression )
Rule 54    input -> QRA ( )
Rule 55    try -> JEREB { instruction_list } MASD9CH { instruction_list }
Rule 56    try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
Rule 57    expression -> INT
Rule 58    expression -> FLOAT
Rule 59    expression -> STRING
Rule 60    expression -> KHATE2
Rule 61    expression -> S7I7
Rule 62    expression -> WALO
Rule 63    expression -> array
Rule 64    arraylist -> expression
Rule 65    arraylist -> arraylist , expression
Rule 66    array -> [ arraylist ]
Rule 67    printing -> KTEB ( condition )
Rule 68    printing -> KTEB ( incrementation )
Rule 69    printing -> KTEB ( decrementation )
Rule 70    empty -> <empty>

Terminals, with rules where they appear

(                    : 6 7 8 9 10 11 12 13 30 30 31 31 32 33 34 35 49 53 54 67 68 69
)                    : 6 7 8 9 10 11 12 13 30 30 31 31 32 33 34 35 49 53 54 67 68 69
+                    : 45 51
,                    : 65
3AKSS                : 
3AMM                 : 
3AREF                : 
;                    : 8 8 9 9 10 10 11 11
<                    : 39
>                    : 38
AKHIRAN              : 56
AW                   : 30 33 35 37
DECREMENTATION       : 3
DIFFERENT            : 43
DIR                  : 13
DIVIDE               : 48
DOUZ                 : 
EQUALS               : 4 5
EQUALSCOMP           : 40
FLOAT                : 58
ID                   : 2 3 4 5 52
ILA                  : 6 7
INCREMENTATION       : 2
INFEQUALS            : 42
INT                  : 57
JEREB                : 55 56
KHATE2               : 60
KHREJ                : 22
KMEL                 : 23
KTEB                 : 67 68 69
LKOLA                : 8 9 10 11
MA7ED                : 12 13
MASD9CH              : 55 56
MINUS                : 46 50
NAW3                 : 
QRA                  : 53 54
RED                  : 
S7I7                 : 61
STRING               : 59
SUPEQUALS            : 41
TELE3                : 
TIMES                : 47
WA                   : 31 32 34 36
WALO                 : 62
WLA                  : 7
[                    : 66
]                    : 66
error                : 
{                    : 6 7 7 8 9 10 11 12 13 55 55 56 56 56
}                    : 6 7 7 8 9 10 11 12 13 55 55 56 56 56

Nonterminals, with rules where they appear

array                : 63
arraylist            : 65 66
condition            : 6 7 8 9 10 11 12 13 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 67
decrementation       : 9 11 17 69
doWhile              : 25
empty                : 27
expression           : 4 10 11 18 38 38 39 39 40 40 41 41 42 42 43 43 44 45 45 46 46 47 47 48 48 49 50 51 53 64 65
for                  : 21
if                   : 20
incrementation       : 8 10 16 68
input                : 5 26
instruction          : 28 29
instruction_list     : 1 6 7 7 8 9 10 11 12 13 29 55 55 56 56 56
printing             : 15
program              : 0
try                  : 19
var_assign           : 8 9 14
while                : 24

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instruction_list
    (28) instruction_list -> . instruction
    (29) instruction_list -> . instruction_list instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    $end            reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    program                        shift and go to state 1
    instruction_list               shift and go to state 2
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 1

    (0) S' -> program .



state 2

    (1) program -> instruction_list .
    (29) instruction_list -> instruction_list . instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (program -> instruction_list .)
  ! shift/reduce conflict for [ resolved as shift
    $end            reduce using rule 1 (program -> instruction_list .)
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]
  ! $end            [ reduce using rule 70 (empty -> .) ]

    instruction                    shift and go to state 37
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 3

    (28) instruction_list -> instruction .

    KHREJ           reduce using rule 28 (instruction_list -> instruction .)
    KMEL            reduce using rule 28 (instruction_list -> instruction .)
    ID              reduce using rule 28 (instruction_list -> instruction .)
    KTEB            reduce using rule 28 (instruction_list -> instruction .)
    (               reduce using rule 28 (instruction_list -> instruction .)
    MINUS           reduce using rule 28 (instruction_list -> instruction .)
    +               reduce using rule 28 (instruction_list -> instruction .)
    INT             reduce using rule 28 (instruction_list -> instruction .)
    FLOAT           reduce using rule 28 (instruction_list -> instruction .)
    STRING          reduce using rule 28 (instruction_list -> instruction .)
    KHATE2          reduce using rule 28 (instruction_list -> instruction .)
    S7I7            reduce using rule 28 (instruction_list -> instruction .)
    WALO            reduce using rule 28 (instruction_list -> instruction .)
    JEREB           reduce using rule 28 (instruction_list -> instruction .)
    ILA             reduce using rule 28 (instruction_list -> instruction .)
    LKOLA           reduce using rule 28 (instruction_list -> instruction .)
    MA7ED           reduce using rule 28 (instruction_list -> instruction .)
    DIR             reduce using rule 28 (instruction_list -> instruction .)
    QRA             reduce using rule 28 (instruction_list -> instruction .)
    [               reduce using rule 28 (instruction_list -> instruction .)
    $end            reduce using rule 28 (instruction_list -> instruction .)
    }               reduce using rule 28 (instruction_list -> instruction .)


state 4

    (14) instruction -> var_assign .

    KHREJ           reduce using rule 14 (instruction -> var_assign .)
    KMEL            reduce using rule 14 (instruction -> var_assign .)
    ID              reduce using rule 14 (instruction -> var_assign .)
    KTEB            reduce using rule 14 (instruction -> var_assign .)
    (               reduce using rule 14 (instruction -> var_assign .)
    MINUS           reduce using rule 14 (instruction -> var_assign .)
    +               reduce using rule 14 (instruction -> var_assign .)
    INT             reduce using rule 14 (instruction -> var_assign .)
    FLOAT           reduce using rule 14 (instruction -> var_assign .)
    STRING          reduce using rule 14 (instruction -> var_assign .)
    KHATE2          reduce using rule 14 (instruction -> var_assign .)
    S7I7            reduce using rule 14 (instruction -> var_assign .)
    WALO            reduce using rule 14 (instruction -> var_assign .)
    JEREB           reduce using rule 14 (instruction -> var_assign .)
    ILA             reduce using rule 14 (instruction -> var_assign .)
    LKOLA           reduce using rule 14 (instruction -> var_assign .)
    MA7ED           reduce using rule 14 (instruction -> var_assign .)
    DIR             reduce using rule 14 (instruction -> var_assign .)
    QRA             reduce using rule 14 (instruction -> var_assign .)
    [               reduce using rule 14 (instruction -> var_assign .)
    $end            reduce using rule 14 (instruction -> var_assign .)
    }               reduce using rule 14 (instruction -> var_assign .)


state 5

    (15) instruction -> printing .

    KHREJ           reduce using rule 15 (instruction -> printing .)
    KMEL            reduce using rule 15 (instruction -> printing .)
    ID              reduce using rule 15 (instruction -> printing .)
    KTEB            reduce using rule 15 (instruction -> printing .)
    (               reduce using rule 15 (instruction -> printing .)
    MINUS           reduce using rule 15 (instruction -> printing .)
    +               reduce using rule 15 (instruction -> printing .)
    INT             reduce using rule 15 (instruction -> printing .)
    FLOAT           reduce using rule 15 (instruction -> printing .)
    STRING          reduce using rule 15 (instruction -> printing .)
    KHATE2          reduce using rule 15 (instruction -> printing .)
    S7I7            reduce using rule 15 (instruction -> printing .)
    WALO            reduce using rule 15 (instruction -> printing .)
    JEREB           reduce using rule 15 (instruction -> printing .)
    ILA             reduce using rule 15 (instruction -> printing .)
    LKOLA           reduce using rule 15 (instruction -> printing .)
    MA7ED           reduce using rule 15 (instruction -> printing .)
    DIR             reduce using rule 15 (instruction -> printing .)
    QRA             reduce using rule 15 (instruction -> printing .)
    [               reduce using rule 15 (instruction -> printing .)
    $end            reduce using rule 15 (instruction -> printing .)
    }               reduce using rule 15 (instruction -> printing .)


state 6

    (16) instruction -> incrementation .

    KHREJ           reduce using rule 16 (instruction -> incrementation .)
    KMEL            reduce using rule 16 (instruction -> incrementation .)
    ID              reduce using rule 16 (instruction -> incrementation .)
    KTEB            reduce using rule 16 (instruction -> incrementation .)
    (               reduce using rule 16 (instruction -> incrementation .)
    MINUS           reduce using rule 16 (instruction -> incrementation .)
    +               reduce using rule 16 (instruction -> incrementation .)
    INT             reduce using rule 16 (instruction -> incrementation .)
    FLOAT           reduce using rule 16 (instruction -> incrementation .)
    STRING          reduce using rule 16 (instruction -> incrementation .)
    KHATE2          reduce using rule 16 (instruction -> incrementation .)
    S7I7            reduce using rule 16 (instruction -> incrementation .)
    WALO            reduce using rule 16 (instruction -> incrementation .)
    JEREB           reduce using rule 16 (instruction -> incrementation .)
    ILA             reduce using rule 16 (instruction -> incrementation .)
    LKOLA           reduce using rule 16 (instruction -> incrementation .)
    MA7ED           reduce using rule 16 (instruction -> incrementation .)
    DIR             reduce using rule 16 (instruction -> incrementation .)
    QRA             reduce using rule 16 (instruction -> incrementation .)
    [               reduce using rule 16 (instruction -> incrementation .)
    $end            reduce using rule 16 (instruction -> incrementation .)
    }               reduce using rule 16 (instruction -> incrementation .)


state 7

    (17) instruction -> decrementation .

    KHREJ           reduce using rule 17 (instruction -> decrementation .)
    KMEL            reduce using rule 17 (instruction -> decrementation .)
    ID              reduce using rule 17 (instruction -> decrementation .)
    KTEB            reduce using rule 17 (instruction -> decrementation .)
    (               reduce using rule 17 (instruction -> decrementation .)
    MINUS           reduce using rule 17 (instruction -> decrementation .)
    +               reduce using rule 17 (instruction -> decrementation .)
    INT             reduce using rule 17 (instruction -> decrementation .)
    FLOAT           reduce using rule 17 (instruction -> decrementation .)
    STRING          reduce using rule 17 (instruction -> decrementation .)
    KHATE2          reduce using rule 17 (instruction -> decrementation .)
    S7I7            reduce using rule 17 (instruction -> decrementation .)
    WALO            reduce using rule 17 (instruction -> decrementation .)
    JEREB           reduce using rule 17 (instruction -> decrementation .)
    ILA             reduce using rule 17 (instruction -> decrementation .)
    LKOLA           reduce using rule 17 (instruction -> decrementation .)
    MA7ED           reduce using rule 17 (instruction -> decrementation .)
    DIR             reduce using rule 17 (instruction -> decrementation .)
    QRA             reduce using rule 17 (instruction -> decrementation .)
    [               reduce using rule 17 (instruction -> decrementation .)
    $end            reduce using rule 17 (instruction -> decrementation .)
    }               reduce using rule 17 (instruction -> decrementation .)


state 8

    (18) instruction -> expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 18 (instruction -> expression .)
    KMEL            reduce using rule 18 (instruction -> expression .)
    ID              reduce using rule 18 (instruction -> expression .)
    KTEB            reduce using rule 18 (instruction -> expression .)
    (               reduce using rule 18 (instruction -> expression .)
    INT             reduce using rule 18 (instruction -> expression .)
    FLOAT           reduce using rule 18 (instruction -> expression .)
    STRING          reduce using rule 18 (instruction -> expression .)
    KHATE2          reduce using rule 18 (instruction -> expression .)
    S7I7            reduce using rule 18 (instruction -> expression .)
    WALO            reduce using rule 18 (instruction -> expression .)
    JEREB           reduce using rule 18 (instruction -> expression .)
    ILA             reduce using rule 18 (instruction -> expression .)
    LKOLA           reduce using rule 18 (instruction -> expression .)
    MA7ED           reduce using rule 18 (instruction -> expression .)
    DIR             reduce using rule 18 (instruction -> expression .)
    QRA             reduce using rule 18 (instruction -> expression .)
    [               reduce using rule 18 (instruction -> expression .)
    $end            reduce using rule 18 (instruction -> expression .)
    }               reduce using rule 18 (instruction -> expression .)
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

  ! MINUS           [ reduce using rule 18 (instruction -> expression .) ]
  ! +               [ reduce using rule 18 (instruction -> expression .) ]


state 9

    (19) instruction -> try .

    KHREJ           reduce using rule 19 (instruction -> try .)
    KMEL            reduce using rule 19 (instruction -> try .)
    ID              reduce using rule 19 (instruction -> try .)
    KTEB            reduce using rule 19 (instruction -> try .)
    (               reduce using rule 19 (instruction -> try .)
    MINUS           reduce using rule 19 (instruction -> try .)
    +               reduce using rule 19 (instruction -> try .)
    INT             reduce using rule 19 (instruction -> try .)
    FLOAT           reduce using rule 19 (instruction -> try .)
    STRING          reduce using rule 19 (instruction -> try .)
    KHATE2          reduce using rule 19 (instruction -> try .)
    S7I7            reduce using rule 19 (instruction -> try .)
    WALO            reduce using rule 19 (instruction -> try .)
    JEREB           reduce using rule 19 (instruction -> try .)
    ILA             reduce using rule 19 (instruction -> try .)
    LKOLA           reduce using rule 19 (instruction -> try .)
    MA7ED           reduce using rule 19 (instruction -> try .)
    DIR             reduce using rule 19 (instruction -> try .)
    QRA             reduce using rule 19 (instruction -> try .)
    [               reduce using rule 19 (instruction -> try .)
    $end            reduce using rule 19 (instruction -> try .)
    }               reduce using rule 19 (instruction -> try .)


state 10

    (20) instruction -> if .

    KHREJ           reduce using rule 20 (instruction -> if .)
    KMEL            reduce using rule 20 (instruction -> if .)
    ID              reduce using rule 20 (instruction -> if .)
    KTEB            reduce using rule 20 (instruction -> if .)
    (               reduce using rule 20 (instruction -> if .)
    MINUS           reduce using rule 20 (instruction -> if .)
    +               reduce using rule 20 (instruction -> if .)
    INT             reduce using rule 20 (instruction -> if .)
    FLOAT           reduce using rule 20 (instruction -> if .)
    STRING          reduce using rule 20 (instruction -> if .)
    KHATE2          reduce using rule 20 (instruction -> if .)
    S7I7            reduce using rule 20 (instruction -> if .)
    WALO            reduce using rule 20 (instruction -> if .)
    JEREB           reduce using rule 20 (instruction -> if .)
    ILA             reduce using rule 20 (instruction -> if .)
    LKOLA           reduce using rule 20 (instruction -> if .)
    MA7ED           reduce using rule 20 (instruction -> if .)
    DIR             reduce using rule 20 (instruction -> if .)
    QRA             reduce using rule 20 (instruction -> if .)
    [               reduce using rule 20 (instruction -> if .)
    $end            reduce using rule 20 (instruction -> if .)
    }               reduce using rule 20 (instruction -> if .)


state 11

    (21) instruction -> for .

    KHREJ           reduce using rule 21 (instruction -> for .)
    KMEL            reduce using rule 21 (instruction -> for .)
    ID              reduce using rule 21 (instruction -> for .)
    KTEB            reduce using rule 21 (instruction -> for .)
    (               reduce using rule 21 (instruction -> for .)
    MINUS           reduce using rule 21 (instruction -> for .)
    +               reduce using rule 21 (instruction -> for .)
    INT             reduce using rule 21 (instruction -> for .)
    FLOAT           reduce using rule 21 (instruction -> for .)
    STRING          reduce using rule 21 (instruction -> for .)
    KHATE2          reduce using rule 21 (instruction -> for .)
    S7I7            reduce using rule 21 (instruction -> for .)
    WALO            reduce using rule 21 (instruction -> for .)
    JEREB           reduce using rule 21 (instruction -> for .)
    ILA             reduce using rule 21 (instruction -> for .)
    LKOLA           reduce using rule 21 (instruction -> for .)
    MA7ED           reduce using rule 21 (instruction -> for .)
    DIR             reduce using rule 21 (instruction -> for .)
    QRA             reduce using rule 21 (instruction -> for .)
    [               reduce using rule 21 (instruction -> for .)
    $end            reduce using rule 21 (instruction -> for .)
    }               reduce using rule 21 (instruction -> for .)


state 12

    (22) instruction -> KHREJ .

    KHREJ           reduce using rule 22 (instruction -> KHREJ .)
    KMEL            reduce using rule 22 (instruction -> KHREJ .)
    ID              reduce using rule 22 (instruction -> KHREJ .)
    KTEB            reduce using rule 22 (instruction -> KHREJ .)
    (               reduce using rule 22 (instruction -> KHREJ .)
    MINUS           reduce using rule 22 (instruction -> KHREJ .)
    +               reduce using rule 22 (instruction -> KHREJ .)
    INT             reduce using rule 22 (instruction -> KHREJ .)
    FLOAT           reduce using rule 22 (instruction -> KHREJ .)
    STRING          reduce using rule 22 (instruction -> KHREJ .)
    KHATE2          reduce using rule 22 (instruction -> KHREJ .)
    S7I7            reduce using rule 22 (instruction -> KHREJ .)
    WALO            reduce using rule 22 (instruction -> KHREJ .)
    JEREB           reduce using rule 22 (instruction -> KHREJ .)
    ILA             reduce using rule 22 (instruction -> KHREJ .)
    LKOLA           reduce using rule 22 (instruction -> KHREJ .)
    MA7ED           reduce using rule 22 (instruction -> KHREJ .)
    DIR             reduce using rule 22 (instruction -> KHREJ .)
    QRA             reduce using rule 22 (instruction -> KHREJ .)
    [               reduce using rule 22 (instruction -> KHREJ .)
    $end            reduce using rule 22 (instruction -> KHREJ .)
    }               reduce using rule 22 (instruction -> KHREJ .)


state 13

    (23) instruction -> KMEL .

    KHREJ           reduce using rule 23 (instruction -> KMEL .)
    KMEL            reduce using rule 23 (instruction -> KMEL .)
    ID              reduce using rule 23 (instruction -> KMEL .)
    KTEB            reduce using rule 23 (instruction -> KMEL .)
    (               reduce using rule 23 (instruction -> KMEL .)
    MINUS           reduce using rule 23 (instruction -> KMEL .)
    +               reduce using rule 23 (instruction -> KMEL .)
    INT             reduce using rule 23 (instruction -> KMEL .)
    FLOAT           reduce using rule 23 (instruction -> KMEL .)
    STRING          reduce using rule 23 (instruction -> KMEL .)
    KHATE2          reduce using rule 23 (instruction -> KMEL .)
    S7I7            reduce using rule 23 (instruction -> KMEL .)
    WALO            reduce using rule 23 (instruction -> KMEL .)
    JEREB           reduce using rule 23 (instruction -> KMEL .)
    ILA             reduce using rule 23 (instruction -> KMEL .)
    LKOLA           reduce using rule 23 (instruction -> KMEL .)
    MA7ED           reduce using rule 23 (instruction -> KMEL .)
    DIR             reduce using rule 23 (instruction -> KMEL .)
    QRA             reduce using rule 23 (instruction -> KMEL .)
    [               reduce using rule 23 (instruction -> KMEL .)
    $end            reduce using rule 23 (instruction -> KMEL .)
    }               reduce using rule 23 (instruction -> KMEL .)


state 14

    (24) instruction -> while .

    KHREJ           reduce using rule 24 (instruction -> while .)
    KMEL            reduce using rule 24 (instruction -> while .)
    ID              reduce using rule 24 (instruction -> while .)
    KTEB            reduce using rule 24 (instruction -> while .)
    (               reduce using rule 24 (instruction -> while .)
    MINUS           reduce using rule 24 (instruction -> while .)
    +               reduce using rule 24 (instruction -> while .)
    INT             reduce using rule 24 (instruction -> while .)
    FLOAT           reduce using rule 24 (instruction -> while .)
    STRING          reduce using rule 24 (instruction -> while .)
    KHATE2          reduce using rule 24 (instruction -> while .)
    S7I7            reduce using rule 24 (instruction -> while .)
    WALO            reduce using rule 24 (instruction -> while .)
    JEREB           reduce using rule 24 (instruction -> while .)
    ILA             reduce using rule 24 (instruction -> while .)
    LKOLA           reduce using rule 24 (instruction -> while .)
    MA7ED           reduce using rule 24 (instruction -> while .)
    DIR             reduce using rule 24 (instruction -> while .)
    QRA             reduce using rule 24 (instruction -> while .)
    [               reduce using rule 24 (instruction -> while .)
    $end            reduce using rule 24 (instruction -> while .)
    }               reduce using rule 24 (instruction -> while .)


state 15

    (25) instruction -> doWhile .

    KHREJ           reduce using rule 25 (instruction -> doWhile .)
    KMEL            reduce using rule 25 (instruction -> doWhile .)
    ID              reduce using rule 25 (instruction -> doWhile .)
    KTEB            reduce using rule 25 (instruction -> doWhile .)
    (               reduce using rule 25 (instruction -> doWhile .)
    MINUS           reduce using rule 25 (instruction -> doWhile .)
    +               reduce using rule 25 (instruction -> doWhile .)
    INT             reduce using rule 25 (instruction -> doWhile .)
    FLOAT           reduce using rule 25 (instruction -> doWhile .)
    STRING          reduce using rule 25 (instruction -> doWhile .)
    KHATE2          reduce using rule 25 (instruction -> doWhile .)
    S7I7            reduce using rule 25 (instruction -> doWhile .)
    WALO            reduce using rule 25 (instruction -> doWhile .)
    JEREB           reduce using rule 25 (instruction -> doWhile .)
    ILA             reduce using rule 25 (instruction -> doWhile .)
    LKOLA           reduce using rule 25 (instruction -> doWhile .)
    MA7ED           reduce using rule 25 (instruction -> doWhile .)
    DIR             reduce using rule 25 (instruction -> doWhile .)
    QRA             reduce using rule 25 (instruction -> doWhile .)
    [               reduce using rule 25 (instruction -> doWhile .)
    $end            reduce using rule 25 (instruction -> doWhile .)
    }               reduce using rule 25 (instruction -> doWhile .)


state 16

    (26) instruction -> input .

    KHREJ           reduce using rule 26 (instruction -> input .)
    KMEL            reduce using rule 26 (instruction -> input .)
    ID              reduce using rule 26 (instruction -> input .)
    KTEB            reduce using rule 26 (instruction -> input .)
    (               reduce using rule 26 (instruction -> input .)
    MINUS           reduce using rule 26 (instruction -> input .)
    +               reduce using rule 26 (instruction -> input .)
    INT             reduce using rule 26 (instruction -> input .)
    FLOAT           reduce using rule 26 (instruction -> input .)
    STRING          reduce using rule 26 (instruction -> input .)
    KHATE2          reduce using rule 26 (instruction -> input .)
    S7I7            reduce using rule 26 (instruction -> input .)
    WALO            reduce using rule 26 (instruction -> input .)
    JEREB           reduce using rule 26 (instruction -> input .)
    ILA             reduce using rule 26 (instruction -> input .)
    LKOLA           reduce using rule 26 (instruction -> input .)
    MA7ED           reduce using rule 26 (instruction -> input .)
    DIR             reduce using rule 26 (instruction -> input .)
    QRA             reduce using rule 26 (instruction -> input .)
    [               reduce using rule 26 (instruction -> input .)
    $end            reduce using rule 26 (instruction -> input .)
    }               reduce using rule 26 (instruction -> input .)


state 17

    (27) instruction -> empty .

    KHREJ           reduce using rule 27 (instruction -> empty .)
    KMEL            reduce using rule 27 (instruction -> empty .)
    ID              reduce using rule 27 (instruction -> empty .)
    KTEB            reduce using rule 27 (instruction -> empty .)
    (               reduce using rule 27 (instruction -> empty .)
    MINUS           reduce using rule 27 (instruction -> empty .)
    +               reduce using rule 27 (instruction -> empty .)
    INT             reduce using rule 27 (instruction -> empty .)
    FLOAT           reduce using rule 27 (instruction -> empty .)
    STRING          reduce using rule 27 (instruction -> empty .)
    KHATE2          reduce using rule 27 (instruction -> empty .)
    S7I7            reduce using rule 27 (instruction -> empty .)
    WALO            reduce using rule 27 (instruction -> empty .)
    JEREB           reduce using rule 27 (instruction -> empty .)
    ILA             reduce using rule 27 (instruction -> empty .)
    LKOLA           reduce using rule 27 (instruction -> empty .)
    MA7ED           reduce using rule 27 (instruction -> empty .)
    DIR             reduce using rule 27 (instruction -> empty .)
    QRA             reduce using rule 27 (instruction -> empty .)
    [               reduce using rule 27 (instruction -> empty .)
    $end            reduce using rule 27 (instruction -> empty .)
    }               reduce using rule 27 (instruction -> empty .)


state 18

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input
    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION
    (52) expression -> ID .

    EQUALS          shift and go to state 42
    INCREMENTATION  shift and go to state 43
    DECREMENTATION  shift and go to state 44
    +               reduce using rule 52 (expression -> ID .)
    MINUS           reduce using rule 52 (expression -> ID .)
    TIMES           reduce using rule 52 (expression -> ID .)
    DIVIDE          reduce using rule 52 (expression -> ID .)
    KHREJ           reduce using rule 52 (expression -> ID .)
    KMEL            reduce using rule 52 (expression -> ID .)
    ID              reduce using rule 52 (expression -> ID .)
    KTEB            reduce using rule 52 (expression -> ID .)
    (               reduce using rule 52 (expression -> ID .)
    INT             reduce using rule 52 (expression -> ID .)
    FLOAT           reduce using rule 52 (expression -> ID .)
    STRING          reduce using rule 52 (expression -> ID .)
    KHATE2          reduce using rule 52 (expression -> ID .)
    S7I7            reduce using rule 52 (expression -> ID .)
    WALO            reduce using rule 52 (expression -> ID .)
    JEREB           reduce using rule 52 (expression -> ID .)
    ILA             reduce using rule 52 (expression -> ID .)
    LKOLA           reduce using rule 52 (expression -> ID .)
    MA7ED           reduce using rule 52 (expression -> ID .)
    DIR             reduce using rule 52 (expression -> ID .)
    QRA             reduce using rule 52 (expression -> ID .)
    [               reduce using rule 52 (expression -> ID .)
    $end            reduce using rule 52 (expression -> ID .)
    }               reduce using rule 52 (expression -> ID .)


state 19

    (67) printing -> KTEB . ( condition )
    (68) printing -> KTEB . ( incrementation )
    (69) printing -> KTEB . ( decrementation )

    (               shift and go to state 45


state 20

    (49) expression -> ( . expression )
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 46
    array                          shift and go to state 29

state 21

    (51) expression -> + . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 48
    array                          shift and go to state 29

state 22

    (50) expression -> MINUS . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 49
    array                          shift and go to state 29

state 23

    (57) expression -> INT .

    +               reduce using rule 57 (expression -> INT .)
    MINUS           reduce using rule 57 (expression -> INT .)
    TIMES           reduce using rule 57 (expression -> INT .)
    DIVIDE          reduce using rule 57 (expression -> INT .)
    KHREJ           reduce using rule 57 (expression -> INT .)
    KMEL            reduce using rule 57 (expression -> INT .)
    ID              reduce using rule 57 (expression -> INT .)
    KTEB            reduce using rule 57 (expression -> INT .)
    (               reduce using rule 57 (expression -> INT .)
    INT             reduce using rule 57 (expression -> INT .)
    FLOAT           reduce using rule 57 (expression -> INT .)
    STRING          reduce using rule 57 (expression -> INT .)
    KHATE2          reduce using rule 57 (expression -> INT .)
    S7I7            reduce using rule 57 (expression -> INT .)
    WALO            reduce using rule 57 (expression -> INT .)
    JEREB           reduce using rule 57 (expression -> INT .)
    ILA             reduce using rule 57 (expression -> INT .)
    LKOLA           reduce using rule 57 (expression -> INT .)
    MA7ED           reduce using rule 57 (expression -> INT .)
    DIR             reduce using rule 57 (expression -> INT .)
    QRA             reduce using rule 57 (expression -> INT .)
    [               reduce using rule 57 (expression -> INT .)
    $end            reduce using rule 57 (expression -> INT .)
    )               reduce using rule 57 (expression -> INT .)
    ]               reduce using rule 57 (expression -> INT .)
    ,               reduce using rule 57 (expression -> INT .)
    }               reduce using rule 57 (expression -> INT .)
    ;               reduce using rule 57 (expression -> INT .)
    >               reduce using rule 57 (expression -> INT .)
    <               reduce using rule 57 (expression -> INT .)
    EQUALSCOMP      reduce using rule 57 (expression -> INT .)
    SUPEQUALS       reduce using rule 57 (expression -> INT .)
    INFEQUALS       reduce using rule 57 (expression -> INT .)
    DIFFERENT       reduce using rule 57 (expression -> INT .)
    WA              reduce using rule 57 (expression -> INT .)
    AW              reduce using rule 57 (expression -> INT .)


state 24

    (58) expression -> FLOAT .

    +               reduce using rule 58 (expression -> FLOAT .)
    MINUS           reduce using rule 58 (expression -> FLOAT .)
    TIMES           reduce using rule 58 (expression -> FLOAT .)
    DIVIDE          reduce using rule 58 (expression -> FLOAT .)
    KHREJ           reduce using rule 58 (expression -> FLOAT .)
    KMEL            reduce using rule 58 (expression -> FLOAT .)
    ID              reduce using rule 58 (expression -> FLOAT .)
    KTEB            reduce using rule 58 (expression -> FLOAT .)
    (               reduce using rule 58 (expression -> FLOAT .)
    INT             reduce using rule 58 (expression -> FLOAT .)
    FLOAT           reduce using rule 58 (expression -> FLOAT .)
    STRING          reduce using rule 58 (expression -> FLOAT .)
    KHATE2          reduce using rule 58 (expression -> FLOAT .)
    S7I7            reduce using rule 58 (expression -> FLOAT .)
    WALO            reduce using rule 58 (expression -> FLOAT .)
    JEREB           reduce using rule 58 (expression -> FLOAT .)
    ILA             reduce using rule 58 (expression -> FLOAT .)
    LKOLA           reduce using rule 58 (expression -> FLOAT .)
    MA7ED           reduce using rule 58 (expression -> FLOAT .)
    DIR             reduce using rule 58 (expression -> FLOAT .)
    QRA             reduce using rule 58 (expression -> FLOAT .)
    [               reduce using rule 58 (expression -> FLOAT .)
    $end            reduce using rule 58 (expression -> FLOAT .)
    )               reduce using rule 58 (expression -> FLOAT .)
    ]               reduce using rule 58 (expression -> FLOAT .)
    ,               reduce using rule 58 (expression -> FLOAT .)
    }               reduce using rule 58 (expression -> FLOAT .)
    ;               reduce using rule 58 (expression -> FLOAT .)
    >               reduce using rule 58 (expression -> FLOAT .)
    <               reduce using rule 58 (expression -> FLOAT .)
    EQUALSCOMP      reduce using rule 58 (expression -> FLOAT .)
    SUPEQUALS       reduce using rule 58 (expression -> FLOAT .)
    INFEQUALS       reduce using rule 58 (expression -> FLOAT .)
    DIFFERENT       reduce using rule 58 (expression -> FLOAT .)
    WA              reduce using rule 58 (expression -> FLOAT .)
    AW              reduce using rule 58 (expression -> FLOAT .)


state 25

    (59) expression -> STRING .

    +               reduce using rule 59 (expression -> STRING .)
    MINUS           reduce using rule 59 (expression -> STRING .)
    TIMES           reduce using rule 59 (expression -> STRING .)
    DIVIDE          reduce using rule 59 (expression -> STRING .)
    KHREJ           reduce using rule 59 (expression -> STRING .)
    KMEL            reduce using rule 59 (expression -> STRING .)
    ID              reduce using rule 59 (expression -> STRING .)
    KTEB            reduce using rule 59 (expression -> STRING .)
    (               reduce using rule 59 (expression -> STRING .)
    INT             reduce using rule 59 (expression -> STRING .)
    FLOAT           reduce using rule 59 (expression -> STRING .)
    STRING          reduce using rule 59 (expression -> STRING .)
    KHATE2          reduce using rule 59 (expression -> STRING .)
    S7I7            reduce using rule 59 (expression -> STRING .)
    WALO            reduce using rule 59 (expression -> STRING .)
    JEREB           reduce using rule 59 (expression -> STRING .)
    ILA             reduce using rule 59 (expression -> STRING .)
    LKOLA           reduce using rule 59 (expression -> STRING .)
    MA7ED           reduce using rule 59 (expression -> STRING .)
    DIR             reduce using rule 59 (expression -> STRING .)
    QRA             reduce using rule 59 (expression -> STRING .)
    [               reduce using rule 59 (expression -> STRING .)
    $end            reduce using rule 59 (expression -> STRING .)
    )               reduce using rule 59 (expression -> STRING .)
    ]               reduce using rule 59 (expression -> STRING .)
    ,               reduce using rule 59 (expression -> STRING .)
    }               reduce using rule 59 (expression -> STRING .)
    ;               reduce using rule 59 (expression -> STRING .)
    >               reduce using rule 59 (expression -> STRING .)
    <               reduce using rule 59 (expression -> STRING .)
    EQUALSCOMP      reduce using rule 59 (expression -> STRING .)
    SUPEQUALS       reduce using rule 59 (expression -> STRING .)
    INFEQUALS       reduce using rule 59 (expression -> STRING .)
    DIFFERENT       reduce using rule 59 (expression -> STRING .)
    WA              reduce using rule 59 (expression -> STRING .)
    AW              reduce using rule 59 (expression -> STRING .)


state 26

    (60) expression -> KHATE2 .

    +               reduce using rule 60 (expression -> KHATE2 .)
    MINUS           reduce using rule 60 (expression -> KHATE2 .)
    TIMES           reduce using rule 60 (expression -> KHATE2 .)
    DIVIDE          reduce using rule 60 (expression -> KHATE2 .)
    KHREJ           reduce using rule 60 (expression -> KHATE2 .)
    KMEL            reduce using rule 60 (expression -> KHATE2 .)
    ID              reduce using rule 60 (expression -> KHATE2 .)
    KTEB            reduce using rule 60 (expression -> KHATE2 .)
    (               reduce using rule 60 (expression -> KHATE2 .)
    INT             reduce using rule 60 (expression -> KHATE2 .)
    FLOAT           reduce using rule 60 (expression -> KHATE2 .)
    STRING          reduce using rule 60 (expression -> KHATE2 .)
    KHATE2          reduce using rule 60 (expression -> KHATE2 .)
    S7I7            reduce using rule 60 (expression -> KHATE2 .)
    WALO            reduce using rule 60 (expression -> KHATE2 .)
    JEREB           reduce using rule 60 (expression -> KHATE2 .)
    ILA             reduce using rule 60 (expression -> KHATE2 .)
    LKOLA           reduce using rule 60 (expression -> KHATE2 .)
    MA7ED           reduce using rule 60 (expression -> KHATE2 .)
    DIR             reduce using rule 60 (expression -> KHATE2 .)
    QRA             reduce using rule 60 (expression -> KHATE2 .)
    [               reduce using rule 60 (expression -> KHATE2 .)
    $end            reduce using rule 60 (expression -> KHATE2 .)
    )               reduce using rule 60 (expression -> KHATE2 .)
    ]               reduce using rule 60 (expression -> KHATE2 .)
    ,               reduce using rule 60 (expression -> KHATE2 .)
    }               reduce using rule 60 (expression -> KHATE2 .)
    ;               reduce using rule 60 (expression -> KHATE2 .)
    >               reduce using rule 60 (expression -> KHATE2 .)
    <               reduce using rule 60 (expression -> KHATE2 .)
    EQUALSCOMP      reduce using rule 60 (expression -> KHATE2 .)
    SUPEQUALS       reduce using rule 60 (expression -> KHATE2 .)
    INFEQUALS       reduce using rule 60 (expression -> KHATE2 .)
    DIFFERENT       reduce using rule 60 (expression -> KHATE2 .)
    WA              reduce using rule 60 (expression -> KHATE2 .)
    AW              reduce using rule 60 (expression -> KHATE2 .)


state 27

    (61) expression -> S7I7 .

    +               reduce using rule 61 (expression -> S7I7 .)
    MINUS           reduce using rule 61 (expression -> S7I7 .)
    TIMES           reduce using rule 61 (expression -> S7I7 .)
    DIVIDE          reduce using rule 61 (expression -> S7I7 .)
    KHREJ           reduce using rule 61 (expression -> S7I7 .)
    KMEL            reduce using rule 61 (expression -> S7I7 .)
    ID              reduce using rule 61 (expression -> S7I7 .)
    KTEB            reduce using rule 61 (expression -> S7I7 .)
    (               reduce using rule 61 (expression -> S7I7 .)
    INT             reduce using rule 61 (expression -> S7I7 .)
    FLOAT           reduce using rule 61 (expression -> S7I7 .)
    STRING          reduce using rule 61 (expression -> S7I7 .)
    KHATE2          reduce using rule 61 (expression -> S7I7 .)
    S7I7            reduce using rule 61 (expression -> S7I7 .)
    WALO            reduce using rule 61 (expression -> S7I7 .)
    JEREB           reduce using rule 61 (expression -> S7I7 .)
    ILA             reduce using rule 61 (expression -> S7I7 .)
    LKOLA           reduce using rule 61 (expression -> S7I7 .)
    MA7ED           reduce using rule 61 (expression -> S7I7 .)
    DIR             reduce using rule 61 (expression -> S7I7 .)
    QRA             reduce using rule 61 (expression -> S7I7 .)
    [               reduce using rule 61 (expression -> S7I7 .)
    $end            reduce using rule 61 (expression -> S7I7 .)
    )               reduce using rule 61 (expression -> S7I7 .)
    ]               reduce using rule 61 (expression -> S7I7 .)
    ,               reduce using rule 61 (expression -> S7I7 .)
    }               reduce using rule 61 (expression -> S7I7 .)
    ;               reduce using rule 61 (expression -> S7I7 .)
    >               reduce using rule 61 (expression -> S7I7 .)
    <               reduce using rule 61 (expression -> S7I7 .)
    EQUALSCOMP      reduce using rule 61 (expression -> S7I7 .)
    SUPEQUALS       reduce using rule 61 (expression -> S7I7 .)
    INFEQUALS       reduce using rule 61 (expression -> S7I7 .)
    DIFFERENT       reduce using rule 61 (expression -> S7I7 .)
    WA              reduce using rule 61 (expression -> S7I7 .)
    AW              reduce using rule 61 (expression -> S7I7 .)


state 28

    (62) expression -> WALO .

    +               reduce using rule 62 (expression -> WALO .)
    MINUS           reduce using rule 62 (expression -> WALO .)
    TIMES           reduce using rule 62 (expression -> WALO .)
    DIVIDE          reduce using rule 62 (expression -> WALO .)
    KHREJ           reduce using rule 62 (expression -> WALO .)
    KMEL            reduce using rule 62 (expression -> WALO .)
    ID              reduce using rule 62 (expression -> WALO .)
    KTEB            reduce using rule 62 (expression -> WALO .)
    (               reduce using rule 62 (expression -> WALO .)
    INT             reduce using rule 62 (expression -> WALO .)
    FLOAT           reduce using rule 62 (expression -> WALO .)
    STRING          reduce using rule 62 (expression -> WALO .)
    KHATE2          reduce using rule 62 (expression -> WALO .)
    S7I7            reduce using rule 62 (expression -> WALO .)
    WALO            reduce using rule 62 (expression -> WALO .)
    JEREB           reduce using rule 62 (expression -> WALO .)
    ILA             reduce using rule 62 (expression -> WALO .)
    LKOLA           reduce using rule 62 (expression -> WALO .)
    MA7ED           reduce using rule 62 (expression -> WALO .)
    DIR             reduce using rule 62 (expression -> WALO .)
    QRA             reduce using rule 62 (expression -> WALO .)
    [               reduce using rule 62 (expression -> WALO .)
    $end            reduce using rule 62 (expression -> WALO .)
    )               reduce using rule 62 (expression -> WALO .)
    ]               reduce using rule 62 (expression -> WALO .)
    ,               reduce using rule 62 (expression -> WALO .)
    }               reduce using rule 62 (expression -> WALO .)
    ;               reduce using rule 62 (expression -> WALO .)
    >               reduce using rule 62 (expression -> WALO .)
    <               reduce using rule 62 (expression -> WALO .)
    EQUALSCOMP      reduce using rule 62 (expression -> WALO .)
    SUPEQUALS       reduce using rule 62 (expression -> WALO .)
    INFEQUALS       reduce using rule 62 (expression -> WALO .)
    DIFFERENT       reduce using rule 62 (expression -> WALO .)
    WA              reduce using rule 62 (expression -> WALO .)
    AW              reduce using rule 62 (expression -> WALO .)


state 29

    (63) expression -> array .

    +               reduce using rule 63 (expression -> array .)
    MINUS           reduce using rule 63 (expression -> array .)
    TIMES           reduce using rule 63 (expression -> array .)
    DIVIDE          reduce using rule 63 (expression -> array .)
    KHREJ           reduce using rule 63 (expression -> array .)
    KMEL            reduce using rule 63 (expression -> array .)
    ID              reduce using rule 63 (expression -> array .)
    KTEB            reduce using rule 63 (expression -> array .)
    (               reduce using rule 63 (expression -> array .)
    INT             reduce using rule 63 (expression -> array .)
    FLOAT           reduce using rule 63 (expression -> array .)
    STRING          reduce using rule 63 (expression -> array .)
    KHATE2          reduce using rule 63 (expression -> array .)
    S7I7            reduce using rule 63 (expression -> array .)
    WALO            reduce using rule 63 (expression -> array .)
    JEREB           reduce using rule 63 (expression -> array .)
    ILA             reduce using rule 63 (expression -> array .)
    LKOLA           reduce using rule 63 (expression -> array .)
    MA7ED           reduce using rule 63 (expression -> array .)
    DIR             reduce using rule 63 (expression -> array .)
    QRA             reduce using rule 63 (expression -> array .)
    [               reduce using rule 63 (expression -> array .)
    $end            reduce using rule 63 (expression -> array .)
    )               reduce using rule 63 (expression -> array .)
    ]               reduce using rule 63 (expression -> array .)
    ,               reduce using rule 63 (expression -> array .)
    }               reduce using rule 63 (expression -> array .)
    ;               reduce using rule 63 (expression -> array .)
    >               reduce using rule 63 (expression -> array .)
    <               reduce using rule 63 (expression -> array .)
    EQUALSCOMP      reduce using rule 63 (expression -> array .)
    SUPEQUALS       reduce using rule 63 (expression -> array .)
    INFEQUALS       reduce using rule 63 (expression -> array .)
    DIFFERENT       reduce using rule 63 (expression -> array .)
    WA              reduce using rule 63 (expression -> array .)
    AW              reduce using rule 63 (expression -> array .)


state 30

    (55) try -> JEREB . { instruction_list } MASD9CH { instruction_list }
    (56) try -> JEREB . { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }

    {               shift and go to state 50


state 31

    (6) if -> ILA . ( condition ) { instruction_list }
    (7) if -> ILA . ( condition ) { instruction_list } WLA { instruction_list }

    (               shift and go to state 51


state 32

    (8) for -> LKOLA . ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> LKOLA . ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> LKOLA . ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> LKOLA . ( expression ; condition ; decrementation ) { instruction_list }

    (               shift and go to state 52


state 33

    (12) while -> MA7ED . ( condition ) { instruction_list }

    (               shift and go to state 53


state 34

    (13) doWhile -> DIR . { instruction_list } MA7ED ( condition )

    {               shift and go to state 54


state 35

    (53) input -> QRA . ( expression )
    (54) input -> QRA . ( )

    (               shift and go to state 55


state 36

    (66) array -> [ . arraylist ]
    (64) arraylist -> . expression
    (65) arraylist -> . arraylist , expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    arraylist                      shift and go to state 56
    expression                     shift and go to state 57
    array                          shift and go to state 29

state 37

    (29) instruction_list -> instruction_list instruction .

    KHREJ           reduce using rule 29 (instruction_list -> instruction_list instruction .)
    KMEL            reduce using rule 29 (instruction_list -> instruction_list instruction .)
    ID              reduce using rule 29 (instruction_list -> instruction_list instruction .)
    KTEB            reduce using rule 29 (instruction_list -> instruction_list instruction .)
    (               reduce using rule 29 (instruction_list -> instruction_list instruction .)
    MINUS           reduce using rule 29 (instruction_list -> instruction_list instruction .)
    +               reduce using rule 29 (instruction_list -> instruction_list instruction .)
    INT             reduce using rule 29 (instruction_list -> instruction_list instruction .)
    FLOAT           reduce using rule 29 (instruction_list -> instruction_list instruction .)
    STRING          reduce using rule 29 (instruction_list -> instruction_list instruction .)
    KHATE2          reduce using rule 29 (instruction_list -> instruction_list instruction .)
    S7I7            reduce using rule 29 (instruction_list -> instruction_list instruction .)
    WALO            reduce using rule 29 (instruction_list -> instruction_list instruction .)
    JEREB           reduce using rule 29 (instruction_list -> instruction_list instruction .)
    ILA             reduce using rule 29 (instruction_list -> instruction_list instruction .)
    LKOLA           reduce using rule 29 (instruction_list -> instruction_list instruction .)
    MA7ED           reduce using rule 29 (instruction_list -> instruction_list instruction .)
    DIR             reduce using rule 29 (instruction_list -> instruction_list instruction .)
    QRA             reduce using rule 29 (instruction_list -> instruction_list instruction .)
    [               reduce using rule 29 (instruction_list -> instruction_list instruction .)
    $end            reduce using rule 29 (instruction_list -> instruction_list instruction .)
    }               reduce using rule 29 (instruction_list -> instruction_list instruction .)


state 38

    (45) expression -> expression + . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 58
    array                          shift and go to state 29

state 39

    (46) expression -> expression MINUS . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 59
    array                          shift and go to state 29

state 40

    (47) expression -> expression TIMES . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 60
    array                          shift and go to state 29

state 41

    (48) expression -> expression DIVIDE . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 61
    array                          shift and go to state 29

state 42

    (4) var_assign -> ID EQUALS . expression
    (5) var_assign -> ID EQUALS . input
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    QRA             shift and go to state 35
    [               shift and go to state 36

    expression                     shift and go to state 62
    input                          shift and go to state 63
    array                          shift and go to state 29

state 43

    (2) incrementation -> ID INCREMENTATION .

    KHREJ           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KMEL            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    ID              reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KTEB            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    (               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MINUS           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    +               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    INT             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    FLOAT           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    STRING          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KHATE2          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    S7I7            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    WALO            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    JEREB           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    ILA             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    LKOLA           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MA7ED           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    DIR             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    QRA             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    [               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    $end            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    )               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    }               reduce using rule 2 (incrementation -> ID INCREMENTATION .)


state 44

    (3) decrementation -> ID DECREMENTATION .

    KHREJ           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KMEL            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    ID              reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KTEB            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    (               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MINUS           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    +               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    INT             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    FLOAT           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    STRING          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KHATE2          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    S7I7            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    WALO            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    JEREB           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    ILA             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    LKOLA           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MA7ED           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    DIR             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    QRA             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    [               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    $end            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    )               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    }               reduce using rule 3 (decrementation -> ID DECREMENTATION .)


state 45

    (67) printing -> KTEB ( . condition )
    (68) printing -> KTEB ( . incrementation )
    (69) printing -> KTEB ( . decrementation )
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 64
    ID              shift and go to state 69
    MINUS           shift and go to state 22
    +               shift and go to state 21
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 65
    incrementation                 shift and go to state 66
    decrementation                 shift and go to state 67
    expression                     shift and go to state 68
    array                          shift and go to state 29

state 46

    (49) expression -> ( expression . )
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    )               shift and go to state 70
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 47

    (52) expression -> ID .

    )               reduce using rule 52 (expression -> ID .)
    +               reduce using rule 52 (expression -> ID .)
    MINUS           reduce using rule 52 (expression -> ID .)
    TIMES           reduce using rule 52 (expression -> ID .)
    DIVIDE          reduce using rule 52 (expression -> ID .)
    KHREJ           reduce using rule 52 (expression -> ID .)
    KMEL            reduce using rule 52 (expression -> ID .)
    ID              reduce using rule 52 (expression -> ID .)
    KTEB            reduce using rule 52 (expression -> ID .)
    (               reduce using rule 52 (expression -> ID .)
    INT             reduce using rule 52 (expression -> ID .)
    FLOAT           reduce using rule 52 (expression -> ID .)
    STRING          reduce using rule 52 (expression -> ID .)
    KHATE2          reduce using rule 52 (expression -> ID .)
    S7I7            reduce using rule 52 (expression -> ID .)
    WALO            reduce using rule 52 (expression -> ID .)
    JEREB           reduce using rule 52 (expression -> ID .)
    ILA             reduce using rule 52 (expression -> ID .)
    LKOLA           reduce using rule 52 (expression -> ID .)
    MA7ED           reduce using rule 52 (expression -> ID .)
    DIR             reduce using rule 52 (expression -> ID .)
    QRA             reduce using rule 52 (expression -> ID .)
    [               reduce using rule 52 (expression -> ID .)
    $end            reduce using rule 52 (expression -> ID .)
    ]               reduce using rule 52 (expression -> ID .)
    ,               reduce using rule 52 (expression -> ID .)
    }               reduce using rule 52 (expression -> ID .)
    ;               reduce using rule 52 (expression -> ID .)
    >               reduce using rule 52 (expression -> ID .)
    <               reduce using rule 52 (expression -> ID .)
    EQUALSCOMP      reduce using rule 52 (expression -> ID .)
    SUPEQUALS       reduce using rule 52 (expression -> ID .)
    INFEQUALS       reduce using rule 52 (expression -> ID .)
    DIFFERENT       reduce using rule 52 (expression -> ID .)
    WA              reduce using rule 52 (expression -> ID .)
    AW              reduce using rule 52 (expression -> ID .)


state 48

    (51) expression -> + expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    +               reduce using rule 51 (expression -> + expression .)
    MINUS           reduce using rule 51 (expression -> + expression .)
    KHREJ           reduce using rule 51 (expression -> + expression .)
    KMEL            reduce using rule 51 (expression -> + expression .)
    ID              reduce using rule 51 (expression -> + expression .)
    KTEB            reduce using rule 51 (expression -> + expression .)
    (               reduce using rule 51 (expression -> + expression .)
    INT             reduce using rule 51 (expression -> + expression .)
    FLOAT           reduce using rule 51 (expression -> + expression .)
    STRING          reduce using rule 51 (expression -> + expression .)
    KHATE2          reduce using rule 51 (expression -> + expression .)
    S7I7            reduce using rule 51 (expression -> + expression .)
    WALO            reduce using rule 51 (expression -> + expression .)
    JEREB           reduce using rule 51 (expression -> + expression .)
    ILA             reduce using rule 51 (expression -> + expression .)
    LKOLA           reduce using rule 51 (expression -> + expression .)
    MA7ED           reduce using rule 51 (expression -> + expression .)
    DIR             reduce using rule 51 (expression -> + expression .)
    QRA             reduce using rule 51 (expression -> + expression .)
    [               reduce using rule 51 (expression -> + expression .)
    $end            reduce using rule 51 (expression -> + expression .)
    )               reduce using rule 51 (expression -> + expression .)
    ]               reduce using rule 51 (expression -> + expression .)
    ,               reduce using rule 51 (expression -> + expression .)
    }               reduce using rule 51 (expression -> + expression .)
    ;               reduce using rule 51 (expression -> + expression .)
    >               reduce using rule 51 (expression -> + expression .)
    <               reduce using rule 51 (expression -> + expression .)
    EQUALSCOMP      reduce using rule 51 (expression -> + expression .)
    SUPEQUALS       reduce using rule 51 (expression -> + expression .)
    INFEQUALS       reduce using rule 51 (expression -> + expression .)
    DIFFERENT       reduce using rule 51 (expression -> + expression .)
    WA              reduce using rule 51 (expression -> + expression .)
    AW              reduce using rule 51 (expression -> + expression .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

  ! TIMES           [ reduce using rule 51 (expression -> + expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> + expression .) ]
  ! +               [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]


state 49

    (50) expression -> MINUS expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    +               reduce using rule 50 (expression -> MINUS expression .)
    MINUS           reduce using rule 50 (expression -> MINUS expression .)
    KHREJ           reduce using rule 50 (expression -> MINUS expression .)
    KMEL            reduce using rule 50 (expression -> MINUS expression .)
    ID              reduce using rule 50 (expression -> MINUS expression .)
    KTEB            reduce using rule 50 (expression -> MINUS expression .)
    (               reduce using rule 50 (expression -> MINUS expression .)
    INT             reduce using rule 50 (expression -> MINUS expression .)
    FLOAT           reduce using rule 50 (expression -> MINUS expression .)
    STRING          reduce using rule 50 (expression -> MINUS expression .)
    KHATE2          reduce using rule 50 (expression -> MINUS expression .)
    S7I7            reduce using rule 50 (expression -> MINUS expression .)
    WALO            reduce using rule 50 (expression -> MINUS expression .)
    JEREB           reduce using rule 50 (expression -> MINUS expression .)
    ILA             reduce using rule 50 (expression -> MINUS expression .)
    LKOLA           reduce using rule 50 (expression -> MINUS expression .)
    MA7ED           reduce using rule 50 (expression -> MINUS expression .)
    DIR             reduce using rule 50 (expression -> MINUS expression .)
    QRA             reduce using rule 50 (expression -> MINUS expression .)
    [               reduce using rule 50 (expression -> MINUS expression .)
    $end            reduce using rule 50 (expression -> MINUS expression .)
    )               reduce using rule 50 (expression -> MINUS expression .)
    ]               reduce using rule 50 (expression -> MINUS expression .)
    ,               reduce using rule 50 (expression -> MINUS expression .)
    }               reduce using rule 50 (expression -> MINUS expression .)
    ;               reduce using rule 50 (expression -> MINUS expression .)
    >               reduce using rule 50 (expression -> MINUS expression .)
    <               reduce using rule 50 (expression -> MINUS expression .)
    EQUALSCOMP      reduce using rule 50 (expression -> MINUS expression .)
    SUPEQUALS       reduce using rule 50 (expression -> MINUS expression .)
    INFEQUALS       reduce using rule 50 (expression -> MINUS expression .)
    DIFFERENT       reduce using rule 50 (expression -> MINUS expression .)
    WA              reduce using rule 50 (expression -> MINUS expression .)
    AW              reduce using rule 50 (expression -> MINUS expression .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

  ! TIMES           [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! +               [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]


state 50

    (55) try -> JEREB { . instruction_list } MASD9CH { instruction_list }
    (56) try -> JEREB { . instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (28) instruction_list -> . instruction
    (29) instruction_list -> . instruction_list instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    }               reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction_list               shift and go to state 71
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 51

    (6) if -> ILA ( . condition ) { instruction_list }
    (7) if -> ILA ( . condition ) { instruction_list } WLA { instruction_list }
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 64
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 72
    expression                     shift and go to state 68
    array                          shift and go to state 29

state 52

    (8) for -> LKOLA ( . var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> LKOLA ( . var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> LKOLA ( . expression ; condition ; incrementation ) { instruction_list }
    (11) for -> LKOLA ( . expression ; condition ; decrementation ) { instruction_list }
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    ID              shift and go to state 75
    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    var_assign                     shift and go to state 73
    expression                     shift and go to state 74
    array                          shift and go to state 29

state 53

    (12) while -> MA7ED ( . condition ) { instruction_list }
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 64
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 76
    expression                     shift and go to state 68
    array                          shift and go to state 29

state 54

    (13) doWhile -> DIR { . instruction_list } MA7ED ( condition )
    (28) instruction_list -> . instruction
    (29) instruction_list -> . instruction_list instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    }               reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction_list               shift and go to state 77
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 55

    (53) input -> QRA ( . expression )
    (54) input -> QRA ( . )
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    )               shift and go to state 79
    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 78
    array                          shift and go to state 29

state 56

    (66) array -> [ arraylist . ]
    (65) arraylist -> arraylist . , expression

    ]               shift and go to state 80
    ,               shift and go to state 81


state 57

    (64) arraylist -> expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    ]               reduce using rule 64 (arraylist -> expression .)
    ,               reduce using rule 64 (arraylist -> expression .)
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 58

    (45) expression -> expression + expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    +               reduce using rule 45 (expression -> expression + expression .)
    MINUS           reduce using rule 45 (expression -> expression + expression .)
    KHREJ           reduce using rule 45 (expression -> expression + expression .)
    KMEL            reduce using rule 45 (expression -> expression + expression .)
    ID              reduce using rule 45 (expression -> expression + expression .)
    KTEB            reduce using rule 45 (expression -> expression + expression .)
    (               reduce using rule 45 (expression -> expression + expression .)
    INT             reduce using rule 45 (expression -> expression + expression .)
    FLOAT           reduce using rule 45 (expression -> expression + expression .)
    STRING          reduce using rule 45 (expression -> expression + expression .)
    KHATE2          reduce using rule 45 (expression -> expression + expression .)
    S7I7            reduce using rule 45 (expression -> expression + expression .)
    WALO            reduce using rule 45 (expression -> expression + expression .)
    JEREB           reduce using rule 45 (expression -> expression + expression .)
    ILA             reduce using rule 45 (expression -> expression + expression .)
    LKOLA           reduce using rule 45 (expression -> expression + expression .)
    MA7ED           reduce using rule 45 (expression -> expression + expression .)
    DIR             reduce using rule 45 (expression -> expression + expression .)
    QRA             reduce using rule 45 (expression -> expression + expression .)
    [               reduce using rule 45 (expression -> expression + expression .)
    $end            reduce using rule 45 (expression -> expression + expression .)
    )               reduce using rule 45 (expression -> expression + expression .)
    ]               reduce using rule 45 (expression -> expression + expression .)
    ,               reduce using rule 45 (expression -> expression + expression .)
    }               reduce using rule 45 (expression -> expression + expression .)
    ;               reduce using rule 45 (expression -> expression + expression .)
    >               reduce using rule 45 (expression -> expression + expression .)
    <               reduce using rule 45 (expression -> expression + expression .)
    EQUALSCOMP      reduce using rule 45 (expression -> expression + expression .)
    SUPEQUALS       reduce using rule 45 (expression -> expression + expression .)
    INFEQUALS       reduce using rule 45 (expression -> expression + expression .)
    DIFFERENT       reduce using rule 45 (expression -> expression + expression .)
    WA              reduce using rule 45 (expression -> expression + expression .)
    AW              reduce using rule 45 (expression -> expression + expression .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

  ! TIMES           [ reduce using rule 45 (expression -> expression + expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]


state 59

    (46) expression -> expression MINUS expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    +               reduce using rule 46 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 46 (expression -> expression MINUS expression .)
    KHREJ           reduce using rule 46 (expression -> expression MINUS expression .)
    KMEL            reduce using rule 46 (expression -> expression MINUS expression .)
    ID              reduce using rule 46 (expression -> expression MINUS expression .)
    KTEB            reduce using rule 46 (expression -> expression MINUS expression .)
    (               reduce using rule 46 (expression -> expression MINUS expression .)
    INT             reduce using rule 46 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 46 (expression -> expression MINUS expression .)
    STRING          reduce using rule 46 (expression -> expression MINUS expression .)
    KHATE2          reduce using rule 46 (expression -> expression MINUS expression .)
    S7I7            reduce using rule 46 (expression -> expression MINUS expression .)
    WALO            reduce using rule 46 (expression -> expression MINUS expression .)
    JEREB           reduce using rule 46 (expression -> expression MINUS expression .)
    ILA             reduce using rule 46 (expression -> expression MINUS expression .)
    LKOLA           reduce using rule 46 (expression -> expression MINUS expression .)
    MA7ED           reduce using rule 46 (expression -> expression MINUS expression .)
    DIR             reduce using rule 46 (expression -> expression MINUS expression .)
    QRA             reduce using rule 46 (expression -> expression MINUS expression .)
    [               reduce using rule 46 (expression -> expression MINUS expression .)
    $end            reduce using rule 46 (expression -> expression MINUS expression .)
    )               reduce using rule 46 (expression -> expression MINUS expression .)
    ]               reduce using rule 46 (expression -> expression MINUS expression .)
    ,               reduce using rule 46 (expression -> expression MINUS expression .)
    }               reduce using rule 46 (expression -> expression MINUS expression .)
    ;               reduce using rule 46 (expression -> expression MINUS expression .)
    >               reduce using rule 46 (expression -> expression MINUS expression .)
    <               reduce using rule 46 (expression -> expression MINUS expression .)
    EQUALSCOMP      reduce using rule 46 (expression -> expression MINUS expression .)
    SUPEQUALS       reduce using rule 46 (expression -> expression MINUS expression .)
    INFEQUALS       reduce using rule 46 (expression -> expression MINUS expression .)
    DIFFERENT       reduce using rule 46 (expression -> expression MINUS expression .)
    WA              reduce using rule 46 (expression -> expression MINUS expression .)
    AW              reduce using rule 46 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

  ! TIMES           [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! +               [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]


state 60

    (47) expression -> expression TIMES expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    +               reduce using rule 47 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 47 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 47 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 47 (expression -> expression TIMES expression .)
    KHREJ           reduce using rule 47 (expression -> expression TIMES expression .)
    KMEL            reduce using rule 47 (expression -> expression TIMES expression .)
    ID              reduce using rule 47 (expression -> expression TIMES expression .)
    KTEB            reduce using rule 47 (expression -> expression TIMES expression .)
    (               reduce using rule 47 (expression -> expression TIMES expression .)
    INT             reduce using rule 47 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 47 (expression -> expression TIMES expression .)
    STRING          reduce using rule 47 (expression -> expression TIMES expression .)
    KHATE2          reduce using rule 47 (expression -> expression TIMES expression .)
    S7I7            reduce using rule 47 (expression -> expression TIMES expression .)
    WALO            reduce using rule 47 (expression -> expression TIMES expression .)
    JEREB           reduce using rule 47 (expression -> expression TIMES expression .)
    ILA             reduce using rule 47 (expression -> expression TIMES expression .)
    LKOLA           reduce using rule 47 (expression -> expression TIMES expression .)
    MA7ED           reduce using rule 47 (expression -> expression TIMES expression .)
    DIR             reduce using rule 47 (expression -> expression TIMES expression .)
    QRA             reduce using rule 47 (expression -> expression TIMES expression .)
    [               reduce using rule 47 (expression -> expression TIMES expression .)
    $end            reduce using rule 47 (expression -> expression TIMES expression .)
    )               reduce using rule 47 (expression -> expression TIMES expression .)
    ]               reduce using rule 47 (expression -> expression TIMES expression .)
    ,               reduce using rule 47 (expression -> expression TIMES expression .)
    }               reduce using rule 47 (expression -> expression TIMES expression .)
    ;               reduce using rule 47 (expression -> expression TIMES expression .)
    >               reduce using rule 47 (expression -> expression TIMES expression .)
    <               reduce using rule 47 (expression -> expression TIMES expression .)
    EQUALSCOMP      reduce using rule 47 (expression -> expression TIMES expression .)
    SUPEQUALS       reduce using rule 47 (expression -> expression TIMES expression .)
    INFEQUALS       reduce using rule 47 (expression -> expression TIMES expression .)
    DIFFERENT       reduce using rule 47 (expression -> expression TIMES expression .)
    WA              reduce using rule 47 (expression -> expression TIMES expression .)
    AW              reduce using rule 47 (expression -> expression TIMES expression .)

  ! +               [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! DIVIDE          [ shift and go to state 41 ]


state 61

    (48) expression -> expression DIVIDE expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    +               reduce using rule 48 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 48 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 48 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 48 (expression -> expression DIVIDE expression .)
    KHREJ           reduce using rule 48 (expression -> expression DIVIDE expression .)
    KMEL            reduce using rule 48 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 48 (expression -> expression DIVIDE expression .)
    KTEB            reduce using rule 48 (expression -> expression DIVIDE expression .)
    (               reduce using rule 48 (expression -> expression DIVIDE expression .)
    INT             reduce using rule 48 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 48 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 48 (expression -> expression DIVIDE expression .)
    KHATE2          reduce using rule 48 (expression -> expression DIVIDE expression .)
    S7I7            reduce using rule 48 (expression -> expression DIVIDE expression .)
    WALO            reduce using rule 48 (expression -> expression DIVIDE expression .)
    JEREB           reduce using rule 48 (expression -> expression DIVIDE expression .)
    ILA             reduce using rule 48 (expression -> expression DIVIDE expression .)
    LKOLA           reduce using rule 48 (expression -> expression DIVIDE expression .)
    MA7ED           reduce using rule 48 (expression -> expression DIVIDE expression .)
    DIR             reduce using rule 48 (expression -> expression DIVIDE expression .)
    QRA             reduce using rule 48 (expression -> expression DIVIDE expression .)
    [               reduce using rule 48 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 48 (expression -> expression DIVIDE expression .)
    )               reduce using rule 48 (expression -> expression DIVIDE expression .)
    ]               reduce using rule 48 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 48 (expression -> expression DIVIDE expression .)
    }               reduce using rule 48 (expression -> expression DIVIDE expression .)
    ;               reduce using rule 48 (expression -> expression DIVIDE expression .)
    >               reduce using rule 48 (expression -> expression DIVIDE expression .)
    <               reduce using rule 48 (expression -> expression DIVIDE expression .)
    EQUALSCOMP      reduce using rule 48 (expression -> expression DIVIDE expression .)
    SUPEQUALS       reduce using rule 48 (expression -> expression DIVIDE expression .)
    INFEQUALS       reduce using rule 48 (expression -> expression DIVIDE expression .)
    DIFFERENT       reduce using rule 48 (expression -> expression DIVIDE expression .)
    WA              reduce using rule 48 (expression -> expression DIVIDE expression .)
    AW              reduce using rule 48 (expression -> expression DIVIDE expression .)

  ! +               [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! DIVIDE          [ shift and go to state 41 ]


state 62

    (4) var_assign -> ID EQUALS expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KMEL            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ID              reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KTEB            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    (               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    INT             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    FLOAT           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    STRING          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KHATE2          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    S7I7            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    WALO            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    JEREB           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ILA             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    LKOLA           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    MA7ED           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    DIR             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    QRA             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    [               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    $end            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    }               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ;               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

  ! MINUS           [ reduce using rule 4 (var_assign -> ID EQUALS expression .) ]
  ! +               [ reduce using rule 4 (var_assign -> ID EQUALS expression .) ]


state 63

    (5) var_assign -> ID EQUALS input .

    KHREJ           reduce using rule 5 (var_assign -> ID EQUALS input .)
    KMEL            reduce using rule 5 (var_assign -> ID EQUALS input .)
    ID              reduce using rule 5 (var_assign -> ID EQUALS input .)
    KTEB            reduce using rule 5 (var_assign -> ID EQUALS input .)
    (               reduce using rule 5 (var_assign -> ID EQUALS input .)
    MINUS           reduce using rule 5 (var_assign -> ID EQUALS input .)
    +               reduce using rule 5 (var_assign -> ID EQUALS input .)
    INT             reduce using rule 5 (var_assign -> ID EQUALS input .)
    FLOAT           reduce using rule 5 (var_assign -> ID EQUALS input .)
    STRING          reduce using rule 5 (var_assign -> ID EQUALS input .)
    KHATE2          reduce using rule 5 (var_assign -> ID EQUALS input .)
    S7I7            reduce using rule 5 (var_assign -> ID EQUALS input .)
    WALO            reduce using rule 5 (var_assign -> ID EQUALS input .)
    JEREB           reduce using rule 5 (var_assign -> ID EQUALS input .)
    ILA             reduce using rule 5 (var_assign -> ID EQUALS input .)
    LKOLA           reduce using rule 5 (var_assign -> ID EQUALS input .)
    MA7ED           reduce using rule 5 (var_assign -> ID EQUALS input .)
    DIR             reduce using rule 5 (var_assign -> ID EQUALS input .)
    QRA             reduce using rule 5 (var_assign -> ID EQUALS input .)
    [               reduce using rule 5 (var_assign -> ID EQUALS input .)
    $end            reduce using rule 5 (var_assign -> ID EQUALS input .)
    }               reduce using rule 5 (var_assign -> ID EQUALS input .)
    ;               reduce using rule 5 (var_assign -> ID EQUALS input .)


state 64

    (30) condition -> ( . condition ) AW ( condition )
    (31) condition -> ( . condition ) WA ( condition )
    (34) condition -> ( . condition ) WA condition
    (35) condition -> ( . condition ) AW condition
    (49) expression -> ( . expression )
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 64
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 82
    expression                     shift and go to state 83
    array                          shift and go to state 29

state 65

    (67) printing -> KTEB ( condition . )
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               shift and go to state 84
    WA              shift and go to state 85
    AW              shift and go to state 86


state 66

    (68) printing -> KTEB ( incrementation . )

    )               shift and go to state 87


state 67

    (69) printing -> KTEB ( decrementation . )

    )               shift and go to state 88


state 68

    (38) condition -> expression . > expression
    (39) condition -> expression . < expression
    (40) condition -> expression . EQUALSCOMP expression
    (41) condition -> expression . SUPEQUALS expression
    (42) condition -> expression . INFEQUALS expression
    (43) condition -> expression . DIFFERENT expression
    (44) condition -> expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    >               shift and go to state 89
    <               shift and go to state 90
    EQUALSCOMP      shift and go to state 91
    SUPEQUALS       shift and go to state 92
    INFEQUALS       shift and go to state 93
    DIFFERENT       shift and go to state 94
    )               reduce using rule 44 (condition -> expression .)
    WA              reduce using rule 44 (condition -> expression .)
    AW              reduce using rule 44 (condition -> expression .)
    ;               reduce using rule 44 (condition -> expression .)
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 69

    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION
    (52) expression -> ID .

    INCREMENTATION  shift and go to state 43
    DECREMENTATION  shift and go to state 44
    >               reduce using rule 52 (expression -> ID .)
    <               reduce using rule 52 (expression -> ID .)
    EQUALSCOMP      reduce using rule 52 (expression -> ID .)
    SUPEQUALS       reduce using rule 52 (expression -> ID .)
    INFEQUALS       reduce using rule 52 (expression -> ID .)
    DIFFERENT       reduce using rule 52 (expression -> ID .)
    +               reduce using rule 52 (expression -> ID .)
    MINUS           reduce using rule 52 (expression -> ID .)
    TIMES           reduce using rule 52 (expression -> ID .)
    DIVIDE          reduce using rule 52 (expression -> ID .)
    )               reduce using rule 52 (expression -> ID .)
    WA              reduce using rule 52 (expression -> ID .)
    AW              reduce using rule 52 (expression -> ID .)


state 70

    (49) expression -> ( expression ) .

    +               reduce using rule 49 (expression -> ( expression ) .)
    MINUS           reduce using rule 49 (expression -> ( expression ) .)
    TIMES           reduce using rule 49 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 49 (expression -> ( expression ) .)
    KHREJ           reduce using rule 49 (expression -> ( expression ) .)
    KMEL            reduce using rule 49 (expression -> ( expression ) .)
    ID              reduce using rule 49 (expression -> ( expression ) .)
    KTEB            reduce using rule 49 (expression -> ( expression ) .)
    (               reduce using rule 49 (expression -> ( expression ) .)
    INT             reduce using rule 49 (expression -> ( expression ) .)
    FLOAT           reduce using rule 49 (expression -> ( expression ) .)
    STRING          reduce using rule 49 (expression -> ( expression ) .)
    KHATE2          reduce using rule 49 (expression -> ( expression ) .)
    S7I7            reduce using rule 49 (expression -> ( expression ) .)
    WALO            reduce using rule 49 (expression -> ( expression ) .)
    JEREB           reduce using rule 49 (expression -> ( expression ) .)
    ILA             reduce using rule 49 (expression -> ( expression ) .)
    LKOLA           reduce using rule 49 (expression -> ( expression ) .)
    MA7ED           reduce using rule 49 (expression -> ( expression ) .)
    DIR             reduce using rule 49 (expression -> ( expression ) .)
    QRA             reduce using rule 49 (expression -> ( expression ) .)
    [               reduce using rule 49 (expression -> ( expression ) .)
    $end            reduce using rule 49 (expression -> ( expression ) .)
    )               reduce using rule 49 (expression -> ( expression ) .)
    ]               reduce using rule 49 (expression -> ( expression ) .)
    ,               reduce using rule 49 (expression -> ( expression ) .)
    }               reduce using rule 49 (expression -> ( expression ) .)
    ;               reduce using rule 49 (expression -> ( expression ) .)
    >               reduce using rule 49 (expression -> ( expression ) .)
    <               reduce using rule 49 (expression -> ( expression ) .)
    EQUALSCOMP      reduce using rule 49 (expression -> ( expression ) .)
    SUPEQUALS       reduce using rule 49 (expression -> ( expression ) .)
    INFEQUALS       reduce using rule 49 (expression -> ( expression ) .)
    DIFFERENT       reduce using rule 49 (expression -> ( expression ) .)
    WA              reduce using rule 49 (expression -> ( expression ) .)
    AW              reduce using rule 49 (expression -> ( expression ) .)


state 71

    (55) try -> JEREB { instruction_list . } MASD9CH { instruction_list }
    (56) try -> JEREB { instruction_list . } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (29) instruction_list -> instruction_list . instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 95
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! }               [ reduce using rule 70 (empty -> .) ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction                    shift and go to state 37
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 72

    (6) if -> ILA ( condition . ) { instruction_list }
    (7) if -> ILA ( condition . ) { instruction_list } WLA { instruction_list }
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               shift and go to state 96
    WA              shift and go to state 85
    AW              shift and go to state 86


state 73

    (8) for -> LKOLA ( var_assign . ; condition ; incrementation ) { instruction_list }
    (9) for -> LKOLA ( var_assign . ; condition ; decrementation ) { instruction_list }

    ;               shift and go to state 97


state 74

    (10) for -> LKOLA ( expression . ; condition ; incrementation ) { instruction_list }
    (11) for -> LKOLA ( expression . ; condition ; decrementation ) { instruction_list }
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    ;               shift and go to state 98
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 75

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input
    (52) expression -> ID .

    EQUALS          shift and go to state 42
    ;               reduce using rule 52 (expression -> ID .)
    +               reduce using rule 52 (expression -> ID .)
    MINUS           reduce using rule 52 (expression -> ID .)
    TIMES           reduce using rule 52 (expression -> ID .)
    DIVIDE          reduce using rule 52 (expression -> ID .)


state 76

    (12) while -> MA7ED ( condition . ) { instruction_list }
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               shift and go to state 99
    WA              shift and go to state 85
    AW              shift and go to state 86


state 77

    (13) doWhile -> DIR { instruction_list . } MA7ED ( condition )
    (29) instruction_list -> instruction_list . instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 100
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! }               [ reduce using rule 70 (empty -> .) ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction                    shift and go to state 37
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 78

    (53) input -> QRA ( expression . )
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    )               shift and go to state 101
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 79

    (54) input -> QRA ( ) .

    KHREJ           reduce using rule 54 (input -> QRA ( ) .)
    KMEL            reduce using rule 54 (input -> QRA ( ) .)
    ID              reduce using rule 54 (input -> QRA ( ) .)
    KTEB            reduce using rule 54 (input -> QRA ( ) .)
    (               reduce using rule 54 (input -> QRA ( ) .)
    MINUS           reduce using rule 54 (input -> QRA ( ) .)
    +               reduce using rule 54 (input -> QRA ( ) .)
    INT             reduce using rule 54 (input -> QRA ( ) .)
    FLOAT           reduce using rule 54 (input -> QRA ( ) .)
    STRING          reduce using rule 54 (input -> QRA ( ) .)
    KHATE2          reduce using rule 54 (input -> QRA ( ) .)
    S7I7            reduce using rule 54 (input -> QRA ( ) .)
    WALO            reduce using rule 54 (input -> QRA ( ) .)
    JEREB           reduce using rule 54 (input -> QRA ( ) .)
    ILA             reduce using rule 54 (input -> QRA ( ) .)
    LKOLA           reduce using rule 54 (input -> QRA ( ) .)
    MA7ED           reduce using rule 54 (input -> QRA ( ) .)
    DIR             reduce using rule 54 (input -> QRA ( ) .)
    QRA             reduce using rule 54 (input -> QRA ( ) .)
    [               reduce using rule 54 (input -> QRA ( ) .)
    $end            reduce using rule 54 (input -> QRA ( ) .)
    }               reduce using rule 54 (input -> QRA ( ) .)
    ;               reduce using rule 54 (input -> QRA ( ) .)


state 80

    (66) array -> [ arraylist ] .

    +               reduce using rule 66 (array -> [ arraylist ] .)
    MINUS           reduce using rule 66 (array -> [ arraylist ] .)
    TIMES           reduce using rule 66 (array -> [ arraylist ] .)
    DIVIDE          reduce using rule 66 (array -> [ arraylist ] .)
    KHREJ           reduce using rule 66 (array -> [ arraylist ] .)
    KMEL            reduce using rule 66 (array -> [ arraylist ] .)
    ID              reduce using rule 66 (array -> [ arraylist ] .)
    KTEB            reduce using rule 66 (array -> [ arraylist ] .)
    (               reduce using rule 66 (array -> [ arraylist ] .)
    INT             reduce using rule 66 (array -> [ arraylist ] .)
    FLOAT           reduce using rule 66 (array -> [ arraylist ] .)
    STRING          reduce using rule 66 (array -> [ arraylist ] .)
    KHATE2          reduce using rule 66 (array -> [ arraylist ] .)
    S7I7            reduce using rule 66 (array -> [ arraylist ] .)
    WALO            reduce using rule 66 (array -> [ arraylist ] .)
    JEREB           reduce using rule 66 (array -> [ arraylist ] .)
    ILA             reduce using rule 66 (array -> [ arraylist ] .)
    LKOLA           reduce using rule 66 (array -> [ arraylist ] .)
    MA7ED           reduce using rule 66 (array -> [ arraylist ] .)
    DIR             reduce using rule 66 (array -> [ arraylist ] .)
    QRA             reduce using rule 66 (array -> [ arraylist ] .)
    [               reduce using rule 66 (array -> [ arraylist ] .)
    $end            reduce using rule 66 (array -> [ arraylist ] .)
    )               reduce using rule 66 (array -> [ arraylist ] .)
    ]               reduce using rule 66 (array -> [ arraylist ] .)
    ,               reduce using rule 66 (array -> [ arraylist ] .)
    }               reduce using rule 66 (array -> [ arraylist ] .)
    ;               reduce using rule 66 (array -> [ arraylist ] .)
    >               reduce using rule 66 (array -> [ arraylist ] .)
    <               reduce using rule 66 (array -> [ arraylist ] .)
    EQUALSCOMP      reduce using rule 66 (array -> [ arraylist ] .)
    SUPEQUALS       reduce using rule 66 (array -> [ arraylist ] .)
    INFEQUALS       reduce using rule 66 (array -> [ arraylist ] .)
    DIFFERENT       reduce using rule 66 (array -> [ arraylist ] .)
    WA              reduce using rule 66 (array -> [ arraylist ] .)
    AW              reduce using rule 66 (array -> [ arraylist ] .)


state 81

    (65) arraylist -> arraylist , . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 102
    array                          shift and go to state 29

state 82

    (30) condition -> ( condition . ) AW ( condition )
    (31) condition -> ( condition . ) WA ( condition )
    (34) condition -> ( condition . ) WA condition
    (35) condition -> ( condition . ) AW condition
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               shift and go to state 103
    WA              shift and go to state 85
    AW              shift and go to state 86


state 83

    (49) expression -> ( expression . )
    (38) condition -> expression . > expression
    (39) condition -> expression . < expression
    (40) condition -> expression . EQUALSCOMP expression
    (41) condition -> expression . SUPEQUALS expression
    (42) condition -> expression . INFEQUALS expression
    (43) condition -> expression . DIFFERENT expression
    (44) condition -> expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    )               shift and go to state 70
    >               shift and go to state 89
    <               shift and go to state 90
    EQUALSCOMP      shift and go to state 91
    SUPEQUALS       shift and go to state 92
    INFEQUALS       shift and go to state 93
    DIFFERENT       shift and go to state 94
    WA              reduce using rule 44 (condition -> expression .)
    AW              reduce using rule 44 (condition -> expression .)
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

  ! )               [ reduce using rule 44 (condition -> expression .) ]


state 84

    (67) printing -> KTEB ( condition ) .

    KHREJ           reduce using rule 67 (printing -> KTEB ( condition ) .)
    KMEL            reduce using rule 67 (printing -> KTEB ( condition ) .)
    ID              reduce using rule 67 (printing -> KTEB ( condition ) .)
    KTEB            reduce using rule 67 (printing -> KTEB ( condition ) .)
    (               reduce using rule 67 (printing -> KTEB ( condition ) .)
    MINUS           reduce using rule 67 (printing -> KTEB ( condition ) .)
    +               reduce using rule 67 (printing -> KTEB ( condition ) .)
    INT             reduce using rule 67 (printing -> KTEB ( condition ) .)
    FLOAT           reduce using rule 67 (printing -> KTEB ( condition ) .)
    STRING          reduce using rule 67 (printing -> KTEB ( condition ) .)
    KHATE2          reduce using rule 67 (printing -> KTEB ( condition ) .)
    S7I7            reduce using rule 67 (printing -> KTEB ( condition ) .)
    WALO            reduce using rule 67 (printing -> KTEB ( condition ) .)
    JEREB           reduce using rule 67 (printing -> KTEB ( condition ) .)
    ILA             reduce using rule 67 (printing -> KTEB ( condition ) .)
    LKOLA           reduce using rule 67 (printing -> KTEB ( condition ) .)
    MA7ED           reduce using rule 67 (printing -> KTEB ( condition ) .)
    DIR             reduce using rule 67 (printing -> KTEB ( condition ) .)
    QRA             reduce using rule 67 (printing -> KTEB ( condition ) .)
    [               reduce using rule 67 (printing -> KTEB ( condition ) .)
    $end            reduce using rule 67 (printing -> KTEB ( condition ) .)
    }               reduce using rule 67 (printing -> KTEB ( condition ) .)


state 85

    (32) condition -> condition WA . ( condition )
    (36) condition -> condition WA . condition
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 105
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 104
    expression                     shift and go to state 68
    array                          shift and go to state 29

state 86

    (33) condition -> condition AW . ( condition )
    (37) condition -> condition AW . condition
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 107
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 106
    expression                     shift and go to state 68
    array                          shift and go to state 29

state 87

    (68) printing -> KTEB ( incrementation ) .

    KHREJ           reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    KMEL            reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    ID              reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    KTEB            reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    (               reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    MINUS           reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    +               reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    INT             reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    FLOAT           reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    STRING          reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    KHATE2          reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    S7I7            reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    WALO            reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    JEREB           reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    ILA             reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    LKOLA           reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    MA7ED           reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    DIR             reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    QRA             reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    [               reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    $end            reduce using rule 68 (printing -> KTEB ( incrementation ) .)
    }               reduce using rule 68 (printing -> KTEB ( incrementation ) .)


state 88

    (69) printing -> KTEB ( decrementation ) .

    KHREJ           reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    KMEL            reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    ID              reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    KTEB            reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    (               reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    MINUS           reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    +               reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    INT             reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    FLOAT           reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    STRING          reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    KHATE2          reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    S7I7            reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    WALO            reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    JEREB           reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    ILA             reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    LKOLA           reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    MA7ED           reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    DIR             reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    QRA             reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    [               reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    $end            reduce using rule 69 (printing -> KTEB ( decrementation ) .)
    }               reduce using rule 69 (printing -> KTEB ( decrementation ) .)


state 89

    (38) condition -> expression > . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 108
    array                          shift and go to state 29

state 90

    (39) condition -> expression < . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 109
    array                          shift and go to state 29

state 91

    (40) condition -> expression EQUALSCOMP . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 110
    array                          shift and go to state 29

state 92

    (41) condition -> expression SUPEQUALS . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 111
    array                          shift and go to state 29

state 93

    (42) condition -> expression INFEQUALS . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 112
    array                          shift and go to state 29

state 94

    (43) condition -> expression DIFFERENT . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 20
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 113
    array                          shift and go to state 29

state 95

    (55) try -> JEREB { instruction_list } . MASD9CH { instruction_list }
    (56) try -> JEREB { instruction_list } . MASD9CH { instruction_list } AKHIRAN { instruction_list }

    MASD9CH         shift and go to state 114


state 96

    (6) if -> ILA ( condition ) . { instruction_list }
    (7) if -> ILA ( condition ) . { instruction_list } WLA { instruction_list }

    {               shift and go to state 115


state 97

    (8) for -> LKOLA ( var_assign ; . condition ; incrementation ) { instruction_list }
    (9) for -> LKOLA ( var_assign ; . condition ; decrementation ) { instruction_list }
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 64
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 116
    expression                     shift and go to state 68
    array                          shift and go to state 29

state 98

    (10) for -> LKOLA ( expression ; . condition ; incrementation ) { instruction_list }
    (11) for -> LKOLA ( expression ; . condition ; decrementation ) { instruction_list }
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 64
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    expression                     shift and go to state 68
    condition                      shift and go to state 117
    array                          shift and go to state 29

state 99

    (12) while -> MA7ED ( condition ) . { instruction_list }

    {               shift and go to state 118


state 100

    (13) doWhile -> DIR { instruction_list } . MA7ED ( condition )

    MA7ED           shift and go to state 119


state 101

    (53) input -> QRA ( expression ) .

    KHREJ           reduce using rule 53 (input -> QRA ( expression ) .)
    KMEL            reduce using rule 53 (input -> QRA ( expression ) .)
    ID              reduce using rule 53 (input -> QRA ( expression ) .)
    KTEB            reduce using rule 53 (input -> QRA ( expression ) .)
    (               reduce using rule 53 (input -> QRA ( expression ) .)
    MINUS           reduce using rule 53 (input -> QRA ( expression ) .)
    +               reduce using rule 53 (input -> QRA ( expression ) .)
    INT             reduce using rule 53 (input -> QRA ( expression ) .)
    FLOAT           reduce using rule 53 (input -> QRA ( expression ) .)
    STRING          reduce using rule 53 (input -> QRA ( expression ) .)
    KHATE2          reduce using rule 53 (input -> QRA ( expression ) .)
    S7I7            reduce using rule 53 (input -> QRA ( expression ) .)
    WALO            reduce using rule 53 (input -> QRA ( expression ) .)
    JEREB           reduce using rule 53 (input -> QRA ( expression ) .)
    ILA             reduce using rule 53 (input -> QRA ( expression ) .)
    LKOLA           reduce using rule 53 (input -> QRA ( expression ) .)
    MA7ED           reduce using rule 53 (input -> QRA ( expression ) .)
    DIR             reduce using rule 53 (input -> QRA ( expression ) .)
    QRA             reduce using rule 53 (input -> QRA ( expression ) .)
    [               reduce using rule 53 (input -> QRA ( expression ) .)
    $end            reduce using rule 53 (input -> QRA ( expression ) .)
    }               reduce using rule 53 (input -> QRA ( expression ) .)
    ;               reduce using rule 53 (input -> QRA ( expression ) .)


state 102

    (65) arraylist -> arraylist , expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    ]               reduce using rule 65 (arraylist -> arraylist , expression .)
    ,               reduce using rule 65 (arraylist -> arraylist , expression .)
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 103

    (30) condition -> ( condition ) . AW ( condition )
    (31) condition -> ( condition ) . WA ( condition )
    (34) condition -> ( condition ) . WA condition
    (35) condition -> ( condition ) . AW condition

    AW              shift and go to state 120
    WA              shift and go to state 121


state 104

    (36) condition -> condition WA condition .
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               reduce using rule 36 (condition -> condition WA condition .)
    WA              reduce using rule 36 (condition -> condition WA condition .)
    AW              reduce using rule 36 (condition -> condition WA condition .)
    ;               reduce using rule 36 (condition -> condition WA condition .)

  ! WA              [ shift and go to state 85 ]
  ! AW              [ shift and go to state 86 ]


state 105

    (32) condition -> condition WA ( . condition )
    (30) condition -> ( . condition ) AW ( condition )
    (31) condition -> ( . condition ) WA ( condition )
    (34) condition -> ( . condition ) WA condition
    (35) condition -> ( . condition ) AW condition
    (49) expression -> ( . expression )
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 64
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 122
    expression                     shift and go to state 83
    array                          shift and go to state 29

state 106

    (37) condition -> condition AW condition .
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               reduce using rule 37 (condition -> condition AW condition .)
    WA              reduce using rule 37 (condition -> condition AW condition .)
    AW              reduce using rule 37 (condition -> condition AW condition .)
    ;               reduce using rule 37 (condition -> condition AW condition .)

  ! WA              [ shift and go to state 85 ]
  ! AW              [ shift and go to state 86 ]


state 107

    (33) condition -> condition AW ( . condition )
    (30) condition -> ( . condition ) AW ( condition )
    (31) condition -> ( . condition ) WA ( condition )
    (34) condition -> ( . condition ) WA condition
    (35) condition -> ( . condition ) AW condition
    (49) expression -> ( . expression )
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 64
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 123
    expression                     shift and go to state 83
    array                          shift and go to state 29

state 108

    (38) condition -> expression > expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    )               reduce using rule 38 (condition -> expression > expression .)
    WA              reduce using rule 38 (condition -> expression > expression .)
    AW              reduce using rule 38 (condition -> expression > expression .)
    ;               reduce using rule 38 (condition -> expression > expression .)
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 109

    (39) condition -> expression < expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    )               reduce using rule 39 (condition -> expression < expression .)
    WA              reduce using rule 39 (condition -> expression < expression .)
    AW              reduce using rule 39 (condition -> expression < expression .)
    ;               reduce using rule 39 (condition -> expression < expression .)
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 110

    (40) condition -> expression EQUALSCOMP expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    )               reduce using rule 40 (condition -> expression EQUALSCOMP expression .)
    WA              reduce using rule 40 (condition -> expression EQUALSCOMP expression .)
    AW              reduce using rule 40 (condition -> expression EQUALSCOMP expression .)
    ;               reduce using rule 40 (condition -> expression EQUALSCOMP expression .)
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 111

    (41) condition -> expression SUPEQUALS expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    )               reduce using rule 41 (condition -> expression SUPEQUALS expression .)
    WA              reduce using rule 41 (condition -> expression SUPEQUALS expression .)
    AW              reduce using rule 41 (condition -> expression SUPEQUALS expression .)
    ;               reduce using rule 41 (condition -> expression SUPEQUALS expression .)
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 112

    (42) condition -> expression INFEQUALS expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    )               reduce using rule 42 (condition -> expression INFEQUALS expression .)
    WA              reduce using rule 42 (condition -> expression INFEQUALS expression .)
    AW              reduce using rule 42 (condition -> expression INFEQUALS expression .)
    ;               reduce using rule 42 (condition -> expression INFEQUALS expression .)
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 113

    (43) condition -> expression DIFFERENT expression .
    (45) expression -> expression . + expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression

    )               reduce using rule 43 (condition -> expression DIFFERENT expression .)
    WA              reduce using rule 43 (condition -> expression DIFFERENT expression .)
    AW              reduce using rule 43 (condition -> expression DIFFERENT expression .)
    ;               reduce using rule 43 (condition -> expression DIFFERENT expression .)
    +               shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 114

    (55) try -> JEREB { instruction_list } MASD9CH . { instruction_list }
    (56) try -> JEREB { instruction_list } MASD9CH . { instruction_list } AKHIRAN { instruction_list }

    {               shift and go to state 124


state 115

    (6) if -> ILA ( condition ) { . instruction_list }
    (7) if -> ILA ( condition ) { . instruction_list } WLA { instruction_list }
    (28) instruction_list -> . instruction
    (29) instruction_list -> . instruction_list instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    }               reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction_list               shift and go to state 125
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 116

    (8) for -> LKOLA ( var_assign ; condition . ; incrementation ) { instruction_list }
    (9) for -> LKOLA ( var_assign ; condition . ; decrementation ) { instruction_list }
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    ;               shift and go to state 126
    WA              shift and go to state 85
    AW              shift and go to state 86


state 117

    (10) for -> LKOLA ( expression ; condition . ; incrementation ) { instruction_list }
    (11) for -> LKOLA ( expression ; condition . ; decrementation ) { instruction_list }
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    ;               shift and go to state 127
    WA              shift and go to state 85
    AW              shift and go to state 86


state 118

    (12) while -> MA7ED ( condition ) { . instruction_list }
    (28) instruction_list -> . instruction
    (29) instruction_list -> . instruction_list instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    }               reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction_list               shift and go to state 128
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 119

    (13) doWhile -> DIR { instruction_list } MA7ED . ( condition )

    (               shift and go to state 129


state 120

    (30) condition -> ( condition ) AW . ( condition )
    (35) condition -> ( condition ) AW . condition
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 130
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 131
    expression                     shift and go to state 68
    array                          shift and go to state 29

state 121

    (31) condition -> ( condition ) WA . ( condition )
    (34) condition -> ( condition ) WA . condition
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 132
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 133
    expression                     shift and go to state 68
    array                          shift and go to state 29

state 122

    (32) condition -> condition WA ( condition . )
    (30) condition -> ( condition . ) AW ( condition )
    (31) condition -> ( condition . ) WA ( condition )
    (34) condition -> ( condition . ) WA condition
    (35) condition -> ( condition . ) AW condition
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               shift and go to state 134
    WA              shift and go to state 85
    AW              shift and go to state 86


state 123

    (33) condition -> condition AW ( condition . )
    (30) condition -> ( condition . ) AW ( condition )
    (31) condition -> ( condition . ) WA ( condition )
    (34) condition -> ( condition . ) WA condition
    (35) condition -> ( condition . ) AW condition
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               shift and go to state 135
    WA              shift and go to state 85
    AW              shift and go to state 86


state 124

    (55) try -> JEREB { instruction_list } MASD9CH { . instruction_list }
    (56) try -> JEREB { instruction_list } MASD9CH { . instruction_list } AKHIRAN { instruction_list }
    (28) instruction_list -> . instruction
    (29) instruction_list -> . instruction_list instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    }               reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction_list               shift and go to state 136
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 125

    (6) if -> ILA ( condition ) { instruction_list . }
    (7) if -> ILA ( condition ) { instruction_list . } WLA { instruction_list }
    (29) instruction_list -> instruction_list . instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 137
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! }               [ reduce using rule 70 (empty -> .) ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction                    shift and go to state 37
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 126

    (8) for -> LKOLA ( var_assign ; condition ; . incrementation ) { instruction_list }
    (9) for -> LKOLA ( var_assign ; condition ; . decrementation ) { instruction_list }
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION

    ID              shift and go to state 140

    incrementation                 shift and go to state 138
    decrementation                 shift and go to state 139

state 127

    (10) for -> LKOLA ( expression ; condition ; . incrementation ) { instruction_list }
    (11) for -> LKOLA ( expression ; condition ; . decrementation ) { instruction_list }
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION

    ID              shift and go to state 140

    incrementation                 shift and go to state 141
    decrementation                 shift and go to state 142

state 128

    (12) while -> MA7ED ( condition ) { instruction_list . }
    (29) instruction_list -> instruction_list . instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 143
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! }               [ reduce using rule 70 (empty -> .) ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction                    shift and go to state 37
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 129

    (13) doWhile -> DIR { instruction_list } MA7ED ( . condition )
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 64
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 144
    expression                     shift and go to state 68
    array                          shift and go to state 29

state 130

    (30) condition -> ( condition ) AW ( . condition )
    (30) condition -> ( . condition ) AW ( condition )
    (31) condition -> ( . condition ) WA ( condition )
    (34) condition -> ( . condition ) WA condition
    (35) condition -> ( . condition ) AW condition
    (49) expression -> ( . expression )
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 64
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 145
    expression                     shift and go to state 83
    array                          shift and go to state 29

state 131

    (35) condition -> ( condition ) AW condition .
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               reduce using rule 35 (condition -> ( condition ) AW condition .)
    WA              reduce using rule 35 (condition -> ( condition ) AW condition .)
    AW              reduce using rule 35 (condition -> ( condition ) AW condition .)
    ;               reduce using rule 35 (condition -> ( condition ) AW condition .)

  ! WA              [ shift and go to state 85 ]
  ! AW              [ shift and go to state 86 ]


state 132

    (31) condition -> ( condition ) WA ( . condition )
    (30) condition -> ( . condition ) AW ( condition )
    (31) condition -> ( . condition ) WA ( condition )
    (34) condition -> ( . condition ) WA condition
    (35) condition -> ( . condition ) AW condition
    (49) expression -> ( . expression )
    (30) condition -> . ( condition ) AW ( condition )
    (31) condition -> . ( condition ) WA ( condition )
    (32) condition -> . condition WA ( condition )
    (33) condition -> . condition AW ( condition )
    (34) condition -> . ( condition ) WA condition
    (35) condition -> . ( condition ) AW condition
    (36) condition -> . condition WA condition
    (37) condition -> . condition AW condition
    (38) condition -> . expression > expression
    (39) condition -> . expression < expression
    (40) condition -> . expression EQUALSCOMP expression
    (41) condition -> . expression SUPEQUALS expression
    (42) condition -> . expression INFEQUALS expression
    (43) condition -> . expression DIFFERENT expression
    (44) condition -> . expression
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (66) array -> . [ arraylist ]

    (               shift and go to state 64
    MINUS           shift and go to state 22
    +               shift and go to state 21
    ID              shift and go to state 47
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    [               shift and go to state 36

    condition                      shift and go to state 146
    expression                     shift and go to state 83
    array                          shift and go to state 29

state 133

    (34) condition -> ( condition ) WA condition .
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               reduce using rule 34 (condition -> ( condition ) WA condition .)
    WA              reduce using rule 34 (condition -> ( condition ) WA condition .)
    AW              reduce using rule 34 (condition -> ( condition ) WA condition .)
    ;               reduce using rule 34 (condition -> ( condition ) WA condition .)

  ! WA              [ shift and go to state 85 ]
  ! AW              [ shift and go to state 86 ]


state 134

    (32) condition -> condition WA ( condition ) .
    (30) condition -> ( condition ) . AW ( condition )
    (31) condition -> ( condition ) . WA ( condition )
    (34) condition -> ( condition ) . WA condition
    (35) condition -> ( condition ) . AW condition

    )               reduce using rule 32 (condition -> condition WA ( condition ) .)
    WA              reduce using rule 32 (condition -> condition WA ( condition ) .)
    AW              reduce using rule 32 (condition -> condition WA ( condition ) .)
    ;               reduce using rule 32 (condition -> condition WA ( condition ) .)

  ! AW              [ shift and go to state 120 ]
  ! WA              [ shift and go to state 121 ]


state 135

    (33) condition -> condition AW ( condition ) .
    (30) condition -> ( condition ) . AW ( condition )
    (31) condition -> ( condition ) . WA ( condition )
    (34) condition -> ( condition ) . WA condition
    (35) condition -> ( condition ) . AW condition

    )               reduce using rule 33 (condition -> condition AW ( condition ) .)
    WA              reduce using rule 33 (condition -> condition AW ( condition ) .)
    AW              reduce using rule 33 (condition -> condition AW ( condition ) .)
    ;               reduce using rule 33 (condition -> condition AW ( condition ) .)

  ! AW              [ shift and go to state 120 ]
  ! WA              [ shift and go to state 121 ]


state 136

    (55) try -> JEREB { instruction_list } MASD9CH { instruction_list . }
    (56) try -> JEREB { instruction_list } MASD9CH { instruction_list . } AKHIRAN { instruction_list }
    (29) instruction_list -> instruction_list . instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 147
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! }               [ reduce using rule 70 (empty -> .) ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction                    shift and go to state 37
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 137

    (6) if -> ILA ( condition ) { instruction_list } .
    (7) if -> ILA ( condition ) { instruction_list } . WLA { instruction_list }

    KHREJ           reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    KMEL            reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    ID              reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    KTEB            reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    (               reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    MINUS           reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    +               reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    INT             reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    FLOAT           reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    STRING          reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    KHATE2          reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    S7I7            reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    WALO            reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    JEREB           reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    ILA             reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    LKOLA           reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    MA7ED           reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    DIR             reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    QRA             reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    [               reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    $end            reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    }               reduce using rule 6 (if -> ILA ( condition ) { instruction_list } .)
    WLA             shift and go to state 148


state 138

    (8) for -> LKOLA ( var_assign ; condition ; incrementation . ) { instruction_list }

    )               shift and go to state 149


state 139

    (9) for -> LKOLA ( var_assign ; condition ; decrementation . ) { instruction_list }

    )               shift and go to state 150


state 140

    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION

    INCREMENTATION  shift and go to state 43
    DECREMENTATION  shift and go to state 44


state 141

    (10) for -> LKOLA ( expression ; condition ; incrementation . ) { instruction_list }

    )               shift and go to state 151


state 142

    (11) for -> LKOLA ( expression ; condition ; decrementation . ) { instruction_list }

    )               shift and go to state 152


state 143

    (12) while -> MA7ED ( condition ) { instruction_list } .

    KHREJ           reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    KMEL            reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    ID              reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    KTEB            reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    (               reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    MINUS           reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    +               reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    INT             reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    FLOAT           reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    STRING          reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    KHATE2          reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    S7I7            reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    WALO            reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    JEREB           reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    ILA             reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    LKOLA           reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    MA7ED           reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    DIR             reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    QRA             reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    [               reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    $end            reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)
    }               reduce using rule 12 (while -> MA7ED ( condition ) { instruction_list } .)


state 144

    (13) doWhile -> DIR { instruction_list } MA7ED ( condition . )
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               shift and go to state 153
    WA              shift and go to state 85
    AW              shift and go to state 86


state 145

    (30) condition -> ( condition ) AW ( condition . )
    (30) condition -> ( condition . ) AW ( condition )
    (31) condition -> ( condition . ) WA ( condition )
    (34) condition -> ( condition . ) WA condition
    (35) condition -> ( condition . ) AW condition
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               shift and go to state 154
    WA              shift and go to state 85
    AW              shift and go to state 86


state 146

    (31) condition -> ( condition ) WA ( condition . )
    (30) condition -> ( condition . ) AW ( condition )
    (31) condition -> ( condition . ) WA ( condition )
    (34) condition -> ( condition . ) WA condition
    (35) condition -> ( condition . ) AW condition
    (32) condition -> condition . WA ( condition )
    (33) condition -> condition . AW ( condition )
    (36) condition -> condition . WA condition
    (37) condition -> condition . AW condition

    )               shift and go to state 155
    WA              shift and go to state 85
    AW              shift and go to state 86


state 147

    (55) try -> JEREB { instruction_list } MASD9CH { instruction_list } .
    (56) try -> JEREB { instruction_list } MASD9CH { instruction_list } . AKHIRAN { instruction_list }

    KHREJ           reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KMEL            reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    ID              reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KTEB            reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    (               reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MINUS           reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    +               reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    INT             reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    FLOAT           reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    STRING          reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KHATE2          reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    S7I7            reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    WALO            reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    JEREB           reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    ILA             reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    LKOLA           reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MA7ED           reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    DIR             reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    QRA             reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    [               reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    $end            reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    }               reduce using rule 55 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    AKHIRAN         shift and go to state 156


state 148

    (7) if -> ILA ( condition ) { instruction_list } WLA . { instruction_list }

    {               shift and go to state 157


state 149

    (8) for -> LKOLA ( var_assign ; condition ; incrementation ) . { instruction_list }

    {               shift and go to state 158


state 150

    (9) for -> LKOLA ( var_assign ; condition ; decrementation ) . { instruction_list }

    {               shift and go to state 159


state 151

    (10) for -> LKOLA ( expression ; condition ; incrementation ) . { instruction_list }

    {               shift and go to state 160


state 152

    (11) for -> LKOLA ( expression ; condition ; decrementation ) . { instruction_list }

    {               shift and go to state 161


state 153

    (13) doWhile -> DIR { instruction_list } MA7ED ( condition ) .

    KHREJ           reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KMEL            reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    ID              reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KTEB            reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    (               reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MINUS           reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    +               reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    INT             reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    FLOAT           reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    STRING          reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KHATE2          reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    S7I7            reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    WALO            reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    JEREB           reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    ILA             reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    LKOLA           reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MA7ED           reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    DIR             reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    QRA             reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    [               reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    $end            reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    }               reduce using rule 13 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)


state 154

    (30) condition -> ( condition ) AW ( condition ) .
    (30) condition -> ( condition ) . AW ( condition )
    (31) condition -> ( condition ) . WA ( condition )
    (34) condition -> ( condition ) . WA condition
    (35) condition -> ( condition ) . AW condition

    )               reduce using rule 30 (condition -> ( condition ) AW ( condition ) .)
    WA              reduce using rule 30 (condition -> ( condition ) AW ( condition ) .)
    AW              reduce using rule 30 (condition -> ( condition ) AW ( condition ) .)
    ;               reduce using rule 30 (condition -> ( condition ) AW ( condition ) .)

  ! AW              [ shift and go to state 120 ]
  ! WA              [ shift and go to state 121 ]


state 155

    (31) condition -> ( condition ) WA ( condition ) .
    (30) condition -> ( condition ) . AW ( condition )
    (31) condition -> ( condition ) . WA ( condition )
    (34) condition -> ( condition ) . WA condition
    (35) condition -> ( condition ) . AW condition

    )               reduce using rule 31 (condition -> ( condition ) WA ( condition ) .)
    WA              reduce using rule 31 (condition -> ( condition ) WA ( condition ) .)
    AW              reduce using rule 31 (condition -> ( condition ) WA ( condition ) .)
    ;               reduce using rule 31 (condition -> ( condition ) WA ( condition ) .)

  ! AW              [ shift and go to state 120 ]
  ! WA              [ shift and go to state 121 ]


state 156

    (56) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN . { instruction_list }

    {               shift and go to state 162


state 157

    (7) if -> ILA ( condition ) { instruction_list } WLA { . instruction_list }
    (28) instruction_list -> . instruction
    (29) instruction_list -> . instruction_list instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    }               reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction_list               shift and go to state 163
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 158

    (8) for -> LKOLA ( var_assign ; condition ; incrementation ) { . instruction_list }
    (28) instruction_list -> . instruction
    (29) instruction_list -> . instruction_list instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    }               reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    var_assign                     shift and go to state 4
    incrementation                 shift and go to state 6
    instruction_list               shift and go to state 164
    instruction                    shift and go to state 3
    printing                       shift and go to state 5
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 159

    (9) for -> LKOLA ( var_assign ; condition ; decrementation ) { . instruction_list }
    (28) instruction_list -> . instruction
    (29) instruction_list -> . instruction_list instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    }               reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    var_assign                     shift and go to state 4
    decrementation                 shift and go to state 7
    instruction_list               shift and go to state 165
    instruction                    shift and go to state 3
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 160

    (10) for -> LKOLA ( expression ; condition ; incrementation ) { . instruction_list }
    (28) instruction_list -> . instruction
    (29) instruction_list -> . instruction_list instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    }               reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    expression                     shift and go to state 8
    incrementation                 shift and go to state 6
    instruction_list               shift and go to state 166
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    decrementation                 shift and go to state 7
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 161

    (11) for -> LKOLA ( expression ; condition ; decrementation ) { . instruction_list }
    (28) instruction_list -> . instruction
    (29) instruction_list -> . instruction_list instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    }               reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    expression                     shift and go to state 8
    decrementation                 shift and go to state 7
    instruction_list               shift and go to state 167
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 162

    (56) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { . instruction_list }
    (28) instruction_list -> . instruction
    (29) instruction_list -> . instruction_list instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    }               reduce using rule 70 (empty -> .)
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction_list               shift and go to state 168
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 163

    (7) if -> ILA ( condition ) { instruction_list } WLA { instruction_list . }
    (29) instruction_list -> instruction_list . instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 169
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! }               [ reduce using rule 70 (empty -> .) ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction                    shift and go to state 37
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 164

    (8) for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list . }
    (29) instruction_list -> instruction_list . instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 170
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! }               [ reduce using rule 70 (empty -> .) ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    var_assign                     shift and go to state 4
    incrementation                 shift and go to state 6
    instruction                    shift and go to state 37
    printing                       shift and go to state 5
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 165

    (9) for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list . }
    (29) instruction_list -> instruction_list . instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 171
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! }               [ reduce using rule 70 (empty -> .) ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    var_assign                     shift and go to state 4
    decrementation                 shift and go to state 7
    instruction                    shift and go to state 37
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 166

    (10) for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list . }
    (29) instruction_list -> instruction_list . instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 172
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! }               [ reduce using rule 70 (empty -> .) ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    expression                     shift and go to state 8
    incrementation                 shift and go to state 6
    instruction                    shift and go to state 37
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    decrementation                 shift and go to state 7
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 167

    (11) for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list . }
    (29) instruction_list -> instruction_list . instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 173
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! }               [ reduce using rule 70 (empty -> .) ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    expression                     shift and go to state 8
    decrementation                 shift and go to state 7
    instruction                    shift and go to state 37
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 168

    (56) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list . }
    (29) instruction_list -> instruction_list . instruction
    (14) instruction -> . var_assign
    (15) instruction -> . printing
    (16) instruction -> . incrementation
    (17) instruction -> . decrementation
    (18) instruction -> . expression
    (19) instruction -> . try
    (20) instruction -> . if
    (21) instruction -> . for
    (22) instruction -> . KHREJ
    (23) instruction -> . KMEL
    (24) instruction -> . while
    (25) instruction -> . doWhile
    (26) instruction -> . input
    (27) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (67) printing -> . KTEB ( condition )
    (68) printing -> . KTEB ( incrementation )
    (69) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (45) expression -> . expression + expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . ( expression )
    (50) expression -> . MINUS expression
    (51) expression -> . + expression
    (52) expression -> . ID
    (57) expression -> . INT
    (58) expression -> . FLOAT
    (59) expression -> . STRING
    (60) expression -> . KHATE2
    (61) expression -> . S7I7
    (62) expression -> . WALO
    (63) expression -> . array
    (55) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (6) if -> . ILA ( condition ) { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (8) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (10) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (12) while -> . MA7ED ( condition ) { instruction_list }
    (13) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (53) input -> . QRA ( expression )
    (54) input -> . QRA ( )
    (70) empty -> .
    (66) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 174
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 19
    (               shift and go to state 20
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    STRING          shift and go to state 25
    KHATE2          shift and go to state 26
    S7I7            shift and go to state 27
    WALO            shift and go to state 28
    JEREB           shift and go to state 30
    ILA             shift and go to state 31
    LKOLA           shift and go to state 32
    MA7ED           shift and go to state 33
    DIR             shift and go to state 34
    QRA             shift and go to state 35
    MINUS           reduce using rule 70 (empty -> .)
    +               reduce using rule 70 (empty -> .)
    [               shift and go to state 36

  ! MINUS           [ shift and go to state 22 ]
  ! +               [ shift and go to state 21 ]
  ! }               [ reduce using rule 70 (empty -> .) ]
  ! KHREJ           [ reduce using rule 70 (empty -> .) ]
  ! KMEL            [ reduce using rule 70 (empty -> .) ]
  ! ID              [ reduce using rule 70 (empty -> .) ]
  ! KTEB            [ reduce using rule 70 (empty -> .) ]
  ! (               [ reduce using rule 70 (empty -> .) ]
  ! INT             [ reduce using rule 70 (empty -> .) ]
  ! FLOAT           [ reduce using rule 70 (empty -> .) ]
  ! STRING          [ reduce using rule 70 (empty -> .) ]
  ! KHATE2          [ reduce using rule 70 (empty -> .) ]
  ! S7I7            [ reduce using rule 70 (empty -> .) ]
  ! WALO            [ reduce using rule 70 (empty -> .) ]
  ! JEREB           [ reduce using rule 70 (empty -> .) ]
  ! ILA             [ reduce using rule 70 (empty -> .) ]
  ! LKOLA           [ reduce using rule 70 (empty -> .) ]
  ! MA7ED           [ reduce using rule 70 (empty -> .) ]
  ! DIR             [ reduce using rule 70 (empty -> .) ]
  ! QRA             [ reduce using rule 70 (empty -> .) ]
  ! [               [ reduce using rule 70 (empty -> .) ]

    instruction                    shift and go to state 37
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    array                          shift and go to state 29

state 169

    (7) if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .

    KHREJ           reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KMEL            reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    ID              reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KTEB            reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    (               reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MINUS           reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    +               reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    INT             reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    FLOAT           reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    STRING          reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KHATE2          reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    S7I7            reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    WALO            reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    JEREB           reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    ILA             reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    LKOLA           reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MA7ED           reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    DIR             reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    QRA             reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    [               reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    $end            reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    }               reduce using rule 7 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)


state 170

    (8) for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .

    KHREJ           reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KMEL            reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    ID              reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KTEB            reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    (               reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MINUS           reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    +               reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    INT             reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    FLOAT           reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    STRING          reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KHATE2          reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    S7I7            reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    WALO            reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    JEREB           reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    ILA             reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    LKOLA           reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MA7ED           reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    DIR             reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    QRA             reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    [               reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    $end            reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    }               reduce using rule 8 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)


state 171

    (9) for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .

    KHREJ           reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KMEL            reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    ID              reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KTEB            reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    (               reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MINUS           reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    +               reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    INT             reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    FLOAT           reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    STRING          reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KHATE2          reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    S7I7            reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    WALO            reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    JEREB           reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    ILA             reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    LKOLA           reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MA7ED           reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    DIR             reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    QRA             reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    [               reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    $end            reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    }               reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)


state 172

    (10) for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .

    KHREJ           reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KMEL            reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    ID              reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KTEB            reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    (               reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MINUS           reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    +               reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    INT             reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    FLOAT           reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    STRING          reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KHATE2          reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    S7I7            reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    WALO            reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    JEREB           reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    ILA             reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    LKOLA           reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MA7ED           reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    DIR             reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    QRA             reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    [               reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    $end            reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    }               reduce using rule 10 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)


state 173

    (11) for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .

    KHREJ           reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KMEL            reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    ID              reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KTEB            reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    (               reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MINUS           reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    +               reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    INT             reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    FLOAT           reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    STRING          reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KHATE2          reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    S7I7            reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    WALO            reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    JEREB           reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    ILA             reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    LKOLA           reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MA7ED           reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    DIR             reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    QRA             reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    [               reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    $end            reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    }               reduce using rule 11 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)


state 174

    (56) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .

    KHREJ           reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KMEL            reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    ID              reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KTEB            reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    (               reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MINUS           reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    +               reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    INT             reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    FLOAT           reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    STRING          reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KHATE2          reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    S7I7            reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    WALO            reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    JEREB           reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    ILA             reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    LKOLA           reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MA7ED           reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    DIR             reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    QRA             reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    [               reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    $end            reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    }               reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KHREJ in state 0 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 0 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 0 resolved as shift
WARNING: shift/reduce conflict for WALO in state 0 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 0 resolved as shift
WARNING: shift/reduce conflict for ILA in state 0 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 0 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 0 resolved as shift
WARNING: shift/reduce conflict for DIR in state 0 resolved as shift
WARNING: shift/reduce conflict for QRA in state 0 resolved as shift
WARNING: shift/reduce conflict for [ in state 0 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 2 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 2 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 2 resolved as shift
WARNING: shift/reduce conflict for WALO in state 2 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 2 resolved as shift
WARNING: shift/reduce conflict for ILA in state 2 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 2 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 2 resolved as shift
WARNING: shift/reduce conflict for DIR in state 2 resolved as shift
WARNING: shift/reduce conflict for QRA in state 2 resolved as shift
WARNING: shift/reduce conflict for [ in state 2 resolved as shift
WARNING: shift/reduce conflict for + in state 8 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 8 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 50 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 50 resolved as shift
WARNING: shift/reduce conflict for ID in state 50 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 50 resolved as shift
WARNING: shift/reduce conflict for INT in state 50 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 50 resolved as shift
WARNING: shift/reduce conflict for STRING in state 50 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 50 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 50 resolved as shift
WARNING: shift/reduce conflict for WALO in state 50 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 50 resolved as shift
WARNING: shift/reduce conflict for ILA in state 50 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 50 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 50 resolved as shift
WARNING: shift/reduce conflict for DIR in state 50 resolved as shift
WARNING: shift/reduce conflict for QRA in state 50 resolved as shift
WARNING: shift/reduce conflict for [ in state 50 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 54 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 54 resolved as shift
WARNING: shift/reduce conflict for ID in state 54 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 54 resolved as shift
WARNING: shift/reduce conflict for INT in state 54 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 54 resolved as shift
WARNING: shift/reduce conflict for STRING in state 54 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 54 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 54 resolved as shift
WARNING: shift/reduce conflict for WALO in state 54 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 54 resolved as shift
WARNING: shift/reduce conflict for ILA in state 54 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 54 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 54 resolved as shift
WARNING: shift/reduce conflict for DIR in state 54 resolved as shift
WARNING: shift/reduce conflict for QRA in state 54 resolved as shift
WARNING: shift/reduce conflict for [ in state 54 resolved as shift
WARNING: shift/reduce conflict for + in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for } in state 71 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 71 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 71 resolved as shift
WARNING: shift/reduce conflict for ID in state 71 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 71 resolved as shift
WARNING: shift/reduce conflict for INT in state 71 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING in state 71 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 71 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 71 resolved as shift
WARNING: shift/reduce conflict for WALO in state 71 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 71 resolved as shift
WARNING: shift/reduce conflict for ILA in state 71 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 71 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 71 resolved as shift
WARNING: shift/reduce conflict for DIR in state 71 resolved as shift
WARNING: shift/reduce conflict for QRA in state 71 resolved as shift
WARNING: shift/reduce conflict for [ in state 71 resolved as shift
WARNING: shift/reduce conflict for } in state 77 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 77 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 77 resolved as shift
WARNING: shift/reduce conflict for ID in state 77 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 77 resolved as shift
WARNING: shift/reduce conflict for INT in state 77 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 77 resolved as shift
WARNING: shift/reduce conflict for STRING in state 77 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 77 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 77 resolved as shift
WARNING: shift/reduce conflict for WALO in state 77 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 77 resolved as shift
WARNING: shift/reduce conflict for ILA in state 77 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 77 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 77 resolved as shift
WARNING: shift/reduce conflict for DIR in state 77 resolved as shift
WARNING: shift/reduce conflict for QRA in state 77 resolved as shift
WARNING: shift/reduce conflict for [ in state 77 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 115 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 115 resolved as shift
WARNING: shift/reduce conflict for ID in state 115 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 115 resolved as shift
WARNING: shift/reduce conflict for INT in state 115 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 115 resolved as shift
WARNING: shift/reduce conflict for STRING in state 115 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 115 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 115 resolved as shift
WARNING: shift/reduce conflict for WALO in state 115 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 115 resolved as shift
WARNING: shift/reduce conflict for ILA in state 115 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 115 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 115 resolved as shift
WARNING: shift/reduce conflict for DIR in state 115 resolved as shift
WARNING: shift/reduce conflict for QRA in state 115 resolved as shift
WARNING: shift/reduce conflict for [ in state 115 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 118 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 118 resolved as shift
WARNING: shift/reduce conflict for ID in state 118 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 118 resolved as shift
WARNING: shift/reduce conflict for INT in state 118 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 118 resolved as shift
WARNING: shift/reduce conflict for STRING in state 118 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 118 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 118 resolved as shift
WARNING: shift/reduce conflict for WALO in state 118 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 118 resolved as shift
WARNING: shift/reduce conflict for ILA in state 118 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 118 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 118 resolved as shift
WARNING: shift/reduce conflict for DIR in state 118 resolved as shift
WARNING: shift/reduce conflict for QRA in state 118 resolved as shift
WARNING: shift/reduce conflict for [ in state 118 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 124 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 124 resolved as shift
WARNING: shift/reduce conflict for ID in state 124 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 124 resolved as shift
WARNING: shift/reduce conflict for INT in state 124 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 124 resolved as shift
WARNING: shift/reduce conflict for STRING in state 124 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 124 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 124 resolved as shift
WARNING: shift/reduce conflict for WALO in state 124 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 124 resolved as shift
WARNING: shift/reduce conflict for ILA in state 124 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 124 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 124 resolved as shift
WARNING: shift/reduce conflict for DIR in state 124 resolved as shift
WARNING: shift/reduce conflict for QRA in state 124 resolved as shift
WARNING: shift/reduce conflict for [ in state 124 resolved as shift
WARNING: shift/reduce conflict for } in state 125 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 125 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 125 resolved as shift
WARNING: shift/reduce conflict for ID in state 125 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 125 resolved as shift
WARNING: shift/reduce conflict for INT in state 125 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 125 resolved as shift
WARNING: shift/reduce conflict for STRING in state 125 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 125 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 125 resolved as shift
WARNING: shift/reduce conflict for WALO in state 125 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 125 resolved as shift
WARNING: shift/reduce conflict for ILA in state 125 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 125 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 125 resolved as shift
WARNING: shift/reduce conflict for DIR in state 125 resolved as shift
WARNING: shift/reduce conflict for QRA in state 125 resolved as shift
WARNING: shift/reduce conflict for [ in state 125 resolved as shift
WARNING: shift/reduce conflict for } in state 128 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 128 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 128 resolved as shift
WARNING: shift/reduce conflict for ID in state 128 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 128 resolved as shift
WARNING: shift/reduce conflict for INT in state 128 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 128 resolved as shift
WARNING: shift/reduce conflict for STRING in state 128 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 128 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 128 resolved as shift
WARNING: shift/reduce conflict for WALO in state 128 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 128 resolved as shift
WARNING: shift/reduce conflict for ILA in state 128 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 128 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 128 resolved as shift
WARNING: shift/reduce conflict for DIR in state 128 resolved as shift
WARNING: shift/reduce conflict for QRA in state 128 resolved as shift
WARNING: shift/reduce conflict for [ in state 128 resolved as shift
WARNING: shift/reduce conflict for } in state 136 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 136 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 136 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 136 resolved as shift
WARNING: shift/reduce conflict for INT in state 136 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 136 resolved as shift
WARNING: shift/reduce conflict for STRING in state 136 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 136 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 136 resolved as shift
WARNING: shift/reduce conflict for WALO in state 136 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 136 resolved as shift
WARNING: shift/reduce conflict for ILA in state 136 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 136 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 136 resolved as shift
WARNING: shift/reduce conflict for DIR in state 136 resolved as shift
WARNING: shift/reduce conflict for QRA in state 136 resolved as shift
WARNING: shift/reduce conflict for [ in state 136 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 157 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 157 resolved as shift
WARNING: shift/reduce conflict for ID in state 157 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 157 resolved as shift
WARNING: shift/reduce conflict for INT in state 157 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 157 resolved as shift
WARNING: shift/reduce conflict for STRING in state 157 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 157 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 157 resolved as shift
WARNING: shift/reduce conflict for WALO in state 157 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 157 resolved as shift
WARNING: shift/reduce conflict for ILA in state 157 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 157 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 157 resolved as shift
WARNING: shift/reduce conflict for DIR in state 157 resolved as shift
WARNING: shift/reduce conflict for QRA in state 157 resolved as shift
WARNING: shift/reduce conflict for [ in state 157 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 158 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 158 resolved as shift
WARNING: shift/reduce conflict for ID in state 158 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 158 resolved as shift
WARNING: shift/reduce conflict for INT in state 158 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 158 resolved as shift
WARNING: shift/reduce conflict for STRING in state 158 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 158 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 158 resolved as shift
WARNING: shift/reduce conflict for WALO in state 158 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 158 resolved as shift
WARNING: shift/reduce conflict for ILA in state 158 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 158 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 158 resolved as shift
WARNING: shift/reduce conflict for DIR in state 158 resolved as shift
WARNING: shift/reduce conflict for QRA in state 158 resolved as shift
WARNING: shift/reduce conflict for [ in state 158 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 159 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 159 resolved as shift
WARNING: shift/reduce conflict for INT in state 159 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 159 resolved as shift
WARNING: shift/reduce conflict for STRING in state 159 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 159 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 159 resolved as shift
WARNING: shift/reduce conflict for WALO in state 159 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 159 resolved as shift
WARNING: shift/reduce conflict for ILA in state 159 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 159 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 159 resolved as shift
WARNING: shift/reduce conflict for DIR in state 159 resolved as shift
WARNING: shift/reduce conflict for QRA in state 159 resolved as shift
WARNING: shift/reduce conflict for [ in state 159 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 160 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 160 resolved as shift
WARNING: shift/reduce conflict for ID in state 160 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 160 resolved as shift
WARNING: shift/reduce conflict for INT in state 160 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 160 resolved as shift
WARNING: shift/reduce conflict for STRING in state 160 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 160 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 160 resolved as shift
WARNING: shift/reduce conflict for WALO in state 160 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 160 resolved as shift
WARNING: shift/reduce conflict for ILA in state 160 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 160 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 160 resolved as shift
WARNING: shift/reduce conflict for DIR in state 160 resolved as shift
WARNING: shift/reduce conflict for QRA in state 160 resolved as shift
WARNING: shift/reduce conflict for [ in state 160 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 161 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 161 resolved as shift
WARNING: shift/reduce conflict for ID in state 161 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 161 resolved as shift
WARNING: shift/reduce conflict for INT in state 161 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 161 resolved as shift
WARNING: shift/reduce conflict for STRING in state 161 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 161 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 161 resolved as shift
WARNING: shift/reduce conflict for WALO in state 161 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 161 resolved as shift
WARNING: shift/reduce conflict for ILA in state 161 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 161 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 161 resolved as shift
WARNING: shift/reduce conflict for DIR in state 161 resolved as shift
WARNING: shift/reduce conflict for QRA in state 161 resolved as shift
WARNING: shift/reduce conflict for [ in state 161 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 162 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 162 resolved as shift
WARNING: shift/reduce conflict for ID in state 162 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 162 resolved as shift
WARNING: shift/reduce conflict for INT in state 162 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 162 resolved as shift
WARNING: shift/reduce conflict for STRING in state 162 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 162 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 162 resolved as shift
WARNING: shift/reduce conflict for WALO in state 162 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 162 resolved as shift
WARNING: shift/reduce conflict for ILA in state 162 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 162 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 162 resolved as shift
WARNING: shift/reduce conflict for DIR in state 162 resolved as shift
WARNING: shift/reduce conflict for QRA in state 162 resolved as shift
WARNING: shift/reduce conflict for [ in state 162 resolved as shift
WARNING: shift/reduce conflict for } in state 163 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 163 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 163 resolved as shift
WARNING: shift/reduce conflict for ID in state 163 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 163 resolved as shift
WARNING: shift/reduce conflict for INT in state 163 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 163 resolved as shift
WARNING: shift/reduce conflict for STRING in state 163 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 163 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 163 resolved as shift
WARNING: shift/reduce conflict for WALO in state 163 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 163 resolved as shift
WARNING: shift/reduce conflict for ILA in state 163 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 163 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 163 resolved as shift
WARNING: shift/reduce conflict for DIR in state 163 resolved as shift
WARNING: shift/reduce conflict for QRA in state 163 resolved as shift
WARNING: shift/reduce conflict for [ in state 163 resolved as shift
WARNING: shift/reduce conflict for } in state 164 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 164 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 164 resolved as shift
WARNING: shift/reduce conflict for ID in state 164 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 164 resolved as shift
WARNING: shift/reduce conflict for INT in state 164 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 164 resolved as shift
WARNING: shift/reduce conflict for STRING in state 164 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 164 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 164 resolved as shift
WARNING: shift/reduce conflict for WALO in state 164 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 164 resolved as shift
WARNING: shift/reduce conflict for ILA in state 164 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 164 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 164 resolved as shift
WARNING: shift/reduce conflict for DIR in state 164 resolved as shift
WARNING: shift/reduce conflict for QRA in state 164 resolved as shift
WARNING: shift/reduce conflict for [ in state 164 resolved as shift
WARNING: shift/reduce conflict for } in state 165 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 165 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 165 resolved as shift
WARNING: shift/reduce conflict for ID in state 165 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 165 resolved as shift
WARNING: shift/reduce conflict for INT in state 165 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 165 resolved as shift
WARNING: shift/reduce conflict for STRING in state 165 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 165 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 165 resolved as shift
WARNING: shift/reduce conflict for WALO in state 165 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 165 resolved as shift
WARNING: shift/reduce conflict for ILA in state 165 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 165 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 165 resolved as shift
WARNING: shift/reduce conflict for DIR in state 165 resolved as shift
WARNING: shift/reduce conflict for QRA in state 165 resolved as shift
WARNING: shift/reduce conflict for [ in state 165 resolved as shift
WARNING: shift/reduce conflict for } in state 166 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 166 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 166 resolved as shift
WARNING: shift/reduce conflict for ID in state 166 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 166 resolved as shift
WARNING: shift/reduce conflict for INT in state 166 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 166 resolved as shift
WARNING: shift/reduce conflict for STRING in state 166 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 166 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 166 resolved as shift
WARNING: shift/reduce conflict for WALO in state 166 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 166 resolved as shift
WARNING: shift/reduce conflict for ILA in state 166 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 166 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 166 resolved as shift
WARNING: shift/reduce conflict for DIR in state 166 resolved as shift
WARNING: shift/reduce conflict for QRA in state 166 resolved as shift
WARNING: shift/reduce conflict for [ in state 166 resolved as shift
WARNING: shift/reduce conflict for } in state 167 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 167 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 167 resolved as shift
WARNING: shift/reduce conflict for ID in state 167 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 167 resolved as shift
WARNING: shift/reduce conflict for INT in state 167 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 167 resolved as shift
WARNING: shift/reduce conflict for STRING in state 167 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 167 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 167 resolved as shift
WARNING: shift/reduce conflict for WALO in state 167 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 167 resolved as shift
WARNING: shift/reduce conflict for ILA in state 167 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 167 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 167 resolved as shift
WARNING: shift/reduce conflict for DIR in state 167 resolved as shift
WARNING: shift/reduce conflict for QRA in state 167 resolved as shift
WARNING: shift/reduce conflict for [ in state 167 resolved as shift
WARNING: shift/reduce conflict for } in state 168 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 168 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 168 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 168 resolved as shift
WARNING: shift/reduce conflict for INT in state 168 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 168 resolved as shift
WARNING: shift/reduce conflict for STRING in state 168 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 168 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 168 resolved as shift
WARNING: shift/reduce conflict for WALO in state 168 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 168 resolved as shift
WARNING: shift/reduce conflict for ILA in state 168 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 168 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 168 resolved as shift
WARNING: shift/reduce conflict for DIR in state 168 resolved as shift
WARNING: shift/reduce conflict for QRA in state 168 resolved as shift
WARNING: shift/reduce conflict for [ in state 168 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (program -> instruction_list)
WARNING: rejected rule (empty -> <empty>) in state 2
