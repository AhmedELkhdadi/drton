Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instruction_list
Rule 2     incrementation -> ID INCREMENTATION
Rule 3     decrementation -> ID DECREMENTATION
Rule 4     var_assign -> ID EQUALS expression
Rule 5     var_assign -> ID EQUALS input
Rule 6     var_assign -> MOJOD var_assign
Rule 7     arrayelt_assign -> arrayelt EQUALS expression
Rule 8     arrayelt_assign -> arrayslice EQUALS expression
Rule 9     if -> ILA ( condition ) { instruction_list }
Rule 10    if -> ILA ( condition ) { instruction_list } WLA { instruction_list }
Rule 11    for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
Rule 12    for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
Rule 13    for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list }
Rule 14    for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list }
Rule 15    while -> MA7ED ( condition ) { instruction_list }
Rule 16    doWhile -> DIR { instruction_list } MA7ED ( condition )
Rule 17    instruction -> var_assign
Rule 18    instruction -> arrayelt_assign
Rule 19    instruction -> printing
Rule 20    instruction -> incrementation
Rule 21    instruction -> decrementation
Rule 22    instruction -> expression
Rule 23    instruction -> try
Rule 24    instruction -> if
Rule 25    instruction -> for
Rule 26    instruction -> KHREJ
Rule 27    instruction -> KMEL
Rule 28    instruction -> while
Rule 29    instruction -> doWhile
Rule 30    instruction -> input
Rule 31    instruction -> len
Rule 32    instruction -> empty
Rule 33    instruction -> func
Rule 34    instruction -> appel_func
Rule 35    instruction -> return
Rule 36    instruction -> arrfn
Rule 37    instruction_list -> instruction
Rule 38    instruction_list -> instruction_list instruction
Rule 39    condition -> ( condition ) AW ( condition )
Rule 40    condition -> ( condition ) WA ( condition )
Rule 41    condition -> condition WA ( condition )
Rule 42    condition -> condition AW ( condition )
Rule 43    condition -> ( condition ) WA condition
Rule 44    condition -> ( condition ) AW condition
Rule 45    condition -> condition WA condition
Rule 46    condition -> condition AW condition
Rule 47    condition -> L3AKSS ( condition )
Rule 48    condition -> expression SUP expression
Rule 49    condition -> expression INF expression
Rule 50    condition -> expression EQUALSCOMP expression
Rule 51    condition -> expression SUPEQUALS expression
Rule 52    condition -> expression INFEQUALS expression
Rule 53    condition -> expression DIFFERENT expression
Rule 54    condition -> expression
Rule 55    expression -> expression PLUS expression
Rule 56    expression -> expression MINUS expression
Rule 57    expression -> expression TIMES expression
Rule 58    expression -> expression DIVIDE expression
Rule 59    expression -> expression MODULO expression
Rule 60    expression -> expression POWER expression
Rule 61    expression -> ( expression )
Rule 62    expression -> MINUS expression
Rule 63    expression -> PLUS expression
Rule 64    expression -> ID
Rule 65    input -> QRA ( expression )
Rule 66    input -> QRA ( )
Rule 67    try -> JEREB { instruction_list } MASD9CH { instruction_list }
Rule 68    try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
Rule 69    expression -> INT
Rule 70    expression -> FLOAT
Rule 71    expression -> STRING
Rule 72    expression -> KHATE2
Rule 73    expression -> S7I7
Rule 74    expression -> WALO
Rule 75    expression -> array
Rule 76    expression -> arrayelt
Rule 77    expression -> arrayslice
Rule 78    expression -> arrfn
Rule 79    expression -> tol
Rule 80    arraylist -> expression
Rule 81    arraylist -> arraylist , expression
Rule 82    array -> [ arraylist ]
Rule 83    array -> [ ]
Rule 84    arrayelt -> ID dimensions
Rule 85    dimensions -> [ expression ]
Rule 86    dimensions -> dimensions [ expression ]
Rule 87    arrayslice -> ID [ expression : expression ]
Rule 88    arrayslice -> ID [ : expression ]
Rule 89    arrayslice -> ID [ expression : ]
Rule 90    arrayslice -> ID [ : ]
Rule 91    arrfn -> ID . ZID ( expression )
Rule 92    arrfn -> ID . KBER ( array )
Rule 93    arrfn -> ID . KHWI ( )
Rule 94    arrfn -> ID . DKHEL ( expression , expression )
Rule 95    arrfn -> ID . MSSE7 ( expression )
Rule 96    arrfn -> ID . MSSE7 ( )
Rule 97    argument_list -> expression
Rule 98    argument_list -> argument_list , expression
Rule 99    parameter -> ID
Rule 100   parameter_list -> parameter
Rule 101   parameter_list -> parameter_list , parameter
Rule 102   func -> TA3RIF ID ( parameter_list ) { instruction_list }
Rule 103   func -> TA3RIF ID ( ) { instruction_list }
Rule 104   appel_func -> ID ( argument_list )
Rule 105   appel_func -> ID ( )
Rule 106   return -> RED expression
Rule 107   printing -> KTEB ( condition )
Rule 108   printing -> KTEB ( incrementation )
Rule 109   printing -> KTEB ( decrementation )
Rule 110   printing -> KTEB ( condition , condition )
Rule 111   len -> TOL ( expression )
Rule 112   empty -> <empty>

Terminals, with rules where they appear

(                    : 9 10 11 12 13 14 15 16 39 39 40 40 41 42 43 44 47 61 65 66 91 92 93 94 95 96 102 103 104 105 107 108 109 110 111
)                    : 9 10 11 12 13 14 15 16 39 39 40 40 41 42 43 44 47 61 65 66 91 92 93 94 95 96 102 103 104 105 107 108 109 110 111
,                    : 81 94 98 101 110
.                    : 91 92 93 94 95 96
:                    : 87 88 89 90
;                    : 11 11 12 12 13 13 14 14
AKHIRAN              : 68
AW                   : 39 42 44 46
DECREMENTATION       : 3
DIFFERENT            : 53
DIR                  : 16
DIVIDE               : 58
DKHEL                : 94
EQUALS               : 4 5 7 8
EQUALSCOMP           : 50
FLOAT                : 70
ID                   : 2 3 4 5 64 84 87 88 89 90 91 92 93 94 95 96 99 102 103 104 105
ILA                  : 9 10
INCREMENTATION       : 2
INF                  : 49
INFEQUALS            : 52
INT                  : 69
JEREB                : 67 68
KBER                 : 92
KHATE2               : 72
KHREJ                : 26
KHWI                 : 93
KMEL                 : 27
KTEB                 : 107 108 109 110
L3AKSS               : 47
LKOLA                : 11 12 13 14
MA7ED                : 15 16
MASD9CH              : 67 68
MINUS                : 56 62
MODULO               : 59
MOJOD                : 6
MSSE7                : 95 96
PLUS                 : 55 63
POWER                : 60
QRA                  : 65 66
RED                  : 106
S7I7                 : 73
STRING               : 71
SUP                  : 48
SUPEQUALS            : 51
TA3RIF               : 102 103
TIMES                : 57
TOL                  : 111
WA                   : 40 41 43 45
WALO                 : 74
WLA                  : 10
ZID                  : 91
[                    : 82 83 85 86 87 88 89 90
]                    : 82 83 85 86 87 88 89 90
error                : 
{                    : 9 10 10 11 12 13 14 15 16 67 67 68 68 68 102 103
}                    : 9 10 10 11 12 13 14 15 16 67 67 68 68 68 102 103

Nonterminals, with rules where they appear

appel_func           : 34
argument_list        : 98 104
array                : 75 92
arrayelt             : 7 76
arrayelt_assign      : 18
arraylist            : 81 82
arrayslice           : 8 77
arrfn                : 36 78
condition            : 9 10 11 12 13 14 15 16 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 107 110 110
decrementation       : 12 14 21 109
dimensions           : 84 86
doWhile              : 29
empty                : 32
expression           : 4 7 8 13 14 22 48 48 49 49 50 50 51 51 52 52 53 53 54 55 55 56 56 57 57 58 58 59 59 60 60 61 62 63 65 80 81 85 86 87 87 88 89 91 94 94 95 97 98 106 111
for                  : 25
func                 : 33
if                   : 24
incrementation       : 11 13 20 108
input                : 5 30
instruction          : 37 38
instruction_list     : 1 9 10 10 11 12 13 14 15 16 38 67 67 68 68 68 102 103
len                  : 31
parameter            : 100 101
parameter_list       : 101 102
printing             : 19
program              : 0
return               : 35
tol                  : 79
try                  : 23
var_assign           : 6 11 12 17
while                : 28

