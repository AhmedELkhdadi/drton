Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DKHEL
    DOUZ
    KBER
    KHWEI
    MSSE7
    ZID

Grammar

Rule 0     S' -> program
Rule 1     program -> instruction_list
Rule 2     incrementation -> ID INCREMENTATION
Rule 3     decrementation -> ID DECREMENTATION
Rule 4     var_assign -> ID EQUALS expression
Rule 5     var_assign -> ID EQUALS input
Rule 6     var_assign -> MOJOD var_assign
Rule 7     arrayelt_assign -> arrayelt EQUALS expression
Rule 8     if -> ILA ( condition ) { instruction_list }
Rule 9     if -> ILA ( condition ) { instruction_list } WLA { instruction_list }
Rule 10    for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
Rule 11    for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
Rule 12    for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list }
Rule 13    for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list }
Rule 14    while -> MA7ED ( condition ) { instruction_list }
Rule 15    doWhile -> DIR { instruction_list } MA7ED ( condition )
Rule 16    instruction -> var_assign
Rule 17    instruction -> arrayelt_assign
Rule 18    instruction -> printing
Rule 19    instruction -> incrementation
Rule 20    instruction -> decrementation
Rule 21    instruction -> expression
Rule 22    instruction -> try
Rule 23    instruction -> if
Rule 24    instruction -> for
Rule 25    instruction -> KHREJ
Rule 26    instruction -> KMEL
Rule 27    instruction -> while
Rule 28    instruction -> doWhile
Rule 29    instruction -> input
Rule 30    instruction -> len
Rule 31    instruction -> empty
Rule 32    instruction -> func
Rule 33    instruction -> appel_func
Rule 34    instruction -> return
Rule 35    instruction_list -> instruction
Rule 36    instruction_list -> instruction_list instruction
Rule 37    condition -> ( condition ) AW ( condition )
Rule 38    condition -> ( condition ) WA ( condition )
Rule 39    condition -> condition WA ( condition )
Rule 40    condition -> condition AW ( condition )
Rule 41    condition -> ( condition ) WA condition
Rule 42    condition -> ( condition ) AW condition
Rule 43    condition -> L3AKSS ( condition )
Rule 44    condition -> expression SUP expression
Rule 45    condition -> expression INF expression
Rule 46    condition -> expression EQUALSCOMP expression
Rule 47    condition -> expression SUPEQUALS expression
Rule 48    condition -> expression INFEQUALS expression
Rule 49    condition -> expression DIFFERENT expression
Rule 50    condition -> expression
Rule 51    expression -> expression PLUS expression
Rule 52    expression -> expression MINUS expression
Rule 53    expression -> expression TIMES expression
Rule 54    expression -> expression DIVIDE expression
Rule 55    expression -> ( expression )
Rule 56    expression -> MINUS expression
Rule 57    expression -> PLUS expression
Rule 58    expression -> ID
Rule 59    input -> QRA ( expression )
Rule 60    input -> QRA ( )
Rule 61    try -> JEREB { instruction_list } MASD9CH { instruction_list }
Rule 62    try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
Rule 63    expression -> INT
Rule 64    expression -> FLOAT
Rule 65    expression -> STRING
Rule 66    expression -> KHATE2
Rule 67    expression -> S7I7
Rule 68    expression -> WALO
Rule 69    expression -> array
Rule 70    expression -> arrayelt
Rule 71    expression -> arrayslice
Rule 72    arraylist -> expression
Rule 73    arraylist -> arraylist , expression
Rule 74    array -> [ arraylist ]
Rule 75    array -> [ ]
Rule 76    arrayelt -> ID dimensions
Rule 77    dimensions -> [ expression ]
Rule 78    dimensions -> dimensions [ expression ]
Rule 79    arrayslice -> ID [ expression : expression ]
Rule 80    arrayslice -> ID [ : expression ]
Rule 81    arrayslice -> ID [ expression : ]
Rule 82    arrayslice -> ID [ : ]
Rule 83    argument_list -> expression
Rule 84    argument_list -> argument_list , expression
Rule 85    parameter -> ID
Rule 86    parameter_list -> parameter
Rule 87    parameter_list -> parameter_list , parameter
Rule 88    func -> TA3RIF ID ( parameter_list ) { instruction_list }
Rule 89    func -> TA3RIF ID ( ) { instruction_list }
Rule 90    appel_func -> ID ( argument_list )
Rule 91    appel_func -> ID ( )
Rule 92    return -> RED expression
Rule 93    printing -> KTEB ( condition )
Rule 94    printing -> KTEB ( incrementation )
Rule 95    printing -> KTEB ( decrementation )
Rule 96    len -> TOL ( expression )
Rule 97    empty -> <empty>

Terminals, with rules where they appear

(                    : 8 9 10 11 12 13 14 15 37 37 38 38 39 40 41 42 43 55 59 60 88 89 90 91 93 94 95 96
)                    : 8 9 10 11 12 13 14 15 37 37 38 38 39 40 41 42 43 55 59 60 88 89 90 91 93 94 95 96
,                    : 73 84 87
:                    : 79 80 81 82
;                    : 10 10 11 11 12 12 13 13
AKHIRAN              : 62
AW                   : 37 40 42
DECREMENTATION       : 3
DIFFERENT            : 49
DIR                  : 15
DIVIDE               : 54
DKHEL                : 
DOUZ                 : 
EQUALS               : 4 5 7
EQUALSCOMP           : 46
FLOAT                : 64
ID                   : 2 3 4 5 58 76 79 80 81 82 85 88 89 90 91
ILA                  : 8 9
INCREMENTATION       : 2
INF                  : 45
INFEQUALS            : 48
INT                  : 63
JEREB                : 61 62
KBER                 : 
KHATE2               : 66
KHREJ                : 25
KHWEI                : 
KMEL                 : 26
KTEB                 : 93 94 95
L3AKSS               : 43
LKOLA                : 10 11 12 13
MA7ED                : 14 15
MASD9CH              : 61 62
MINUS                : 52 56
MOJOD                : 6
MSSE7                : 
PLUS                 : 51 57
QRA                  : 59 60
RED                  : 92
S7I7                 : 67
STRING               : 65
SUP                  : 44
SUPEQUALS            : 47
TA3RIF               : 88 89
TIMES                : 53
TOL                  : 96
WA                   : 38 39 41
WALO                 : 68
WLA                  : 9
ZID                  : 
[                    : 74 75 77 78 79 80 81 82
]                    : 74 75 77 78 79 80 81 82
error                : 
{                    : 8 9 9 10 11 12 13 14 15 61 61 62 62 62 88 89
}                    : 8 9 9 10 11 12 13 14 15 61 61 62 62 62 88 89

Nonterminals, with rules where they appear

appel_func           : 33
argument_list        : 84 90
array                : 69
arrayelt             : 7 70
arrayelt_assign      : 17
arraylist            : 73 74
arrayslice           : 71
condition            : 8 9 10 11 12 13 14 15 37 37 38 38 39 39 40 40 41 41 42 42 43 93
decrementation       : 11 13 20 95
dimensions           : 76 78
doWhile              : 28
empty                : 31
expression           : 4 7 12 13 21 44 44 45 45 46 46 47 47 48 48 49 49 50 51 51 52 52 53 53 54 54 55 56 57 59 72 73 77 78 79 79 80 81 83 84 92 96
for                  : 24
func                 : 32
if                   : 23
incrementation       : 10 12 19 94
input                : 5 29
instruction          : 35 36
instruction_list     : 1 8 9 9 10 11 12 13 14 15 36 61 61 62 62 62 88 89
len                  : 30
parameter            : 86 87
parameter_list       : 87 88
printing             : 18
program              : 0
return               : 34
try                  : 22
var_assign           : 6 10 11 16
while                : 27

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instruction_list
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    $end            reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    program                        shift and go to state 1
    instruction_list               shift and go to state 2
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 1

    (0) S' -> program .



state 2

    (1) program -> instruction_list .
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (program -> instruction_list .)
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    $end            reduce using rule 1 (program -> instruction_list .)
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]
  ! $end            [ reduce using rule 97 (empty -> .) ]

    instruction                    shift and go to state 48
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 3

    (35) instruction_list -> instruction .

    KHREJ           reduce using rule 35 (instruction_list -> instruction .)
    KMEL            reduce using rule 35 (instruction_list -> instruction .)
    ID              reduce using rule 35 (instruction_list -> instruction .)
    MOJOD           reduce using rule 35 (instruction_list -> instruction .)
    KTEB            reduce using rule 35 (instruction_list -> instruction .)
    (               reduce using rule 35 (instruction_list -> instruction .)
    MINUS           reduce using rule 35 (instruction_list -> instruction .)
    PLUS            reduce using rule 35 (instruction_list -> instruction .)
    INT             reduce using rule 35 (instruction_list -> instruction .)
    FLOAT           reduce using rule 35 (instruction_list -> instruction .)
    STRING          reduce using rule 35 (instruction_list -> instruction .)
    KHATE2          reduce using rule 35 (instruction_list -> instruction .)
    S7I7            reduce using rule 35 (instruction_list -> instruction .)
    WALO            reduce using rule 35 (instruction_list -> instruction .)
    JEREB           reduce using rule 35 (instruction_list -> instruction .)
    ILA             reduce using rule 35 (instruction_list -> instruction .)
    LKOLA           reduce using rule 35 (instruction_list -> instruction .)
    MA7ED           reduce using rule 35 (instruction_list -> instruction .)
    DIR             reduce using rule 35 (instruction_list -> instruction .)
    QRA             reduce using rule 35 (instruction_list -> instruction .)
    TOL             reduce using rule 35 (instruction_list -> instruction .)
    TA3RIF          reduce using rule 35 (instruction_list -> instruction .)
    RED             reduce using rule 35 (instruction_list -> instruction .)
    [               reduce using rule 35 (instruction_list -> instruction .)
    $end            reduce using rule 35 (instruction_list -> instruction .)
    }               reduce using rule 35 (instruction_list -> instruction .)


state 4

    (16) instruction -> var_assign .

    KHREJ           reduce using rule 16 (instruction -> var_assign .)
    KMEL            reduce using rule 16 (instruction -> var_assign .)
    ID              reduce using rule 16 (instruction -> var_assign .)
    MOJOD           reduce using rule 16 (instruction -> var_assign .)
    KTEB            reduce using rule 16 (instruction -> var_assign .)
    (               reduce using rule 16 (instruction -> var_assign .)
    MINUS           reduce using rule 16 (instruction -> var_assign .)
    PLUS            reduce using rule 16 (instruction -> var_assign .)
    INT             reduce using rule 16 (instruction -> var_assign .)
    FLOAT           reduce using rule 16 (instruction -> var_assign .)
    STRING          reduce using rule 16 (instruction -> var_assign .)
    KHATE2          reduce using rule 16 (instruction -> var_assign .)
    S7I7            reduce using rule 16 (instruction -> var_assign .)
    WALO            reduce using rule 16 (instruction -> var_assign .)
    JEREB           reduce using rule 16 (instruction -> var_assign .)
    ILA             reduce using rule 16 (instruction -> var_assign .)
    LKOLA           reduce using rule 16 (instruction -> var_assign .)
    MA7ED           reduce using rule 16 (instruction -> var_assign .)
    DIR             reduce using rule 16 (instruction -> var_assign .)
    QRA             reduce using rule 16 (instruction -> var_assign .)
    TOL             reduce using rule 16 (instruction -> var_assign .)
    TA3RIF          reduce using rule 16 (instruction -> var_assign .)
    RED             reduce using rule 16 (instruction -> var_assign .)
    [               reduce using rule 16 (instruction -> var_assign .)
    $end            reduce using rule 16 (instruction -> var_assign .)
    }               reduce using rule 16 (instruction -> var_assign .)


state 5

    (17) instruction -> arrayelt_assign .

    KHREJ           reduce using rule 17 (instruction -> arrayelt_assign .)
    KMEL            reduce using rule 17 (instruction -> arrayelt_assign .)
    ID              reduce using rule 17 (instruction -> arrayelt_assign .)
    MOJOD           reduce using rule 17 (instruction -> arrayelt_assign .)
    KTEB            reduce using rule 17 (instruction -> arrayelt_assign .)
    (               reduce using rule 17 (instruction -> arrayelt_assign .)
    MINUS           reduce using rule 17 (instruction -> arrayelt_assign .)
    PLUS            reduce using rule 17 (instruction -> arrayelt_assign .)
    INT             reduce using rule 17 (instruction -> arrayelt_assign .)
    FLOAT           reduce using rule 17 (instruction -> arrayelt_assign .)
    STRING          reduce using rule 17 (instruction -> arrayelt_assign .)
    KHATE2          reduce using rule 17 (instruction -> arrayelt_assign .)
    S7I7            reduce using rule 17 (instruction -> arrayelt_assign .)
    WALO            reduce using rule 17 (instruction -> arrayelt_assign .)
    JEREB           reduce using rule 17 (instruction -> arrayelt_assign .)
    ILA             reduce using rule 17 (instruction -> arrayelt_assign .)
    LKOLA           reduce using rule 17 (instruction -> arrayelt_assign .)
    MA7ED           reduce using rule 17 (instruction -> arrayelt_assign .)
    DIR             reduce using rule 17 (instruction -> arrayelt_assign .)
    QRA             reduce using rule 17 (instruction -> arrayelt_assign .)
    TOL             reduce using rule 17 (instruction -> arrayelt_assign .)
    TA3RIF          reduce using rule 17 (instruction -> arrayelt_assign .)
    RED             reduce using rule 17 (instruction -> arrayelt_assign .)
    [               reduce using rule 17 (instruction -> arrayelt_assign .)
    $end            reduce using rule 17 (instruction -> arrayelt_assign .)
    }               reduce using rule 17 (instruction -> arrayelt_assign .)


state 6

    (18) instruction -> printing .

    KHREJ           reduce using rule 18 (instruction -> printing .)
    KMEL            reduce using rule 18 (instruction -> printing .)
    ID              reduce using rule 18 (instruction -> printing .)
    MOJOD           reduce using rule 18 (instruction -> printing .)
    KTEB            reduce using rule 18 (instruction -> printing .)
    (               reduce using rule 18 (instruction -> printing .)
    MINUS           reduce using rule 18 (instruction -> printing .)
    PLUS            reduce using rule 18 (instruction -> printing .)
    INT             reduce using rule 18 (instruction -> printing .)
    FLOAT           reduce using rule 18 (instruction -> printing .)
    STRING          reduce using rule 18 (instruction -> printing .)
    KHATE2          reduce using rule 18 (instruction -> printing .)
    S7I7            reduce using rule 18 (instruction -> printing .)
    WALO            reduce using rule 18 (instruction -> printing .)
    JEREB           reduce using rule 18 (instruction -> printing .)
    ILA             reduce using rule 18 (instruction -> printing .)
    LKOLA           reduce using rule 18 (instruction -> printing .)
    MA7ED           reduce using rule 18 (instruction -> printing .)
    DIR             reduce using rule 18 (instruction -> printing .)
    QRA             reduce using rule 18 (instruction -> printing .)
    TOL             reduce using rule 18 (instruction -> printing .)
    TA3RIF          reduce using rule 18 (instruction -> printing .)
    RED             reduce using rule 18 (instruction -> printing .)
    [               reduce using rule 18 (instruction -> printing .)
    $end            reduce using rule 18 (instruction -> printing .)
    }               reduce using rule 18 (instruction -> printing .)


state 7

    (19) instruction -> incrementation .

    KHREJ           reduce using rule 19 (instruction -> incrementation .)
    KMEL            reduce using rule 19 (instruction -> incrementation .)
    ID              reduce using rule 19 (instruction -> incrementation .)
    MOJOD           reduce using rule 19 (instruction -> incrementation .)
    KTEB            reduce using rule 19 (instruction -> incrementation .)
    (               reduce using rule 19 (instruction -> incrementation .)
    MINUS           reduce using rule 19 (instruction -> incrementation .)
    PLUS            reduce using rule 19 (instruction -> incrementation .)
    INT             reduce using rule 19 (instruction -> incrementation .)
    FLOAT           reduce using rule 19 (instruction -> incrementation .)
    STRING          reduce using rule 19 (instruction -> incrementation .)
    KHATE2          reduce using rule 19 (instruction -> incrementation .)
    S7I7            reduce using rule 19 (instruction -> incrementation .)
    WALO            reduce using rule 19 (instruction -> incrementation .)
    JEREB           reduce using rule 19 (instruction -> incrementation .)
    ILA             reduce using rule 19 (instruction -> incrementation .)
    LKOLA           reduce using rule 19 (instruction -> incrementation .)
    MA7ED           reduce using rule 19 (instruction -> incrementation .)
    DIR             reduce using rule 19 (instruction -> incrementation .)
    QRA             reduce using rule 19 (instruction -> incrementation .)
    TOL             reduce using rule 19 (instruction -> incrementation .)
    TA3RIF          reduce using rule 19 (instruction -> incrementation .)
    RED             reduce using rule 19 (instruction -> incrementation .)
    [               reduce using rule 19 (instruction -> incrementation .)
    $end            reduce using rule 19 (instruction -> incrementation .)
    }               reduce using rule 19 (instruction -> incrementation .)


state 8

    (20) instruction -> decrementation .

    KHREJ           reduce using rule 20 (instruction -> decrementation .)
    KMEL            reduce using rule 20 (instruction -> decrementation .)
    ID              reduce using rule 20 (instruction -> decrementation .)
    MOJOD           reduce using rule 20 (instruction -> decrementation .)
    KTEB            reduce using rule 20 (instruction -> decrementation .)
    (               reduce using rule 20 (instruction -> decrementation .)
    MINUS           reduce using rule 20 (instruction -> decrementation .)
    PLUS            reduce using rule 20 (instruction -> decrementation .)
    INT             reduce using rule 20 (instruction -> decrementation .)
    FLOAT           reduce using rule 20 (instruction -> decrementation .)
    STRING          reduce using rule 20 (instruction -> decrementation .)
    KHATE2          reduce using rule 20 (instruction -> decrementation .)
    S7I7            reduce using rule 20 (instruction -> decrementation .)
    WALO            reduce using rule 20 (instruction -> decrementation .)
    JEREB           reduce using rule 20 (instruction -> decrementation .)
    ILA             reduce using rule 20 (instruction -> decrementation .)
    LKOLA           reduce using rule 20 (instruction -> decrementation .)
    MA7ED           reduce using rule 20 (instruction -> decrementation .)
    DIR             reduce using rule 20 (instruction -> decrementation .)
    QRA             reduce using rule 20 (instruction -> decrementation .)
    TOL             reduce using rule 20 (instruction -> decrementation .)
    TA3RIF          reduce using rule 20 (instruction -> decrementation .)
    RED             reduce using rule 20 (instruction -> decrementation .)
    [               reduce using rule 20 (instruction -> decrementation .)
    $end            reduce using rule 20 (instruction -> decrementation .)
    }               reduce using rule 20 (instruction -> decrementation .)


state 9

    (21) instruction -> expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 21 (instruction -> expression .)
    KMEL            reduce using rule 21 (instruction -> expression .)
    ID              reduce using rule 21 (instruction -> expression .)
    MOJOD           reduce using rule 21 (instruction -> expression .)
    KTEB            reduce using rule 21 (instruction -> expression .)
    (               reduce using rule 21 (instruction -> expression .)
    INT             reduce using rule 21 (instruction -> expression .)
    FLOAT           reduce using rule 21 (instruction -> expression .)
    STRING          reduce using rule 21 (instruction -> expression .)
    KHATE2          reduce using rule 21 (instruction -> expression .)
    S7I7            reduce using rule 21 (instruction -> expression .)
    WALO            reduce using rule 21 (instruction -> expression .)
    JEREB           reduce using rule 21 (instruction -> expression .)
    ILA             reduce using rule 21 (instruction -> expression .)
    LKOLA           reduce using rule 21 (instruction -> expression .)
    MA7ED           reduce using rule 21 (instruction -> expression .)
    DIR             reduce using rule 21 (instruction -> expression .)
    QRA             reduce using rule 21 (instruction -> expression .)
    TOL             reduce using rule 21 (instruction -> expression .)
    TA3RIF          reduce using rule 21 (instruction -> expression .)
    RED             reduce using rule 21 (instruction -> expression .)
    [               reduce using rule 21 (instruction -> expression .)
    $end            reduce using rule 21 (instruction -> expression .)
    }               reduce using rule 21 (instruction -> expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52

  ! MINUS           [ reduce using rule 21 (instruction -> expression .) ]
  ! PLUS            [ reduce using rule 21 (instruction -> expression .) ]


state 10

    (22) instruction -> try .

    KHREJ           reduce using rule 22 (instruction -> try .)
    KMEL            reduce using rule 22 (instruction -> try .)
    ID              reduce using rule 22 (instruction -> try .)
    MOJOD           reduce using rule 22 (instruction -> try .)
    KTEB            reduce using rule 22 (instruction -> try .)
    (               reduce using rule 22 (instruction -> try .)
    MINUS           reduce using rule 22 (instruction -> try .)
    PLUS            reduce using rule 22 (instruction -> try .)
    INT             reduce using rule 22 (instruction -> try .)
    FLOAT           reduce using rule 22 (instruction -> try .)
    STRING          reduce using rule 22 (instruction -> try .)
    KHATE2          reduce using rule 22 (instruction -> try .)
    S7I7            reduce using rule 22 (instruction -> try .)
    WALO            reduce using rule 22 (instruction -> try .)
    JEREB           reduce using rule 22 (instruction -> try .)
    ILA             reduce using rule 22 (instruction -> try .)
    LKOLA           reduce using rule 22 (instruction -> try .)
    MA7ED           reduce using rule 22 (instruction -> try .)
    DIR             reduce using rule 22 (instruction -> try .)
    QRA             reduce using rule 22 (instruction -> try .)
    TOL             reduce using rule 22 (instruction -> try .)
    TA3RIF          reduce using rule 22 (instruction -> try .)
    RED             reduce using rule 22 (instruction -> try .)
    [               reduce using rule 22 (instruction -> try .)
    $end            reduce using rule 22 (instruction -> try .)
    }               reduce using rule 22 (instruction -> try .)


state 11

    (23) instruction -> if .

    KHREJ           reduce using rule 23 (instruction -> if .)
    KMEL            reduce using rule 23 (instruction -> if .)
    ID              reduce using rule 23 (instruction -> if .)
    MOJOD           reduce using rule 23 (instruction -> if .)
    KTEB            reduce using rule 23 (instruction -> if .)
    (               reduce using rule 23 (instruction -> if .)
    MINUS           reduce using rule 23 (instruction -> if .)
    PLUS            reduce using rule 23 (instruction -> if .)
    INT             reduce using rule 23 (instruction -> if .)
    FLOAT           reduce using rule 23 (instruction -> if .)
    STRING          reduce using rule 23 (instruction -> if .)
    KHATE2          reduce using rule 23 (instruction -> if .)
    S7I7            reduce using rule 23 (instruction -> if .)
    WALO            reduce using rule 23 (instruction -> if .)
    JEREB           reduce using rule 23 (instruction -> if .)
    ILA             reduce using rule 23 (instruction -> if .)
    LKOLA           reduce using rule 23 (instruction -> if .)
    MA7ED           reduce using rule 23 (instruction -> if .)
    DIR             reduce using rule 23 (instruction -> if .)
    QRA             reduce using rule 23 (instruction -> if .)
    TOL             reduce using rule 23 (instruction -> if .)
    TA3RIF          reduce using rule 23 (instruction -> if .)
    RED             reduce using rule 23 (instruction -> if .)
    [               reduce using rule 23 (instruction -> if .)
    $end            reduce using rule 23 (instruction -> if .)
    }               reduce using rule 23 (instruction -> if .)


state 12

    (24) instruction -> for .

    KHREJ           reduce using rule 24 (instruction -> for .)
    KMEL            reduce using rule 24 (instruction -> for .)
    ID              reduce using rule 24 (instruction -> for .)
    MOJOD           reduce using rule 24 (instruction -> for .)
    KTEB            reduce using rule 24 (instruction -> for .)
    (               reduce using rule 24 (instruction -> for .)
    MINUS           reduce using rule 24 (instruction -> for .)
    PLUS            reduce using rule 24 (instruction -> for .)
    INT             reduce using rule 24 (instruction -> for .)
    FLOAT           reduce using rule 24 (instruction -> for .)
    STRING          reduce using rule 24 (instruction -> for .)
    KHATE2          reduce using rule 24 (instruction -> for .)
    S7I7            reduce using rule 24 (instruction -> for .)
    WALO            reduce using rule 24 (instruction -> for .)
    JEREB           reduce using rule 24 (instruction -> for .)
    ILA             reduce using rule 24 (instruction -> for .)
    LKOLA           reduce using rule 24 (instruction -> for .)
    MA7ED           reduce using rule 24 (instruction -> for .)
    DIR             reduce using rule 24 (instruction -> for .)
    QRA             reduce using rule 24 (instruction -> for .)
    TOL             reduce using rule 24 (instruction -> for .)
    TA3RIF          reduce using rule 24 (instruction -> for .)
    RED             reduce using rule 24 (instruction -> for .)
    [               reduce using rule 24 (instruction -> for .)
    $end            reduce using rule 24 (instruction -> for .)
    }               reduce using rule 24 (instruction -> for .)


state 13

    (25) instruction -> KHREJ .

    KHREJ           reduce using rule 25 (instruction -> KHREJ .)
    KMEL            reduce using rule 25 (instruction -> KHREJ .)
    ID              reduce using rule 25 (instruction -> KHREJ .)
    MOJOD           reduce using rule 25 (instruction -> KHREJ .)
    KTEB            reduce using rule 25 (instruction -> KHREJ .)
    (               reduce using rule 25 (instruction -> KHREJ .)
    MINUS           reduce using rule 25 (instruction -> KHREJ .)
    PLUS            reduce using rule 25 (instruction -> KHREJ .)
    INT             reduce using rule 25 (instruction -> KHREJ .)
    FLOAT           reduce using rule 25 (instruction -> KHREJ .)
    STRING          reduce using rule 25 (instruction -> KHREJ .)
    KHATE2          reduce using rule 25 (instruction -> KHREJ .)
    S7I7            reduce using rule 25 (instruction -> KHREJ .)
    WALO            reduce using rule 25 (instruction -> KHREJ .)
    JEREB           reduce using rule 25 (instruction -> KHREJ .)
    ILA             reduce using rule 25 (instruction -> KHREJ .)
    LKOLA           reduce using rule 25 (instruction -> KHREJ .)
    MA7ED           reduce using rule 25 (instruction -> KHREJ .)
    DIR             reduce using rule 25 (instruction -> KHREJ .)
    QRA             reduce using rule 25 (instruction -> KHREJ .)
    TOL             reduce using rule 25 (instruction -> KHREJ .)
    TA3RIF          reduce using rule 25 (instruction -> KHREJ .)
    RED             reduce using rule 25 (instruction -> KHREJ .)
    [               reduce using rule 25 (instruction -> KHREJ .)
    $end            reduce using rule 25 (instruction -> KHREJ .)
    }               reduce using rule 25 (instruction -> KHREJ .)


state 14

    (26) instruction -> KMEL .

    KHREJ           reduce using rule 26 (instruction -> KMEL .)
    KMEL            reduce using rule 26 (instruction -> KMEL .)
    ID              reduce using rule 26 (instruction -> KMEL .)
    MOJOD           reduce using rule 26 (instruction -> KMEL .)
    KTEB            reduce using rule 26 (instruction -> KMEL .)
    (               reduce using rule 26 (instruction -> KMEL .)
    MINUS           reduce using rule 26 (instruction -> KMEL .)
    PLUS            reduce using rule 26 (instruction -> KMEL .)
    INT             reduce using rule 26 (instruction -> KMEL .)
    FLOAT           reduce using rule 26 (instruction -> KMEL .)
    STRING          reduce using rule 26 (instruction -> KMEL .)
    KHATE2          reduce using rule 26 (instruction -> KMEL .)
    S7I7            reduce using rule 26 (instruction -> KMEL .)
    WALO            reduce using rule 26 (instruction -> KMEL .)
    JEREB           reduce using rule 26 (instruction -> KMEL .)
    ILA             reduce using rule 26 (instruction -> KMEL .)
    LKOLA           reduce using rule 26 (instruction -> KMEL .)
    MA7ED           reduce using rule 26 (instruction -> KMEL .)
    DIR             reduce using rule 26 (instruction -> KMEL .)
    QRA             reduce using rule 26 (instruction -> KMEL .)
    TOL             reduce using rule 26 (instruction -> KMEL .)
    TA3RIF          reduce using rule 26 (instruction -> KMEL .)
    RED             reduce using rule 26 (instruction -> KMEL .)
    [               reduce using rule 26 (instruction -> KMEL .)
    $end            reduce using rule 26 (instruction -> KMEL .)
    }               reduce using rule 26 (instruction -> KMEL .)


state 15

    (27) instruction -> while .

    KHREJ           reduce using rule 27 (instruction -> while .)
    KMEL            reduce using rule 27 (instruction -> while .)
    ID              reduce using rule 27 (instruction -> while .)
    MOJOD           reduce using rule 27 (instruction -> while .)
    KTEB            reduce using rule 27 (instruction -> while .)
    (               reduce using rule 27 (instruction -> while .)
    MINUS           reduce using rule 27 (instruction -> while .)
    PLUS            reduce using rule 27 (instruction -> while .)
    INT             reduce using rule 27 (instruction -> while .)
    FLOAT           reduce using rule 27 (instruction -> while .)
    STRING          reduce using rule 27 (instruction -> while .)
    KHATE2          reduce using rule 27 (instruction -> while .)
    S7I7            reduce using rule 27 (instruction -> while .)
    WALO            reduce using rule 27 (instruction -> while .)
    JEREB           reduce using rule 27 (instruction -> while .)
    ILA             reduce using rule 27 (instruction -> while .)
    LKOLA           reduce using rule 27 (instruction -> while .)
    MA7ED           reduce using rule 27 (instruction -> while .)
    DIR             reduce using rule 27 (instruction -> while .)
    QRA             reduce using rule 27 (instruction -> while .)
    TOL             reduce using rule 27 (instruction -> while .)
    TA3RIF          reduce using rule 27 (instruction -> while .)
    RED             reduce using rule 27 (instruction -> while .)
    [               reduce using rule 27 (instruction -> while .)
    $end            reduce using rule 27 (instruction -> while .)
    }               reduce using rule 27 (instruction -> while .)


state 16

    (28) instruction -> doWhile .

    KHREJ           reduce using rule 28 (instruction -> doWhile .)
    KMEL            reduce using rule 28 (instruction -> doWhile .)
    ID              reduce using rule 28 (instruction -> doWhile .)
    MOJOD           reduce using rule 28 (instruction -> doWhile .)
    KTEB            reduce using rule 28 (instruction -> doWhile .)
    (               reduce using rule 28 (instruction -> doWhile .)
    MINUS           reduce using rule 28 (instruction -> doWhile .)
    PLUS            reduce using rule 28 (instruction -> doWhile .)
    INT             reduce using rule 28 (instruction -> doWhile .)
    FLOAT           reduce using rule 28 (instruction -> doWhile .)
    STRING          reduce using rule 28 (instruction -> doWhile .)
    KHATE2          reduce using rule 28 (instruction -> doWhile .)
    S7I7            reduce using rule 28 (instruction -> doWhile .)
    WALO            reduce using rule 28 (instruction -> doWhile .)
    JEREB           reduce using rule 28 (instruction -> doWhile .)
    ILA             reduce using rule 28 (instruction -> doWhile .)
    LKOLA           reduce using rule 28 (instruction -> doWhile .)
    MA7ED           reduce using rule 28 (instruction -> doWhile .)
    DIR             reduce using rule 28 (instruction -> doWhile .)
    QRA             reduce using rule 28 (instruction -> doWhile .)
    TOL             reduce using rule 28 (instruction -> doWhile .)
    TA3RIF          reduce using rule 28 (instruction -> doWhile .)
    RED             reduce using rule 28 (instruction -> doWhile .)
    [               reduce using rule 28 (instruction -> doWhile .)
    $end            reduce using rule 28 (instruction -> doWhile .)
    }               reduce using rule 28 (instruction -> doWhile .)


state 17

    (29) instruction -> input .

    KHREJ           reduce using rule 29 (instruction -> input .)
    KMEL            reduce using rule 29 (instruction -> input .)
    ID              reduce using rule 29 (instruction -> input .)
    MOJOD           reduce using rule 29 (instruction -> input .)
    KTEB            reduce using rule 29 (instruction -> input .)
    (               reduce using rule 29 (instruction -> input .)
    MINUS           reduce using rule 29 (instruction -> input .)
    PLUS            reduce using rule 29 (instruction -> input .)
    INT             reduce using rule 29 (instruction -> input .)
    FLOAT           reduce using rule 29 (instruction -> input .)
    STRING          reduce using rule 29 (instruction -> input .)
    KHATE2          reduce using rule 29 (instruction -> input .)
    S7I7            reduce using rule 29 (instruction -> input .)
    WALO            reduce using rule 29 (instruction -> input .)
    JEREB           reduce using rule 29 (instruction -> input .)
    ILA             reduce using rule 29 (instruction -> input .)
    LKOLA           reduce using rule 29 (instruction -> input .)
    MA7ED           reduce using rule 29 (instruction -> input .)
    DIR             reduce using rule 29 (instruction -> input .)
    QRA             reduce using rule 29 (instruction -> input .)
    TOL             reduce using rule 29 (instruction -> input .)
    TA3RIF          reduce using rule 29 (instruction -> input .)
    RED             reduce using rule 29 (instruction -> input .)
    [               reduce using rule 29 (instruction -> input .)
    $end            reduce using rule 29 (instruction -> input .)
    }               reduce using rule 29 (instruction -> input .)


state 18

    (30) instruction -> len .

    KHREJ           reduce using rule 30 (instruction -> len .)
    KMEL            reduce using rule 30 (instruction -> len .)
    ID              reduce using rule 30 (instruction -> len .)
    MOJOD           reduce using rule 30 (instruction -> len .)
    KTEB            reduce using rule 30 (instruction -> len .)
    (               reduce using rule 30 (instruction -> len .)
    MINUS           reduce using rule 30 (instruction -> len .)
    PLUS            reduce using rule 30 (instruction -> len .)
    INT             reduce using rule 30 (instruction -> len .)
    FLOAT           reduce using rule 30 (instruction -> len .)
    STRING          reduce using rule 30 (instruction -> len .)
    KHATE2          reduce using rule 30 (instruction -> len .)
    S7I7            reduce using rule 30 (instruction -> len .)
    WALO            reduce using rule 30 (instruction -> len .)
    JEREB           reduce using rule 30 (instruction -> len .)
    ILA             reduce using rule 30 (instruction -> len .)
    LKOLA           reduce using rule 30 (instruction -> len .)
    MA7ED           reduce using rule 30 (instruction -> len .)
    DIR             reduce using rule 30 (instruction -> len .)
    QRA             reduce using rule 30 (instruction -> len .)
    TOL             reduce using rule 30 (instruction -> len .)
    TA3RIF          reduce using rule 30 (instruction -> len .)
    RED             reduce using rule 30 (instruction -> len .)
    [               reduce using rule 30 (instruction -> len .)
    $end            reduce using rule 30 (instruction -> len .)
    }               reduce using rule 30 (instruction -> len .)


state 19

    (31) instruction -> empty .

    KHREJ           reduce using rule 31 (instruction -> empty .)
    KMEL            reduce using rule 31 (instruction -> empty .)
    ID              reduce using rule 31 (instruction -> empty .)
    MOJOD           reduce using rule 31 (instruction -> empty .)
    KTEB            reduce using rule 31 (instruction -> empty .)
    (               reduce using rule 31 (instruction -> empty .)
    MINUS           reduce using rule 31 (instruction -> empty .)
    PLUS            reduce using rule 31 (instruction -> empty .)
    INT             reduce using rule 31 (instruction -> empty .)
    FLOAT           reduce using rule 31 (instruction -> empty .)
    STRING          reduce using rule 31 (instruction -> empty .)
    KHATE2          reduce using rule 31 (instruction -> empty .)
    S7I7            reduce using rule 31 (instruction -> empty .)
    WALO            reduce using rule 31 (instruction -> empty .)
    JEREB           reduce using rule 31 (instruction -> empty .)
    ILA             reduce using rule 31 (instruction -> empty .)
    LKOLA           reduce using rule 31 (instruction -> empty .)
    MA7ED           reduce using rule 31 (instruction -> empty .)
    DIR             reduce using rule 31 (instruction -> empty .)
    QRA             reduce using rule 31 (instruction -> empty .)
    TOL             reduce using rule 31 (instruction -> empty .)
    TA3RIF          reduce using rule 31 (instruction -> empty .)
    RED             reduce using rule 31 (instruction -> empty .)
    [               reduce using rule 31 (instruction -> empty .)
    $end            reduce using rule 31 (instruction -> empty .)
    }               reduce using rule 31 (instruction -> empty .)


state 20

    (32) instruction -> func .

    KHREJ           reduce using rule 32 (instruction -> func .)
    KMEL            reduce using rule 32 (instruction -> func .)
    ID              reduce using rule 32 (instruction -> func .)
    MOJOD           reduce using rule 32 (instruction -> func .)
    KTEB            reduce using rule 32 (instruction -> func .)
    (               reduce using rule 32 (instruction -> func .)
    MINUS           reduce using rule 32 (instruction -> func .)
    PLUS            reduce using rule 32 (instruction -> func .)
    INT             reduce using rule 32 (instruction -> func .)
    FLOAT           reduce using rule 32 (instruction -> func .)
    STRING          reduce using rule 32 (instruction -> func .)
    KHATE2          reduce using rule 32 (instruction -> func .)
    S7I7            reduce using rule 32 (instruction -> func .)
    WALO            reduce using rule 32 (instruction -> func .)
    JEREB           reduce using rule 32 (instruction -> func .)
    ILA             reduce using rule 32 (instruction -> func .)
    LKOLA           reduce using rule 32 (instruction -> func .)
    MA7ED           reduce using rule 32 (instruction -> func .)
    DIR             reduce using rule 32 (instruction -> func .)
    QRA             reduce using rule 32 (instruction -> func .)
    TOL             reduce using rule 32 (instruction -> func .)
    TA3RIF          reduce using rule 32 (instruction -> func .)
    RED             reduce using rule 32 (instruction -> func .)
    [               reduce using rule 32 (instruction -> func .)
    $end            reduce using rule 32 (instruction -> func .)
    }               reduce using rule 32 (instruction -> func .)


state 21

    (33) instruction -> appel_func .

    KHREJ           reduce using rule 33 (instruction -> appel_func .)
    KMEL            reduce using rule 33 (instruction -> appel_func .)
    ID              reduce using rule 33 (instruction -> appel_func .)
    MOJOD           reduce using rule 33 (instruction -> appel_func .)
    KTEB            reduce using rule 33 (instruction -> appel_func .)
    (               reduce using rule 33 (instruction -> appel_func .)
    MINUS           reduce using rule 33 (instruction -> appel_func .)
    PLUS            reduce using rule 33 (instruction -> appel_func .)
    INT             reduce using rule 33 (instruction -> appel_func .)
    FLOAT           reduce using rule 33 (instruction -> appel_func .)
    STRING          reduce using rule 33 (instruction -> appel_func .)
    KHATE2          reduce using rule 33 (instruction -> appel_func .)
    S7I7            reduce using rule 33 (instruction -> appel_func .)
    WALO            reduce using rule 33 (instruction -> appel_func .)
    JEREB           reduce using rule 33 (instruction -> appel_func .)
    ILA             reduce using rule 33 (instruction -> appel_func .)
    LKOLA           reduce using rule 33 (instruction -> appel_func .)
    MA7ED           reduce using rule 33 (instruction -> appel_func .)
    DIR             reduce using rule 33 (instruction -> appel_func .)
    QRA             reduce using rule 33 (instruction -> appel_func .)
    TOL             reduce using rule 33 (instruction -> appel_func .)
    TA3RIF          reduce using rule 33 (instruction -> appel_func .)
    RED             reduce using rule 33 (instruction -> appel_func .)
    [               reduce using rule 33 (instruction -> appel_func .)
    $end            reduce using rule 33 (instruction -> appel_func .)
    }               reduce using rule 33 (instruction -> appel_func .)


state 22

    (34) instruction -> return .

    KHREJ           reduce using rule 34 (instruction -> return .)
    KMEL            reduce using rule 34 (instruction -> return .)
    ID              reduce using rule 34 (instruction -> return .)
    MOJOD           reduce using rule 34 (instruction -> return .)
    KTEB            reduce using rule 34 (instruction -> return .)
    (               reduce using rule 34 (instruction -> return .)
    MINUS           reduce using rule 34 (instruction -> return .)
    PLUS            reduce using rule 34 (instruction -> return .)
    INT             reduce using rule 34 (instruction -> return .)
    FLOAT           reduce using rule 34 (instruction -> return .)
    STRING          reduce using rule 34 (instruction -> return .)
    KHATE2          reduce using rule 34 (instruction -> return .)
    S7I7            reduce using rule 34 (instruction -> return .)
    WALO            reduce using rule 34 (instruction -> return .)
    JEREB           reduce using rule 34 (instruction -> return .)
    ILA             reduce using rule 34 (instruction -> return .)
    LKOLA           reduce using rule 34 (instruction -> return .)
    MA7ED           reduce using rule 34 (instruction -> return .)
    DIR             reduce using rule 34 (instruction -> return .)
    QRA             reduce using rule 34 (instruction -> return .)
    TOL             reduce using rule 34 (instruction -> return .)
    TA3RIF          reduce using rule 34 (instruction -> return .)
    RED             reduce using rule 34 (instruction -> return .)
    [               reduce using rule 34 (instruction -> return .)
    $end            reduce using rule 34 (instruction -> return .)
    }               reduce using rule 34 (instruction -> return .)


state 23

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input
    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION
    (58) expression -> ID .
    (90) appel_func -> ID . ( argument_list )
    (91) appel_func -> ID . ( )
    (76) arrayelt -> ID . dimensions
    (79) arrayslice -> ID . [ expression : expression ]
    (80) arrayslice -> ID . [ : expression ]
    (81) arrayslice -> ID . [ expression : ]
    (82) arrayslice -> ID . [ : ]
    (77) dimensions -> . [ expression ]
    (78) dimensions -> . dimensions [ expression ]

  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    EQUALS          shift and go to state 53
    INCREMENTATION  shift and go to state 54
    DECREMENTATION  shift and go to state 55
    PLUS            reduce using rule 58 (expression -> ID .)
    MINUS           reduce using rule 58 (expression -> ID .)
    TIMES           reduce using rule 58 (expression -> ID .)
    DIVIDE          reduce using rule 58 (expression -> ID .)
    KHREJ           reduce using rule 58 (expression -> ID .)
    KMEL            reduce using rule 58 (expression -> ID .)
    ID              reduce using rule 58 (expression -> ID .)
    MOJOD           reduce using rule 58 (expression -> ID .)
    KTEB            reduce using rule 58 (expression -> ID .)
    INT             reduce using rule 58 (expression -> ID .)
    FLOAT           reduce using rule 58 (expression -> ID .)
    STRING          reduce using rule 58 (expression -> ID .)
    KHATE2          reduce using rule 58 (expression -> ID .)
    S7I7            reduce using rule 58 (expression -> ID .)
    WALO            reduce using rule 58 (expression -> ID .)
    JEREB           reduce using rule 58 (expression -> ID .)
    ILA             reduce using rule 58 (expression -> ID .)
    LKOLA           reduce using rule 58 (expression -> ID .)
    MA7ED           reduce using rule 58 (expression -> ID .)
    DIR             reduce using rule 58 (expression -> ID .)
    QRA             reduce using rule 58 (expression -> ID .)
    TOL             reduce using rule 58 (expression -> ID .)
    TA3RIF          reduce using rule 58 (expression -> ID .)
    RED             reduce using rule 58 (expression -> ID .)
    $end            reduce using rule 58 (expression -> ID .)
    }               reduce using rule 58 (expression -> ID .)
    (               shift and go to state 56
    [               shift and go to state 58

  ! (               [ reduce using rule 58 (expression -> ID .) ]
  ! [               [ reduce using rule 58 (expression -> ID .) ]

    dimensions                     shift and go to state 57

state 24

    (6) var_assign -> MOJOD . var_assign
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign

    ID              shift and go to state 60
    MOJOD           shift and go to state 24

    var_assign                     shift and go to state 59

state 25

    (7) arrayelt_assign -> arrayelt . EQUALS expression
    (70) expression -> arrayelt .

    EQUALS          shift and go to state 61
    PLUS            reduce using rule 70 (expression -> arrayelt .)
    MINUS           reduce using rule 70 (expression -> arrayelt .)
    TIMES           reduce using rule 70 (expression -> arrayelt .)
    DIVIDE          reduce using rule 70 (expression -> arrayelt .)
    KHREJ           reduce using rule 70 (expression -> arrayelt .)
    KMEL            reduce using rule 70 (expression -> arrayelt .)
    ID              reduce using rule 70 (expression -> arrayelt .)
    MOJOD           reduce using rule 70 (expression -> arrayelt .)
    KTEB            reduce using rule 70 (expression -> arrayelt .)
    (               reduce using rule 70 (expression -> arrayelt .)
    INT             reduce using rule 70 (expression -> arrayelt .)
    FLOAT           reduce using rule 70 (expression -> arrayelt .)
    STRING          reduce using rule 70 (expression -> arrayelt .)
    KHATE2          reduce using rule 70 (expression -> arrayelt .)
    S7I7            reduce using rule 70 (expression -> arrayelt .)
    WALO            reduce using rule 70 (expression -> arrayelt .)
    JEREB           reduce using rule 70 (expression -> arrayelt .)
    ILA             reduce using rule 70 (expression -> arrayelt .)
    LKOLA           reduce using rule 70 (expression -> arrayelt .)
    MA7ED           reduce using rule 70 (expression -> arrayelt .)
    DIR             reduce using rule 70 (expression -> arrayelt .)
    QRA             reduce using rule 70 (expression -> arrayelt .)
    TOL             reduce using rule 70 (expression -> arrayelt .)
    TA3RIF          reduce using rule 70 (expression -> arrayelt .)
    RED             reduce using rule 70 (expression -> arrayelt .)
    [               reduce using rule 70 (expression -> arrayelt .)
    $end            reduce using rule 70 (expression -> arrayelt .)
    }               reduce using rule 70 (expression -> arrayelt .)


state 26

    (93) printing -> KTEB . ( condition )
    (94) printing -> KTEB . ( incrementation )
    (95) printing -> KTEB . ( decrementation )

    (               shift and go to state 62


state 27

    (55) expression -> ( . expression )
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 63
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 28

    (57) expression -> PLUS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 66
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 29

    (56) expression -> MINUS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 67
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 30

    (63) expression -> INT .

    PLUS            reduce using rule 63 (expression -> INT .)
    MINUS           reduce using rule 63 (expression -> INT .)
    TIMES           reduce using rule 63 (expression -> INT .)
    DIVIDE          reduce using rule 63 (expression -> INT .)
    KHREJ           reduce using rule 63 (expression -> INT .)
    KMEL            reduce using rule 63 (expression -> INT .)
    ID              reduce using rule 63 (expression -> INT .)
    MOJOD           reduce using rule 63 (expression -> INT .)
    KTEB            reduce using rule 63 (expression -> INT .)
    (               reduce using rule 63 (expression -> INT .)
    INT             reduce using rule 63 (expression -> INT .)
    FLOAT           reduce using rule 63 (expression -> INT .)
    STRING          reduce using rule 63 (expression -> INT .)
    KHATE2          reduce using rule 63 (expression -> INT .)
    S7I7            reduce using rule 63 (expression -> INT .)
    WALO            reduce using rule 63 (expression -> INT .)
    JEREB           reduce using rule 63 (expression -> INT .)
    ILA             reduce using rule 63 (expression -> INT .)
    LKOLA           reduce using rule 63 (expression -> INT .)
    MA7ED           reduce using rule 63 (expression -> INT .)
    DIR             reduce using rule 63 (expression -> INT .)
    QRA             reduce using rule 63 (expression -> INT .)
    TOL             reduce using rule 63 (expression -> INT .)
    TA3RIF          reduce using rule 63 (expression -> INT .)
    RED             reduce using rule 63 (expression -> INT .)
    [               reduce using rule 63 (expression -> INT .)
    $end            reduce using rule 63 (expression -> INT .)
    )               reduce using rule 63 (expression -> INT .)
    }               reduce using rule 63 (expression -> INT .)
    ]               reduce using rule 63 (expression -> INT .)
    ,               reduce using rule 63 (expression -> INT .)
    ;               reduce using rule 63 (expression -> INT .)
    :               reduce using rule 63 (expression -> INT .)
    SUP             reduce using rule 63 (expression -> INT .)
    INF             reduce using rule 63 (expression -> INT .)
    EQUALSCOMP      reduce using rule 63 (expression -> INT .)
    SUPEQUALS       reduce using rule 63 (expression -> INT .)
    INFEQUALS       reduce using rule 63 (expression -> INT .)
    DIFFERENT       reduce using rule 63 (expression -> INT .)
    WA              reduce using rule 63 (expression -> INT .)
    AW              reduce using rule 63 (expression -> INT .)


state 31

    (64) expression -> FLOAT .

    PLUS            reduce using rule 64 (expression -> FLOAT .)
    MINUS           reduce using rule 64 (expression -> FLOAT .)
    TIMES           reduce using rule 64 (expression -> FLOAT .)
    DIVIDE          reduce using rule 64 (expression -> FLOAT .)
    KHREJ           reduce using rule 64 (expression -> FLOAT .)
    KMEL            reduce using rule 64 (expression -> FLOAT .)
    ID              reduce using rule 64 (expression -> FLOAT .)
    MOJOD           reduce using rule 64 (expression -> FLOAT .)
    KTEB            reduce using rule 64 (expression -> FLOAT .)
    (               reduce using rule 64 (expression -> FLOAT .)
    INT             reduce using rule 64 (expression -> FLOAT .)
    FLOAT           reduce using rule 64 (expression -> FLOAT .)
    STRING          reduce using rule 64 (expression -> FLOAT .)
    KHATE2          reduce using rule 64 (expression -> FLOAT .)
    S7I7            reduce using rule 64 (expression -> FLOAT .)
    WALO            reduce using rule 64 (expression -> FLOAT .)
    JEREB           reduce using rule 64 (expression -> FLOAT .)
    ILA             reduce using rule 64 (expression -> FLOAT .)
    LKOLA           reduce using rule 64 (expression -> FLOAT .)
    MA7ED           reduce using rule 64 (expression -> FLOAT .)
    DIR             reduce using rule 64 (expression -> FLOAT .)
    QRA             reduce using rule 64 (expression -> FLOAT .)
    TOL             reduce using rule 64 (expression -> FLOAT .)
    TA3RIF          reduce using rule 64 (expression -> FLOAT .)
    RED             reduce using rule 64 (expression -> FLOAT .)
    [               reduce using rule 64 (expression -> FLOAT .)
    $end            reduce using rule 64 (expression -> FLOAT .)
    )               reduce using rule 64 (expression -> FLOAT .)
    }               reduce using rule 64 (expression -> FLOAT .)
    ]               reduce using rule 64 (expression -> FLOAT .)
    ,               reduce using rule 64 (expression -> FLOAT .)
    ;               reduce using rule 64 (expression -> FLOAT .)
    :               reduce using rule 64 (expression -> FLOAT .)
    SUP             reduce using rule 64 (expression -> FLOAT .)
    INF             reduce using rule 64 (expression -> FLOAT .)
    EQUALSCOMP      reduce using rule 64 (expression -> FLOAT .)
    SUPEQUALS       reduce using rule 64 (expression -> FLOAT .)
    INFEQUALS       reduce using rule 64 (expression -> FLOAT .)
    DIFFERENT       reduce using rule 64 (expression -> FLOAT .)
    WA              reduce using rule 64 (expression -> FLOAT .)
    AW              reduce using rule 64 (expression -> FLOAT .)


state 32

    (65) expression -> STRING .

    PLUS            reduce using rule 65 (expression -> STRING .)
    MINUS           reduce using rule 65 (expression -> STRING .)
    TIMES           reduce using rule 65 (expression -> STRING .)
    DIVIDE          reduce using rule 65 (expression -> STRING .)
    KHREJ           reduce using rule 65 (expression -> STRING .)
    KMEL            reduce using rule 65 (expression -> STRING .)
    ID              reduce using rule 65 (expression -> STRING .)
    MOJOD           reduce using rule 65 (expression -> STRING .)
    KTEB            reduce using rule 65 (expression -> STRING .)
    (               reduce using rule 65 (expression -> STRING .)
    INT             reduce using rule 65 (expression -> STRING .)
    FLOAT           reduce using rule 65 (expression -> STRING .)
    STRING          reduce using rule 65 (expression -> STRING .)
    KHATE2          reduce using rule 65 (expression -> STRING .)
    S7I7            reduce using rule 65 (expression -> STRING .)
    WALO            reduce using rule 65 (expression -> STRING .)
    JEREB           reduce using rule 65 (expression -> STRING .)
    ILA             reduce using rule 65 (expression -> STRING .)
    LKOLA           reduce using rule 65 (expression -> STRING .)
    MA7ED           reduce using rule 65 (expression -> STRING .)
    DIR             reduce using rule 65 (expression -> STRING .)
    QRA             reduce using rule 65 (expression -> STRING .)
    TOL             reduce using rule 65 (expression -> STRING .)
    TA3RIF          reduce using rule 65 (expression -> STRING .)
    RED             reduce using rule 65 (expression -> STRING .)
    [               reduce using rule 65 (expression -> STRING .)
    $end            reduce using rule 65 (expression -> STRING .)
    )               reduce using rule 65 (expression -> STRING .)
    }               reduce using rule 65 (expression -> STRING .)
    ]               reduce using rule 65 (expression -> STRING .)
    ,               reduce using rule 65 (expression -> STRING .)
    ;               reduce using rule 65 (expression -> STRING .)
    :               reduce using rule 65 (expression -> STRING .)
    SUP             reduce using rule 65 (expression -> STRING .)
    INF             reduce using rule 65 (expression -> STRING .)
    EQUALSCOMP      reduce using rule 65 (expression -> STRING .)
    SUPEQUALS       reduce using rule 65 (expression -> STRING .)
    INFEQUALS       reduce using rule 65 (expression -> STRING .)
    DIFFERENT       reduce using rule 65 (expression -> STRING .)
    WA              reduce using rule 65 (expression -> STRING .)
    AW              reduce using rule 65 (expression -> STRING .)


state 33

    (66) expression -> KHATE2 .

    PLUS            reduce using rule 66 (expression -> KHATE2 .)
    MINUS           reduce using rule 66 (expression -> KHATE2 .)
    TIMES           reduce using rule 66 (expression -> KHATE2 .)
    DIVIDE          reduce using rule 66 (expression -> KHATE2 .)
    KHREJ           reduce using rule 66 (expression -> KHATE2 .)
    KMEL            reduce using rule 66 (expression -> KHATE2 .)
    ID              reduce using rule 66 (expression -> KHATE2 .)
    MOJOD           reduce using rule 66 (expression -> KHATE2 .)
    KTEB            reduce using rule 66 (expression -> KHATE2 .)
    (               reduce using rule 66 (expression -> KHATE2 .)
    INT             reduce using rule 66 (expression -> KHATE2 .)
    FLOAT           reduce using rule 66 (expression -> KHATE2 .)
    STRING          reduce using rule 66 (expression -> KHATE2 .)
    KHATE2          reduce using rule 66 (expression -> KHATE2 .)
    S7I7            reduce using rule 66 (expression -> KHATE2 .)
    WALO            reduce using rule 66 (expression -> KHATE2 .)
    JEREB           reduce using rule 66 (expression -> KHATE2 .)
    ILA             reduce using rule 66 (expression -> KHATE2 .)
    LKOLA           reduce using rule 66 (expression -> KHATE2 .)
    MA7ED           reduce using rule 66 (expression -> KHATE2 .)
    DIR             reduce using rule 66 (expression -> KHATE2 .)
    QRA             reduce using rule 66 (expression -> KHATE2 .)
    TOL             reduce using rule 66 (expression -> KHATE2 .)
    TA3RIF          reduce using rule 66 (expression -> KHATE2 .)
    RED             reduce using rule 66 (expression -> KHATE2 .)
    [               reduce using rule 66 (expression -> KHATE2 .)
    $end            reduce using rule 66 (expression -> KHATE2 .)
    )               reduce using rule 66 (expression -> KHATE2 .)
    }               reduce using rule 66 (expression -> KHATE2 .)
    ]               reduce using rule 66 (expression -> KHATE2 .)
    ,               reduce using rule 66 (expression -> KHATE2 .)
    ;               reduce using rule 66 (expression -> KHATE2 .)
    :               reduce using rule 66 (expression -> KHATE2 .)
    SUP             reduce using rule 66 (expression -> KHATE2 .)
    INF             reduce using rule 66 (expression -> KHATE2 .)
    EQUALSCOMP      reduce using rule 66 (expression -> KHATE2 .)
    SUPEQUALS       reduce using rule 66 (expression -> KHATE2 .)
    INFEQUALS       reduce using rule 66 (expression -> KHATE2 .)
    DIFFERENT       reduce using rule 66 (expression -> KHATE2 .)
    WA              reduce using rule 66 (expression -> KHATE2 .)
    AW              reduce using rule 66 (expression -> KHATE2 .)


state 34

    (67) expression -> S7I7 .

    PLUS            reduce using rule 67 (expression -> S7I7 .)
    MINUS           reduce using rule 67 (expression -> S7I7 .)
    TIMES           reduce using rule 67 (expression -> S7I7 .)
    DIVIDE          reduce using rule 67 (expression -> S7I7 .)
    KHREJ           reduce using rule 67 (expression -> S7I7 .)
    KMEL            reduce using rule 67 (expression -> S7I7 .)
    ID              reduce using rule 67 (expression -> S7I7 .)
    MOJOD           reduce using rule 67 (expression -> S7I7 .)
    KTEB            reduce using rule 67 (expression -> S7I7 .)
    (               reduce using rule 67 (expression -> S7I7 .)
    INT             reduce using rule 67 (expression -> S7I7 .)
    FLOAT           reduce using rule 67 (expression -> S7I7 .)
    STRING          reduce using rule 67 (expression -> S7I7 .)
    KHATE2          reduce using rule 67 (expression -> S7I7 .)
    S7I7            reduce using rule 67 (expression -> S7I7 .)
    WALO            reduce using rule 67 (expression -> S7I7 .)
    JEREB           reduce using rule 67 (expression -> S7I7 .)
    ILA             reduce using rule 67 (expression -> S7I7 .)
    LKOLA           reduce using rule 67 (expression -> S7I7 .)
    MA7ED           reduce using rule 67 (expression -> S7I7 .)
    DIR             reduce using rule 67 (expression -> S7I7 .)
    QRA             reduce using rule 67 (expression -> S7I7 .)
    TOL             reduce using rule 67 (expression -> S7I7 .)
    TA3RIF          reduce using rule 67 (expression -> S7I7 .)
    RED             reduce using rule 67 (expression -> S7I7 .)
    [               reduce using rule 67 (expression -> S7I7 .)
    $end            reduce using rule 67 (expression -> S7I7 .)
    )               reduce using rule 67 (expression -> S7I7 .)
    }               reduce using rule 67 (expression -> S7I7 .)
    ]               reduce using rule 67 (expression -> S7I7 .)
    ,               reduce using rule 67 (expression -> S7I7 .)
    ;               reduce using rule 67 (expression -> S7I7 .)
    :               reduce using rule 67 (expression -> S7I7 .)
    SUP             reduce using rule 67 (expression -> S7I7 .)
    INF             reduce using rule 67 (expression -> S7I7 .)
    EQUALSCOMP      reduce using rule 67 (expression -> S7I7 .)
    SUPEQUALS       reduce using rule 67 (expression -> S7I7 .)
    INFEQUALS       reduce using rule 67 (expression -> S7I7 .)
    DIFFERENT       reduce using rule 67 (expression -> S7I7 .)
    WA              reduce using rule 67 (expression -> S7I7 .)
    AW              reduce using rule 67 (expression -> S7I7 .)


state 35

    (68) expression -> WALO .

    PLUS            reduce using rule 68 (expression -> WALO .)
    MINUS           reduce using rule 68 (expression -> WALO .)
    TIMES           reduce using rule 68 (expression -> WALO .)
    DIVIDE          reduce using rule 68 (expression -> WALO .)
    KHREJ           reduce using rule 68 (expression -> WALO .)
    KMEL            reduce using rule 68 (expression -> WALO .)
    ID              reduce using rule 68 (expression -> WALO .)
    MOJOD           reduce using rule 68 (expression -> WALO .)
    KTEB            reduce using rule 68 (expression -> WALO .)
    (               reduce using rule 68 (expression -> WALO .)
    INT             reduce using rule 68 (expression -> WALO .)
    FLOAT           reduce using rule 68 (expression -> WALO .)
    STRING          reduce using rule 68 (expression -> WALO .)
    KHATE2          reduce using rule 68 (expression -> WALO .)
    S7I7            reduce using rule 68 (expression -> WALO .)
    WALO            reduce using rule 68 (expression -> WALO .)
    JEREB           reduce using rule 68 (expression -> WALO .)
    ILA             reduce using rule 68 (expression -> WALO .)
    LKOLA           reduce using rule 68 (expression -> WALO .)
    MA7ED           reduce using rule 68 (expression -> WALO .)
    DIR             reduce using rule 68 (expression -> WALO .)
    QRA             reduce using rule 68 (expression -> WALO .)
    TOL             reduce using rule 68 (expression -> WALO .)
    TA3RIF          reduce using rule 68 (expression -> WALO .)
    RED             reduce using rule 68 (expression -> WALO .)
    [               reduce using rule 68 (expression -> WALO .)
    $end            reduce using rule 68 (expression -> WALO .)
    )               reduce using rule 68 (expression -> WALO .)
    }               reduce using rule 68 (expression -> WALO .)
    ]               reduce using rule 68 (expression -> WALO .)
    ,               reduce using rule 68 (expression -> WALO .)
    ;               reduce using rule 68 (expression -> WALO .)
    :               reduce using rule 68 (expression -> WALO .)
    SUP             reduce using rule 68 (expression -> WALO .)
    INF             reduce using rule 68 (expression -> WALO .)
    EQUALSCOMP      reduce using rule 68 (expression -> WALO .)
    SUPEQUALS       reduce using rule 68 (expression -> WALO .)
    INFEQUALS       reduce using rule 68 (expression -> WALO .)
    DIFFERENT       reduce using rule 68 (expression -> WALO .)
    WA              reduce using rule 68 (expression -> WALO .)
    AW              reduce using rule 68 (expression -> WALO .)


state 36

    (69) expression -> array .

    PLUS            reduce using rule 69 (expression -> array .)
    MINUS           reduce using rule 69 (expression -> array .)
    TIMES           reduce using rule 69 (expression -> array .)
    DIVIDE          reduce using rule 69 (expression -> array .)
    KHREJ           reduce using rule 69 (expression -> array .)
    KMEL            reduce using rule 69 (expression -> array .)
    ID              reduce using rule 69 (expression -> array .)
    MOJOD           reduce using rule 69 (expression -> array .)
    KTEB            reduce using rule 69 (expression -> array .)
    (               reduce using rule 69 (expression -> array .)
    INT             reduce using rule 69 (expression -> array .)
    FLOAT           reduce using rule 69 (expression -> array .)
    STRING          reduce using rule 69 (expression -> array .)
    KHATE2          reduce using rule 69 (expression -> array .)
    S7I7            reduce using rule 69 (expression -> array .)
    WALO            reduce using rule 69 (expression -> array .)
    JEREB           reduce using rule 69 (expression -> array .)
    ILA             reduce using rule 69 (expression -> array .)
    LKOLA           reduce using rule 69 (expression -> array .)
    MA7ED           reduce using rule 69 (expression -> array .)
    DIR             reduce using rule 69 (expression -> array .)
    QRA             reduce using rule 69 (expression -> array .)
    TOL             reduce using rule 69 (expression -> array .)
    TA3RIF          reduce using rule 69 (expression -> array .)
    RED             reduce using rule 69 (expression -> array .)
    [               reduce using rule 69 (expression -> array .)
    $end            reduce using rule 69 (expression -> array .)
    )               reduce using rule 69 (expression -> array .)
    }               reduce using rule 69 (expression -> array .)
    ]               reduce using rule 69 (expression -> array .)
    ,               reduce using rule 69 (expression -> array .)
    ;               reduce using rule 69 (expression -> array .)
    :               reduce using rule 69 (expression -> array .)
    SUP             reduce using rule 69 (expression -> array .)
    INF             reduce using rule 69 (expression -> array .)
    EQUALSCOMP      reduce using rule 69 (expression -> array .)
    SUPEQUALS       reduce using rule 69 (expression -> array .)
    INFEQUALS       reduce using rule 69 (expression -> array .)
    DIFFERENT       reduce using rule 69 (expression -> array .)
    WA              reduce using rule 69 (expression -> array .)
    AW              reduce using rule 69 (expression -> array .)


state 37

    (71) expression -> arrayslice .

    PLUS            reduce using rule 71 (expression -> arrayslice .)
    MINUS           reduce using rule 71 (expression -> arrayslice .)
    TIMES           reduce using rule 71 (expression -> arrayslice .)
    DIVIDE          reduce using rule 71 (expression -> arrayslice .)
    KHREJ           reduce using rule 71 (expression -> arrayslice .)
    KMEL            reduce using rule 71 (expression -> arrayslice .)
    ID              reduce using rule 71 (expression -> arrayslice .)
    MOJOD           reduce using rule 71 (expression -> arrayslice .)
    KTEB            reduce using rule 71 (expression -> arrayslice .)
    (               reduce using rule 71 (expression -> arrayslice .)
    INT             reduce using rule 71 (expression -> arrayslice .)
    FLOAT           reduce using rule 71 (expression -> arrayslice .)
    STRING          reduce using rule 71 (expression -> arrayslice .)
    KHATE2          reduce using rule 71 (expression -> arrayslice .)
    S7I7            reduce using rule 71 (expression -> arrayslice .)
    WALO            reduce using rule 71 (expression -> arrayslice .)
    JEREB           reduce using rule 71 (expression -> arrayslice .)
    ILA             reduce using rule 71 (expression -> arrayslice .)
    LKOLA           reduce using rule 71 (expression -> arrayslice .)
    MA7ED           reduce using rule 71 (expression -> arrayslice .)
    DIR             reduce using rule 71 (expression -> arrayslice .)
    QRA             reduce using rule 71 (expression -> arrayslice .)
    TOL             reduce using rule 71 (expression -> arrayslice .)
    TA3RIF          reduce using rule 71 (expression -> arrayslice .)
    RED             reduce using rule 71 (expression -> arrayslice .)
    [               reduce using rule 71 (expression -> arrayslice .)
    $end            reduce using rule 71 (expression -> arrayslice .)
    )               reduce using rule 71 (expression -> arrayslice .)
    }               reduce using rule 71 (expression -> arrayslice .)
    ]               reduce using rule 71 (expression -> arrayslice .)
    ,               reduce using rule 71 (expression -> arrayslice .)
    ;               reduce using rule 71 (expression -> arrayslice .)
    :               reduce using rule 71 (expression -> arrayslice .)
    SUP             reduce using rule 71 (expression -> arrayslice .)
    INF             reduce using rule 71 (expression -> arrayslice .)
    EQUALSCOMP      reduce using rule 71 (expression -> arrayslice .)
    SUPEQUALS       reduce using rule 71 (expression -> arrayslice .)
    INFEQUALS       reduce using rule 71 (expression -> arrayslice .)
    DIFFERENT       reduce using rule 71 (expression -> arrayslice .)
    WA              reduce using rule 71 (expression -> arrayslice .)
    AW              reduce using rule 71 (expression -> arrayslice .)


state 38

    (61) try -> JEREB . { instruction_list } MASD9CH { instruction_list }
    (62) try -> JEREB . { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }

    {               shift and go to state 68


state 39

    (8) if -> ILA . ( condition ) { instruction_list }
    (9) if -> ILA . ( condition ) { instruction_list } WLA { instruction_list }

    (               shift and go to state 69


state 40

    (10) for -> LKOLA . ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> LKOLA . ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> LKOLA . ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> LKOLA . ( expression ; condition ; decrementation ) { instruction_list }

    (               shift and go to state 70


state 41

    (14) while -> MA7ED . ( condition ) { instruction_list }

    (               shift and go to state 71


state 42

    (15) doWhile -> DIR . { instruction_list } MA7ED ( condition )

    {               shift and go to state 72


state 43

    (59) input -> QRA . ( expression )
    (60) input -> QRA . ( )

    (               shift and go to state 73


state 44

    (96) len -> TOL . ( expression )

    (               shift and go to state 74


state 45

    (88) func -> TA3RIF . ID ( parameter_list ) { instruction_list }
    (89) func -> TA3RIF . ID ( ) { instruction_list }

    ID              shift and go to state 75


state 46

    (92) return -> RED . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 76
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 47

    (74) array -> [ . arraylist ]
    (75) array -> [ . ]
    (72) arraylist -> . expression
    (73) arraylist -> . arraylist , expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    ]               shift and go to state 78
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    arraylist                      shift and go to state 77
    expression                     shift and go to state 79
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 48

    (36) instruction_list -> instruction_list instruction .

    KHREJ           reduce using rule 36 (instruction_list -> instruction_list instruction .)
    KMEL            reduce using rule 36 (instruction_list -> instruction_list instruction .)
    ID              reduce using rule 36 (instruction_list -> instruction_list instruction .)
    MOJOD           reduce using rule 36 (instruction_list -> instruction_list instruction .)
    KTEB            reduce using rule 36 (instruction_list -> instruction_list instruction .)
    (               reduce using rule 36 (instruction_list -> instruction_list instruction .)
    MINUS           reduce using rule 36 (instruction_list -> instruction_list instruction .)
    PLUS            reduce using rule 36 (instruction_list -> instruction_list instruction .)
    INT             reduce using rule 36 (instruction_list -> instruction_list instruction .)
    FLOAT           reduce using rule 36 (instruction_list -> instruction_list instruction .)
    STRING          reduce using rule 36 (instruction_list -> instruction_list instruction .)
    KHATE2          reduce using rule 36 (instruction_list -> instruction_list instruction .)
    S7I7            reduce using rule 36 (instruction_list -> instruction_list instruction .)
    WALO            reduce using rule 36 (instruction_list -> instruction_list instruction .)
    JEREB           reduce using rule 36 (instruction_list -> instruction_list instruction .)
    ILA             reduce using rule 36 (instruction_list -> instruction_list instruction .)
    LKOLA           reduce using rule 36 (instruction_list -> instruction_list instruction .)
    MA7ED           reduce using rule 36 (instruction_list -> instruction_list instruction .)
    DIR             reduce using rule 36 (instruction_list -> instruction_list instruction .)
    QRA             reduce using rule 36 (instruction_list -> instruction_list instruction .)
    TOL             reduce using rule 36 (instruction_list -> instruction_list instruction .)
    TA3RIF          reduce using rule 36 (instruction_list -> instruction_list instruction .)
    RED             reduce using rule 36 (instruction_list -> instruction_list instruction .)
    [               reduce using rule 36 (instruction_list -> instruction_list instruction .)
    $end            reduce using rule 36 (instruction_list -> instruction_list instruction .)
    }               reduce using rule 36 (instruction_list -> instruction_list instruction .)


state 49

    (51) expression -> expression PLUS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 80
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 50

    (52) expression -> expression MINUS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 81
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 51

    (53) expression -> expression TIMES . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 82
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 52

    (54) expression -> expression DIVIDE . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 83
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 53

    (4) var_assign -> ID EQUALS . expression
    (5) var_assign -> ID EQUALS . input
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    QRA             shift and go to state 43
    [               shift and go to state 47

    expression                     shift and go to state 84
    input                          shift and go to state 85
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 54

    (2) incrementation -> ID INCREMENTATION .

    KHREJ           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KMEL            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    ID              reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MOJOD           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KTEB            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    (               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MINUS           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    PLUS            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    INT             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    FLOAT           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    STRING          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KHATE2          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    S7I7            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    WALO            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    JEREB           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    ILA             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    LKOLA           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MA7ED           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    DIR             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    QRA             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    TOL             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    TA3RIF          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    RED             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    [               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    $end            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    )               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    }               reduce using rule 2 (incrementation -> ID INCREMENTATION .)


state 55

    (3) decrementation -> ID DECREMENTATION .

    KHREJ           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KMEL            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    ID              reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MOJOD           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KTEB            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    (               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MINUS           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    PLUS            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    INT             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    FLOAT           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    STRING          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KHATE2          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    S7I7            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    WALO            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    JEREB           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    ILA             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    LKOLA           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MA7ED           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    DIR             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    QRA             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    TOL             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    TA3RIF          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    RED             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    [               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    $end            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    )               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    }               reduce using rule 3 (decrementation -> ID DECREMENTATION .)


state 56

    (90) appel_func -> ID ( . argument_list )
    (91) appel_func -> ID ( . )
    (83) argument_list -> . expression
    (84) argument_list -> . argument_list , expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    )               shift and go to state 87
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    argument_list                  shift and go to state 86
    expression                     shift and go to state 88
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 57

    (76) arrayelt -> ID dimensions .
    (78) dimensions -> dimensions . [ expression ]

  ! shift/reduce conflict for [ resolved as shift
    EQUALS          reduce using rule 76 (arrayelt -> ID dimensions .)
    PLUS            reduce using rule 76 (arrayelt -> ID dimensions .)
    MINUS           reduce using rule 76 (arrayelt -> ID dimensions .)
    TIMES           reduce using rule 76 (arrayelt -> ID dimensions .)
    DIVIDE          reduce using rule 76 (arrayelt -> ID dimensions .)
    KHREJ           reduce using rule 76 (arrayelt -> ID dimensions .)
    KMEL            reduce using rule 76 (arrayelt -> ID dimensions .)
    ID              reduce using rule 76 (arrayelt -> ID dimensions .)
    MOJOD           reduce using rule 76 (arrayelt -> ID dimensions .)
    KTEB            reduce using rule 76 (arrayelt -> ID dimensions .)
    (               reduce using rule 76 (arrayelt -> ID dimensions .)
    INT             reduce using rule 76 (arrayelt -> ID dimensions .)
    FLOAT           reduce using rule 76 (arrayelt -> ID dimensions .)
    STRING          reduce using rule 76 (arrayelt -> ID dimensions .)
    KHATE2          reduce using rule 76 (arrayelt -> ID dimensions .)
    S7I7            reduce using rule 76 (arrayelt -> ID dimensions .)
    WALO            reduce using rule 76 (arrayelt -> ID dimensions .)
    JEREB           reduce using rule 76 (arrayelt -> ID dimensions .)
    ILA             reduce using rule 76 (arrayelt -> ID dimensions .)
    LKOLA           reduce using rule 76 (arrayelt -> ID dimensions .)
    MA7ED           reduce using rule 76 (arrayelt -> ID dimensions .)
    DIR             reduce using rule 76 (arrayelt -> ID dimensions .)
    QRA             reduce using rule 76 (arrayelt -> ID dimensions .)
    TOL             reduce using rule 76 (arrayelt -> ID dimensions .)
    TA3RIF          reduce using rule 76 (arrayelt -> ID dimensions .)
    RED             reduce using rule 76 (arrayelt -> ID dimensions .)
    $end            reduce using rule 76 (arrayelt -> ID dimensions .)
    )               reduce using rule 76 (arrayelt -> ID dimensions .)
    }               reduce using rule 76 (arrayelt -> ID dimensions .)
    ]               reduce using rule 76 (arrayelt -> ID dimensions .)
    ,               reduce using rule 76 (arrayelt -> ID dimensions .)
    ;               reduce using rule 76 (arrayelt -> ID dimensions .)
    :               reduce using rule 76 (arrayelt -> ID dimensions .)
    SUP             reduce using rule 76 (arrayelt -> ID dimensions .)
    INF             reduce using rule 76 (arrayelt -> ID dimensions .)
    EQUALSCOMP      reduce using rule 76 (arrayelt -> ID dimensions .)
    SUPEQUALS       reduce using rule 76 (arrayelt -> ID dimensions .)
    INFEQUALS       reduce using rule 76 (arrayelt -> ID dimensions .)
    DIFFERENT       reduce using rule 76 (arrayelt -> ID dimensions .)
    WA              reduce using rule 76 (arrayelt -> ID dimensions .)
    AW              reduce using rule 76 (arrayelt -> ID dimensions .)
    [               shift and go to state 89

  ! [               [ reduce using rule 76 (arrayelt -> ID dimensions .) ]


state 58

    (79) arrayslice -> ID [ . expression : expression ]
    (80) arrayslice -> ID [ . : expression ]
    (81) arrayslice -> ID [ . expression : ]
    (82) arrayslice -> ID [ . : ]
    (77) dimensions -> [ . expression ]
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    :               shift and go to state 91
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 90
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 59

    (6) var_assign -> MOJOD var_assign .

    KHREJ           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    KMEL            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    ID              reduce using rule 6 (var_assign -> MOJOD var_assign .)
    MOJOD           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    KTEB            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    (               reduce using rule 6 (var_assign -> MOJOD var_assign .)
    MINUS           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    PLUS            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    INT             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    FLOAT           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    STRING          reduce using rule 6 (var_assign -> MOJOD var_assign .)
    KHATE2          reduce using rule 6 (var_assign -> MOJOD var_assign .)
    S7I7            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    WALO            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    JEREB           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    ILA             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    LKOLA           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    MA7ED           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    DIR             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    QRA             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    TOL             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    TA3RIF          reduce using rule 6 (var_assign -> MOJOD var_assign .)
    RED             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    [               reduce using rule 6 (var_assign -> MOJOD var_assign .)
    $end            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    }               reduce using rule 6 (var_assign -> MOJOD var_assign .)
    ;               reduce using rule 6 (var_assign -> MOJOD var_assign .)


state 60

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input

    EQUALS          shift and go to state 53


state 61

    (7) arrayelt_assign -> arrayelt EQUALS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    arrayelt                       shift and go to state 65
    expression                     shift and go to state 92
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 62

    (93) printing -> KTEB ( . condition )
    (94) printing -> KTEB ( . incrementation )
    (95) printing -> KTEB ( . decrementation )
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 93
    L3AKSS          shift and go to state 97
    ID              shift and go to state 99
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 94
    incrementation                 shift and go to state 95
    decrementation                 shift and go to state 96
    expression                     shift and go to state 98
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 63

    (55) expression -> ( expression . )
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    )               shift and go to state 100
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 64

    (58) expression -> ID .
    (76) arrayelt -> ID . dimensions
    (79) arrayslice -> ID . [ expression : expression ]
    (80) arrayslice -> ID . [ : expression ]
    (81) arrayslice -> ID . [ expression : ]
    (82) arrayslice -> ID . [ : ]
    (77) dimensions -> . [ expression ]
    (78) dimensions -> . dimensions [ expression ]

  ! shift/reduce conflict for [ resolved as shift
    )               reduce using rule 58 (expression -> ID .)
    PLUS            reduce using rule 58 (expression -> ID .)
    MINUS           reduce using rule 58 (expression -> ID .)
    TIMES           reduce using rule 58 (expression -> ID .)
    DIVIDE          reduce using rule 58 (expression -> ID .)
    KHREJ           reduce using rule 58 (expression -> ID .)
    KMEL            reduce using rule 58 (expression -> ID .)
    ID              reduce using rule 58 (expression -> ID .)
    MOJOD           reduce using rule 58 (expression -> ID .)
    KTEB            reduce using rule 58 (expression -> ID .)
    (               reduce using rule 58 (expression -> ID .)
    INT             reduce using rule 58 (expression -> ID .)
    FLOAT           reduce using rule 58 (expression -> ID .)
    STRING          reduce using rule 58 (expression -> ID .)
    KHATE2          reduce using rule 58 (expression -> ID .)
    S7I7            reduce using rule 58 (expression -> ID .)
    WALO            reduce using rule 58 (expression -> ID .)
    JEREB           reduce using rule 58 (expression -> ID .)
    ILA             reduce using rule 58 (expression -> ID .)
    LKOLA           reduce using rule 58 (expression -> ID .)
    MA7ED           reduce using rule 58 (expression -> ID .)
    DIR             reduce using rule 58 (expression -> ID .)
    QRA             reduce using rule 58 (expression -> ID .)
    TOL             reduce using rule 58 (expression -> ID .)
    TA3RIF          reduce using rule 58 (expression -> ID .)
    RED             reduce using rule 58 (expression -> ID .)
    $end            reduce using rule 58 (expression -> ID .)
    }               reduce using rule 58 (expression -> ID .)
    ]               reduce using rule 58 (expression -> ID .)
    ,               reduce using rule 58 (expression -> ID .)
    ;               reduce using rule 58 (expression -> ID .)
    :               reduce using rule 58 (expression -> ID .)
    SUP             reduce using rule 58 (expression -> ID .)
    INF             reduce using rule 58 (expression -> ID .)
    EQUALSCOMP      reduce using rule 58 (expression -> ID .)
    SUPEQUALS       reduce using rule 58 (expression -> ID .)
    INFEQUALS       reduce using rule 58 (expression -> ID .)
    DIFFERENT       reduce using rule 58 (expression -> ID .)
    WA              reduce using rule 58 (expression -> ID .)
    AW              reduce using rule 58 (expression -> ID .)
    [               shift and go to state 58

  ! [               [ reduce using rule 58 (expression -> ID .) ]

    dimensions                     shift and go to state 57

state 65

    (70) expression -> arrayelt .

    )               reduce using rule 70 (expression -> arrayelt .)
    PLUS            reduce using rule 70 (expression -> arrayelt .)
    MINUS           reduce using rule 70 (expression -> arrayelt .)
    TIMES           reduce using rule 70 (expression -> arrayelt .)
    DIVIDE          reduce using rule 70 (expression -> arrayelt .)
    KHREJ           reduce using rule 70 (expression -> arrayelt .)
    KMEL            reduce using rule 70 (expression -> arrayelt .)
    ID              reduce using rule 70 (expression -> arrayelt .)
    MOJOD           reduce using rule 70 (expression -> arrayelt .)
    KTEB            reduce using rule 70 (expression -> arrayelt .)
    (               reduce using rule 70 (expression -> arrayelt .)
    INT             reduce using rule 70 (expression -> arrayelt .)
    FLOAT           reduce using rule 70 (expression -> arrayelt .)
    STRING          reduce using rule 70 (expression -> arrayelt .)
    KHATE2          reduce using rule 70 (expression -> arrayelt .)
    S7I7            reduce using rule 70 (expression -> arrayelt .)
    WALO            reduce using rule 70 (expression -> arrayelt .)
    JEREB           reduce using rule 70 (expression -> arrayelt .)
    ILA             reduce using rule 70 (expression -> arrayelt .)
    LKOLA           reduce using rule 70 (expression -> arrayelt .)
    MA7ED           reduce using rule 70 (expression -> arrayelt .)
    DIR             reduce using rule 70 (expression -> arrayelt .)
    QRA             reduce using rule 70 (expression -> arrayelt .)
    TOL             reduce using rule 70 (expression -> arrayelt .)
    TA3RIF          reduce using rule 70 (expression -> arrayelt .)
    RED             reduce using rule 70 (expression -> arrayelt .)
    [               reduce using rule 70 (expression -> arrayelt .)
    $end            reduce using rule 70 (expression -> arrayelt .)
    }               reduce using rule 70 (expression -> arrayelt .)
    ]               reduce using rule 70 (expression -> arrayelt .)
    ,               reduce using rule 70 (expression -> arrayelt .)
    ;               reduce using rule 70 (expression -> arrayelt .)
    :               reduce using rule 70 (expression -> arrayelt .)
    SUP             reduce using rule 70 (expression -> arrayelt .)
    INF             reduce using rule 70 (expression -> arrayelt .)
    EQUALSCOMP      reduce using rule 70 (expression -> arrayelt .)
    SUPEQUALS       reduce using rule 70 (expression -> arrayelt .)
    INFEQUALS       reduce using rule 70 (expression -> arrayelt .)
    DIFFERENT       reduce using rule 70 (expression -> arrayelt .)
    WA              reduce using rule 70 (expression -> arrayelt .)
    AW              reduce using rule 70 (expression -> arrayelt .)


state 66

    (57) expression -> PLUS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 57 (expression -> PLUS expression .)
    MINUS           reduce using rule 57 (expression -> PLUS expression .)
    KHREJ           reduce using rule 57 (expression -> PLUS expression .)
    KMEL            reduce using rule 57 (expression -> PLUS expression .)
    ID              reduce using rule 57 (expression -> PLUS expression .)
    MOJOD           reduce using rule 57 (expression -> PLUS expression .)
    KTEB            reduce using rule 57 (expression -> PLUS expression .)
    (               reduce using rule 57 (expression -> PLUS expression .)
    INT             reduce using rule 57 (expression -> PLUS expression .)
    FLOAT           reduce using rule 57 (expression -> PLUS expression .)
    STRING          reduce using rule 57 (expression -> PLUS expression .)
    KHATE2          reduce using rule 57 (expression -> PLUS expression .)
    S7I7            reduce using rule 57 (expression -> PLUS expression .)
    WALO            reduce using rule 57 (expression -> PLUS expression .)
    JEREB           reduce using rule 57 (expression -> PLUS expression .)
    ILA             reduce using rule 57 (expression -> PLUS expression .)
    LKOLA           reduce using rule 57 (expression -> PLUS expression .)
    MA7ED           reduce using rule 57 (expression -> PLUS expression .)
    DIR             reduce using rule 57 (expression -> PLUS expression .)
    QRA             reduce using rule 57 (expression -> PLUS expression .)
    TOL             reduce using rule 57 (expression -> PLUS expression .)
    TA3RIF          reduce using rule 57 (expression -> PLUS expression .)
    RED             reduce using rule 57 (expression -> PLUS expression .)
    [               reduce using rule 57 (expression -> PLUS expression .)
    $end            reduce using rule 57 (expression -> PLUS expression .)
    )               reduce using rule 57 (expression -> PLUS expression .)
    }               reduce using rule 57 (expression -> PLUS expression .)
    ]               reduce using rule 57 (expression -> PLUS expression .)
    ,               reduce using rule 57 (expression -> PLUS expression .)
    ;               reduce using rule 57 (expression -> PLUS expression .)
    :               reduce using rule 57 (expression -> PLUS expression .)
    SUP             reduce using rule 57 (expression -> PLUS expression .)
    INF             reduce using rule 57 (expression -> PLUS expression .)
    EQUALSCOMP      reduce using rule 57 (expression -> PLUS expression .)
    SUPEQUALS       reduce using rule 57 (expression -> PLUS expression .)
    INFEQUALS       reduce using rule 57 (expression -> PLUS expression .)
    DIFFERENT       reduce using rule 57 (expression -> PLUS expression .)
    WA              reduce using rule 57 (expression -> PLUS expression .)
    AW              reduce using rule 57 (expression -> PLUS expression .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52

  ! TIMES           [ reduce using rule 57 (expression -> PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression -> PLUS expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]


state 67

    (56) expression -> MINUS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 56 (expression -> MINUS expression .)
    MINUS           reduce using rule 56 (expression -> MINUS expression .)
    KHREJ           reduce using rule 56 (expression -> MINUS expression .)
    KMEL            reduce using rule 56 (expression -> MINUS expression .)
    ID              reduce using rule 56 (expression -> MINUS expression .)
    MOJOD           reduce using rule 56 (expression -> MINUS expression .)
    KTEB            reduce using rule 56 (expression -> MINUS expression .)
    (               reduce using rule 56 (expression -> MINUS expression .)
    INT             reduce using rule 56 (expression -> MINUS expression .)
    FLOAT           reduce using rule 56 (expression -> MINUS expression .)
    STRING          reduce using rule 56 (expression -> MINUS expression .)
    KHATE2          reduce using rule 56 (expression -> MINUS expression .)
    S7I7            reduce using rule 56 (expression -> MINUS expression .)
    WALO            reduce using rule 56 (expression -> MINUS expression .)
    JEREB           reduce using rule 56 (expression -> MINUS expression .)
    ILA             reduce using rule 56 (expression -> MINUS expression .)
    LKOLA           reduce using rule 56 (expression -> MINUS expression .)
    MA7ED           reduce using rule 56 (expression -> MINUS expression .)
    DIR             reduce using rule 56 (expression -> MINUS expression .)
    QRA             reduce using rule 56 (expression -> MINUS expression .)
    TOL             reduce using rule 56 (expression -> MINUS expression .)
    TA3RIF          reduce using rule 56 (expression -> MINUS expression .)
    RED             reduce using rule 56 (expression -> MINUS expression .)
    [               reduce using rule 56 (expression -> MINUS expression .)
    $end            reduce using rule 56 (expression -> MINUS expression .)
    )               reduce using rule 56 (expression -> MINUS expression .)
    }               reduce using rule 56 (expression -> MINUS expression .)
    ]               reduce using rule 56 (expression -> MINUS expression .)
    ,               reduce using rule 56 (expression -> MINUS expression .)
    ;               reduce using rule 56 (expression -> MINUS expression .)
    :               reduce using rule 56 (expression -> MINUS expression .)
    SUP             reduce using rule 56 (expression -> MINUS expression .)
    INF             reduce using rule 56 (expression -> MINUS expression .)
    EQUALSCOMP      reduce using rule 56 (expression -> MINUS expression .)
    SUPEQUALS       reduce using rule 56 (expression -> MINUS expression .)
    INFEQUALS       reduce using rule 56 (expression -> MINUS expression .)
    DIFFERENT       reduce using rule 56 (expression -> MINUS expression .)
    WA              reduce using rule 56 (expression -> MINUS expression .)
    AW              reduce using rule 56 (expression -> MINUS expression .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52

  ! TIMES           [ reduce using rule 56 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]


state 68

    (61) try -> JEREB { . instruction_list } MASD9CH { instruction_list }
    (62) try -> JEREB { . instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction_list               shift and go to state 101
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 69

    (8) if -> ILA ( . condition ) { instruction_list }
    (9) if -> ILA ( . condition ) { instruction_list } WLA { instruction_list }
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 93
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 102
    expression                     shift and go to state 98
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 70

    (10) for -> LKOLA ( . var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> LKOLA ( . var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> LKOLA ( . expression ; condition ; incrementation ) { instruction_list }
    (13) for -> LKOLA ( . expression ; condition ; decrementation ) { instruction_list }
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    ID              shift and go to state 105
    MOJOD           shift and go to state 24
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    var_assign                     shift and go to state 103
    expression                     shift and go to state 104
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 71

    (14) while -> MA7ED ( . condition ) { instruction_list }
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 93
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 106
    expression                     shift and go to state 98
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 72

    (15) doWhile -> DIR { . instruction_list } MA7ED ( condition )
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction_list               shift and go to state 107
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 73

    (59) input -> QRA ( . expression )
    (60) input -> QRA ( . )
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    )               shift and go to state 109
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 108
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 74

    (96) len -> TOL ( . expression )
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 110
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 75

    (88) func -> TA3RIF ID . ( parameter_list ) { instruction_list }
    (89) func -> TA3RIF ID . ( ) { instruction_list }

    (               shift and go to state 111


state 76

    (92) return -> RED expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 92 (return -> RED expression .)
    KMEL            reduce using rule 92 (return -> RED expression .)
    ID              reduce using rule 92 (return -> RED expression .)
    MOJOD           reduce using rule 92 (return -> RED expression .)
    KTEB            reduce using rule 92 (return -> RED expression .)
    (               reduce using rule 92 (return -> RED expression .)
    INT             reduce using rule 92 (return -> RED expression .)
    FLOAT           reduce using rule 92 (return -> RED expression .)
    STRING          reduce using rule 92 (return -> RED expression .)
    KHATE2          reduce using rule 92 (return -> RED expression .)
    S7I7            reduce using rule 92 (return -> RED expression .)
    WALO            reduce using rule 92 (return -> RED expression .)
    JEREB           reduce using rule 92 (return -> RED expression .)
    ILA             reduce using rule 92 (return -> RED expression .)
    LKOLA           reduce using rule 92 (return -> RED expression .)
    MA7ED           reduce using rule 92 (return -> RED expression .)
    DIR             reduce using rule 92 (return -> RED expression .)
    QRA             reduce using rule 92 (return -> RED expression .)
    TOL             reduce using rule 92 (return -> RED expression .)
    TA3RIF          reduce using rule 92 (return -> RED expression .)
    RED             reduce using rule 92 (return -> RED expression .)
    [               reduce using rule 92 (return -> RED expression .)
    $end            reduce using rule 92 (return -> RED expression .)
    }               reduce using rule 92 (return -> RED expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52

  ! MINUS           [ reduce using rule 92 (return -> RED expression .) ]
  ! PLUS            [ reduce using rule 92 (return -> RED expression .) ]


state 77

    (74) array -> [ arraylist . ]
    (73) arraylist -> arraylist . , expression

    ]               shift and go to state 112
    ,               shift and go to state 113


state 78

    (75) array -> [ ] .

    PLUS            reduce using rule 75 (array -> [ ] .)
    MINUS           reduce using rule 75 (array -> [ ] .)
    TIMES           reduce using rule 75 (array -> [ ] .)
    DIVIDE          reduce using rule 75 (array -> [ ] .)
    KHREJ           reduce using rule 75 (array -> [ ] .)
    KMEL            reduce using rule 75 (array -> [ ] .)
    ID              reduce using rule 75 (array -> [ ] .)
    MOJOD           reduce using rule 75 (array -> [ ] .)
    KTEB            reduce using rule 75 (array -> [ ] .)
    (               reduce using rule 75 (array -> [ ] .)
    INT             reduce using rule 75 (array -> [ ] .)
    FLOAT           reduce using rule 75 (array -> [ ] .)
    STRING          reduce using rule 75 (array -> [ ] .)
    KHATE2          reduce using rule 75 (array -> [ ] .)
    S7I7            reduce using rule 75 (array -> [ ] .)
    WALO            reduce using rule 75 (array -> [ ] .)
    JEREB           reduce using rule 75 (array -> [ ] .)
    ILA             reduce using rule 75 (array -> [ ] .)
    LKOLA           reduce using rule 75 (array -> [ ] .)
    MA7ED           reduce using rule 75 (array -> [ ] .)
    DIR             reduce using rule 75 (array -> [ ] .)
    QRA             reduce using rule 75 (array -> [ ] .)
    TOL             reduce using rule 75 (array -> [ ] .)
    TA3RIF          reduce using rule 75 (array -> [ ] .)
    RED             reduce using rule 75 (array -> [ ] .)
    [               reduce using rule 75 (array -> [ ] .)
    $end            reduce using rule 75 (array -> [ ] .)
    )               reduce using rule 75 (array -> [ ] .)
    }               reduce using rule 75 (array -> [ ] .)
    ]               reduce using rule 75 (array -> [ ] .)
    ,               reduce using rule 75 (array -> [ ] .)
    ;               reduce using rule 75 (array -> [ ] .)
    :               reduce using rule 75 (array -> [ ] .)
    SUP             reduce using rule 75 (array -> [ ] .)
    INF             reduce using rule 75 (array -> [ ] .)
    EQUALSCOMP      reduce using rule 75 (array -> [ ] .)
    SUPEQUALS       reduce using rule 75 (array -> [ ] .)
    INFEQUALS       reduce using rule 75 (array -> [ ] .)
    DIFFERENT       reduce using rule 75 (array -> [ ] .)
    WA              reduce using rule 75 (array -> [ ] .)
    AW              reduce using rule 75 (array -> [ ] .)


state 79

    (72) arraylist -> expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    ]               reduce using rule 72 (arraylist -> expression .)
    ,               reduce using rule 72 (arraylist -> expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 80

    (51) expression -> expression PLUS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 51 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 51 (expression -> expression PLUS expression .)
    KHREJ           reduce using rule 51 (expression -> expression PLUS expression .)
    KMEL            reduce using rule 51 (expression -> expression PLUS expression .)
    ID              reduce using rule 51 (expression -> expression PLUS expression .)
    MOJOD           reduce using rule 51 (expression -> expression PLUS expression .)
    KTEB            reduce using rule 51 (expression -> expression PLUS expression .)
    (               reduce using rule 51 (expression -> expression PLUS expression .)
    INT             reduce using rule 51 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 51 (expression -> expression PLUS expression .)
    STRING          reduce using rule 51 (expression -> expression PLUS expression .)
    KHATE2          reduce using rule 51 (expression -> expression PLUS expression .)
    S7I7            reduce using rule 51 (expression -> expression PLUS expression .)
    WALO            reduce using rule 51 (expression -> expression PLUS expression .)
    JEREB           reduce using rule 51 (expression -> expression PLUS expression .)
    ILA             reduce using rule 51 (expression -> expression PLUS expression .)
    LKOLA           reduce using rule 51 (expression -> expression PLUS expression .)
    MA7ED           reduce using rule 51 (expression -> expression PLUS expression .)
    DIR             reduce using rule 51 (expression -> expression PLUS expression .)
    QRA             reduce using rule 51 (expression -> expression PLUS expression .)
    TOL             reduce using rule 51 (expression -> expression PLUS expression .)
    TA3RIF          reduce using rule 51 (expression -> expression PLUS expression .)
    RED             reduce using rule 51 (expression -> expression PLUS expression .)
    [               reduce using rule 51 (expression -> expression PLUS expression .)
    $end            reduce using rule 51 (expression -> expression PLUS expression .)
    )               reduce using rule 51 (expression -> expression PLUS expression .)
    }               reduce using rule 51 (expression -> expression PLUS expression .)
    ]               reduce using rule 51 (expression -> expression PLUS expression .)
    ,               reduce using rule 51 (expression -> expression PLUS expression .)
    ;               reduce using rule 51 (expression -> expression PLUS expression .)
    :               reduce using rule 51 (expression -> expression PLUS expression .)
    SUP             reduce using rule 51 (expression -> expression PLUS expression .)
    INF             reduce using rule 51 (expression -> expression PLUS expression .)
    EQUALSCOMP      reduce using rule 51 (expression -> expression PLUS expression .)
    SUPEQUALS       reduce using rule 51 (expression -> expression PLUS expression .)
    INFEQUALS       reduce using rule 51 (expression -> expression PLUS expression .)
    DIFFERENT       reduce using rule 51 (expression -> expression PLUS expression .)
    WA              reduce using rule 51 (expression -> expression PLUS expression .)
    AW              reduce using rule 51 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52

  ! TIMES           [ reduce using rule 51 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]


state 81

    (52) expression -> expression MINUS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 52 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 52 (expression -> expression MINUS expression .)
    KHREJ           reduce using rule 52 (expression -> expression MINUS expression .)
    KMEL            reduce using rule 52 (expression -> expression MINUS expression .)
    ID              reduce using rule 52 (expression -> expression MINUS expression .)
    MOJOD           reduce using rule 52 (expression -> expression MINUS expression .)
    KTEB            reduce using rule 52 (expression -> expression MINUS expression .)
    (               reduce using rule 52 (expression -> expression MINUS expression .)
    INT             reduce using rule 52 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 52 (expression -> expression MINUS expression .)
    STRING          reduce using rule 52 (expression -> expression MINUS expression .)
    KHATE2          reduce using rule 52 (expression -> expression MINUS expression .)
    S7I7            reduce using rule 52 (expression -> expression MINUS expression .)
    WALO            reduce using rule 52 (expression -> expression MINUS expression .)
    JEREB           reduce using rule 52 (expression -> expression MINUS expression .)
    ILA             reduce using rule 52 (expression -> expression MINUS expression .)
    LKOLA           reduce using rule 52 (expression -> expression MINUS expression .)
    MA7ED           reduce using rule 52 (expression -> expression MINUS expression .)
    DIR             reduce using rule 52 (expression -> expression MINUS expression .)
    QRA             reduce using rule 52 (expression -> expression MINUS expression .)
    TOL             reduce using rule 52 (expression -> expression MINUS expression .)
    TA3RIF          reduce using rule 52 (expression -> expression MINUS expression .)
    RED             reduce using rule 52 (expression -> expression MINUS expression .)
    [               reduce using rule 52 (expression -> expression MINUS expression .)
    $end            reduce using rule 52 (expression -> expression MINUS expression .)
    )               reduce using rule 52 (expression -> expression MINUS expression .)
    }               reduce using rule 52 (expression -> expression MINUS expression .)
    ]               reduce using rule 52 (expression -> expression MINUS expression .)
    ,               reduce using rule 52 (expression -> expression MINUS expression .)
    ;               reduce using rule 52 (expression -> expression MINUS expression .)
    :               reduce using rule 52 (expression -> expression MINUS expression .)
    SUP             reduce using rule 52 (expression -> expression MINUS expression .)
    INF             reduce using rule 52 (expression -> expression MINUS expression .)
    EQUALSCOMP      reduce using rule 52 (expression -> expression MINUS expression .)
    SUPEQUALS       reduce using rule 52 (expression -> expression MINUS expression .)
    INFEQUALS       reduce using rule 52 (expression -> expression MINUS expression .)
    DIFFERENT       reduce using rule 52 (expression -> expression MINUS expression .)
    WA              reduce using rule 52 (expression -> expression MINUS expression .)
    AW              reduce using rule 52 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52

  ! TIMES           [ reduce using rule 52 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]


state 82

    (53) expression -> expression TIMES expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 53 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 53 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 53 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 53 (expression -> expression TIMES expression .)
    KHREJ           reduce using rule 53 (expression -> expression TIMES expression .)
    KMEL            reduce using rule 53 (expression -> expression TIMES expression .)
    ID              reduce using rule 53 (expression -> expression TIMES expression .)
    MOJOD           reduce using rule 53 (expression -> expression TIMES expression .)
    KTEB            reduce using rule 53 (expression -> expression TIMES expression .)
    (               reduce using rule 53 (expression -> expression TIMES expression .)
    INT             reduce using rule 53 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 53 (expression -> expression TIMES expression .)
    STRING          reduce using rule 53 (expression -> expression TIMES expression .)
    KHATE2          reduce using rule 53 (expression -> expression TIMES expression .)
    S7I7            reduce using rule 53 (expression -> expression TIMES expression .)
    WALO            reduce using rule 53 (expression -> expression TIMES expression .)
    JEREB           reduce using rule 53 (expression -> expression TIMES expression .)
    ILA             reduce using rule 53 (expression -> expression TIMES expression .)
    LKOLA           reduce using rule 53 (expression -> expression TIMES expression .)
    MA7ED           reduce using rule 53 (expression -> expression TIMES expression .)
    DIR             reduce using rule 53 (expression -> expression TIMES expression .)
    QRA             reduce using rule 53 (expression -> expression TIMES expression .)
    TOL             reduce using rule 53 (expression -> expression TIMES expression .)
    TA3RIF          reduce using rule 53 (expression -> expression TIMES expression .)
    RED             reduce using rule 53 (expression -> expression TIMES expression .)
    [               reduce using rule 53 (expression -> expression TIMES expression .)
    $end            reduce using rule 53 (expression -> expression TIMES expression .)
    )               reduce using rule 53 (expression -> expression TIMES expression .)
    }               reduce using rule 53 (expression -> expression TIMES expression .)
    ]               reduce using rule 53 (expression -> expression TIMES expression .)
    ,               reduce using rule 53 (expression -> expression TIMES expression .)
    ;               reduce using rule 53 (expression -> expression TIMES expression .)
    :               reduce using rule 53 (expression -> expression TIMES expression .)
    SUP             reduce using rule 53 (expression -> expression TIMES expression .)
    INF             reduce using rule 53 (expression -> expression TIMES expression .)
    EQUALSCOMP      reduce using rule 53 (expression -> expression TIMES expression .)
    SUPEQUALS       reduce using rule 53 (expression -> expression TIMES expression .)
    INFEQUALS       reduce using rule 53 (expression -> expression TIMES expression .)
    DIFFERENT       reduce using rule 53 (expression -> expression TIMES expression .)
    WA              reduce using rule 53 (expression -> expression TIMES expression .)
    AW              reduce using rule 53 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TIMES           [ shift and go to state 51 ]
  ! DIVIDE          [ shift and go to state 52 ]


state 83

    (54) expression -> expression DIVIDE expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 54 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 54 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 54 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 54 (expression -> expression DIVIDE expression .)
    KHREJ           reduce using rule 54 (expression -> expression DIVIDE expression .)
    KMEL            reduce using rule 54 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 54 (expression -> expression DIVIDE expression .)
    MOJOD           reduce using rule 54 (expression -> expression DIVIDE expression .)
    KTEB            reduce using rule 54 (expression -> expression DIVIDE expression .)
    (               reduce using rule 54 (expression -> expression DIVIDE expression .)
    INT             reduce using rule 54 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 54 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 54 (expression -> expression DIVIDE expression .)
    KHATE2          reduce using rule 54 (expression -> expression DIVIDE expression .)
    S7I7            reduce using rule 54 (expression -> expression DIVIDE expression .)
    WALO            reduce using rule 54 (expression -> expression DIVIDE expression .)
    JEREB           reduce using rule 54 (expression -> expression DIVIDE expression .)
    ILA             reduce using rule 54 (expression -> expression DIVIDE expression .)
    LKOLA           reduce using rule 54 (expression -> expression DIVIDE expression .)
    MA7ED           reduce using rule 54 (expression -> expression DIVIDE expression .)
    DIR             reduce using rule 54 (expression -> expression DIVIDE expression .)
    QRA             reduce using rule 54 (expression -> expression DIVIDE expression .)
    TOL             reduce using rule 54 (expression -> expression DIVIDE expression .)
    TA3RIF          reduce using rule 54 (expression -> expression DIVIDE expression .)
    RED             reduce using rule 54 (expression -> expression DIVIDE expression .)
    [               reduce using rule 54 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 54 (expression -> expression DIVIDE expression .)
    )               reduce using rule 54 (expression -> expression DIVIDE expression .)
    }               reduce using rule 54 (expression -> expression DIVIDE expression .)
    ]               reduce using rule 54 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 54 (expression -> expression DIVIDE expression .)
    ;               reduce using rule 54 (expression -> expression DIVIDE expression .)
    :               reduce using rule 54 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 54 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 54 (expression -> expression DIVIDE expression .)
    EQUALSCOMP      reduce using rule 54 (expression -> expression DIVIDE expression .)
    SUPEQUALS       reduce using rule 54 (expression -> expression DIVIDE expression .)
    INFEQUALS       reduce using rule 54 (expression -> expression DIVIDE expression .)
    DIFFERENT       reduce using rule 54 (expression -> expression DIVIDE expression .)
    WA              reduce using rule 54 (expression -> expression DIVIDE expression .)
    AW              reduce using rule 54 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TIMES           [ shift and go to state 51 ]
  ! DIVIDE          [ shift and go to state 52 ]


state 84

    (4) var_assign -> ID EQUALS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KMEL            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ID              reduce using rule 4 (var_assign -> ID EQUALS expression .)
    MOJOD           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KTEB            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    (               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    INT             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    FLOAT           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    STRING          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KHATE2          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    S7I7            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    WALO            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    JEREB           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ILA             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    LKOLA           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    MA7ED           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    DIR             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    QRA             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    TOL             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    TA3RIF          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    RED             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    [               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    $end            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    }               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ;               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52

  ! MINUS           [ reduce using rule 4 (var_assign -> ID EQUALS expression .) ]
  ! PLUS            [ reduce using rule 4 (var_assign -> ID EQUALS expression .) ]


state 85

    (5) var_assign -> ID EQUALS input .

    KHREJ           reduce using rule 5 (var_assign -> ID EQUALS input .)
    KMEL            reduce using rule 5 (var_assign -> ID EQUALS input .)
    ID              reduce using rule 5 (var_assign -> ID EQUALS input .)
    MOJOD           reduce using rule 5 (var_assign -> ID EQUALS input .)
    KTEB            reduce using rule 5 (var_assign -> ID EQUALS input .)
    (               reduce using rule 5 (var_assign -> ID EQUALS input .)
    MINUS           reduce using rule 5 (var_assign -> ID EQUALS input .)
    PLUS            reduce using rule 5 (var_assign -> ID EQUALS input .)
    INT             reduce using rule 5 (var_assign -> ID EQUALS input .)
    FLOAT           reduce using rule 5 (var_assign -> ID EQUALS input .)
    STRING          reduce using rule 5 (var_assign -> ID EQUALS input .)
    KHATE2          reduce using rule 5 (var_assign -> ID EQUALS input .)
    S7I7            reduce using rule 5 (var_assign -> ID EQUALS input .)
    WALO            reduce using rule 5 (var_assign -> ID EQUALS input .)
    JEREB           reduce using rule 5 (var_assign -> ID EQUALS input .)
    ILA             reduce using rule 5 (var_assign -> ID EQUALS input .)
    LKOLA           reduce using rule 5 (var_assign -> ID EQUALS input .)
    MA7ED           reduce using rule 5 (var_assign -> ID EQUALS input .)
    DIR             reduce using rule 5 (var_assign -> ID EQUALS input .)
    QRA             reduce using rule 5 (var_assign -> ID EQUALS input .)
    TOL             reduce using rule 5 (var_assign -> ID EQUALS input .)
    TA3RIF          reduce using rule 5 (var_assign -> ID EQUALS input .)
    RED             reduce using rule 5 (var_assign -> ID EQUALS input .)
    [               reduce using rule 5 (var_assign -> ID EQUALS input .)
    $end            reduce using rule 5 (var_assign -> ID EQUALS input .)
    }               reduce using rule 5 (var_assign -> ID EQUALS input .)
    ;               reduce using rule 5 (var_assign -> ID EQUALS input .)


state 86

    (90) appel_func -> ID ( argument_list . )
    (84) argument_list -> argument_list . , expression

    )               shift and go to state 114
    ,               shift and go to state 115


state 87

    (91) appel_func -> ID ( ) .

    KHREJ           reduce using rule 91 (appel_func -> ID ( ) .)
    KMEL            reduce using rule 91 (appel_func -> ID ( ) .)
    ID              reduce using rule 91 (appel_func -> ID ( ) .)
    MOJOD           reduce using rule 91 (appel_func -> ID ( ) .)
    KTEB            reduce using rule 91 (appel_func -> ID ( ) .)
    (               reduce using rule 91 (appel_func -> ID ( ) .)
    MINUS           reduce using rule 91 (appel_func -> ID ( ) .)
    PLUS            reduce using rule 91 (appel_func -> ID ( ) .)
    INT             reduce using rule 91 (appel_func -> ID ( ) .)
    FLOAT           reduce using rule 91 (appel_func -> ID ( ) .)
    STRING          reduce using rule 91 (appel_func -> ID ( ) .)
    KHATE2          reduce using rule 91 (appel_func -> ID ( ) .)
    S7I7            reduce using rule 91 (appel_func -> ID ( ) .)
    WALO            reduce using rule 91 (appel_func -> ID ( ) .)
    JEREB           reduce using rule 91 (appel_func -> ID ( ) .)
    ILA             reduce using rule 91 (appel_func -> ID ( ) .)
    LKOLA           reduce using rule 91 (appel_func -> ID ( ) .)
    MA7ED           reduce using rule 91 (appel_func -> ID ( ) .)
    DIR             reduce using rule 91 (appel_func -> ID ( ) .)
    QRA             reduce using rule 91 (appel_func -> ID ( ) .)
    TOL             reduce using rule 91 (appel_func -> ID ( ) .)
    TA3RIF          reduce using rule 91 (appel_func -> ID ( ) .)
    RED             reduce using rule 91 (appel_func -> ID ( ) .)
    [               reduce using rule 91 (appel_func -> ID ( ) .)
    $end            reduce using rule 91 (appel_func -> ID ( ) .)
    }               reduce using rule 91 (appel_func -> ID ( ) .)


state 88

    (83) argument_list -> expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    )               reduce using rule 83 (argument_list -> expression .)
    ,               reduce using rule 83 (argument_list -> expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 89

    (78) dimensions -> dimensions [ . expression ]
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 116
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 90

    (79) arrayslice -> ID [ expression . : expression ]
    (81) arrayslice -> ID [ expression . : ]
    (77) dimensions -> [ expression . ]
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    :               shift and go to state 117
    ]               shift and go to state 118
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 91

    (80) arrayslice -> ID [ : . expression ]
    (82) arrayslice -> ID [ : . ]
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    ]               shift and go to state 120
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 119
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 92

    (7) arrayelt_assign -> arrayelt EQUALS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    KMEL            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    ID              reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    MOJOD           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    KTEB            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    (               reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    INT             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    FLOAT           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    STRING          reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    KHATE2          reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    S7I7            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    WALO            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    JEREB           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    ILA             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    LKOLA           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    MA7ED           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    DIR             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    QRA             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    TOL             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    TA3RIF          reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    RED             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    [               reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    $end            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    }               reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52

  ! MINUS           [ reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .) ]
  ! PLUS            [ reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .) ]


state 93

    (37) condition -> ( . condition ) AW ( condition )
    (38) condition -> ( . condition ) WA ( condition )
    (41) condition -> ( . condition ) WA condition
    (42) condition -> ( . condition ) AW condition
    (55) expression -> ( . expression )
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 93
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 121
    expression                     shift and go to state 122
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 94

    (93) printing -> KTEB ( condition . )
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    )               shift and go to state 123
    WA              shift and go to state 124
    AW              shift and go to state 125


state 95

    (94) printing -> KTEB ( incrementation . )

    )               shift and go to state 126


state 96

    (95) printing -> KTEB ( decrementation . )

    )               shift and go to state 127


state 97

    (43) condition -> L3AKSS . ( condition )

    (               shift and go to state 128


state 98

    (44) condition -> expression . SUP expression
    (45) condition -> expression . INF expression
    (46) condition -> expression . EQUALSCOMP expression
    (47) condition -> expression . SUPEQUALS expression
    (48) condition -> expression . INFEQUALS expression
    (49) condition -> expression . DIFFERENT expression
    (50) condition -> expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    SUP             shift and go to state 129
    INF             shift and go to state 130
    EQUALSCOMP      shift and go to state 131
    SUPEQUALS       shift and go to state 132
    INFEQUALS       shift and go to state 133
    DIFFERENT       shift and go to state 134
    )               reduce using rule 50 (condition -> expression .)
    WA              reduce using rule 50 (condition -> expression .)
    AW              reduce using rule 50 (condition -> expression .)
    ;               reduce using rule 50 (condition -> expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 99

    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION
    (58) expression -> ID .
    (76) arrayelt -> ID . dimensions
    (79) arrayslice -> ID . [ expression : expression ]
    (80) arrayslice -> ID . [ : expression ]
    (81) arrayslice -> ID . [ expression : ]
    (82) arrayslice -> ID . [ : ]
    (77) dimensions -> . [ expression ]
    (78) dimensions -> . dimensions [ expression ]

    INCREMENTATION  shift and go to state 54
    DECREMENTATION  shift and go to state 55
    SUP             reduce using rule 58 (expression -> ID .)
    INF             reduce using rule 58 (expression -> ID .)
    EQUALSCOMP      reduce using rule 58 (expression -> ID .)
    SUPEQUALS       reduce using rule 58 (expression -> ID .)
    INFEQUALS       reduce using rule 58 (expression -> ID .)
    DIFFERENT       reduce using rule 58 (expression -> ID .)
    PLUS            reduce using rule 58 (expression -> ID .)
    MINUS           reduce using rule 58 (expression -> ID .)
    TIMES           reduce using rule 58 (expression -> ID .)
    DIVIDE          reduce using rule 58 (expression -> ID .)
    )               reduce using rule 58 (expression -> ID .)
    WA              reduce using rule 58 (expression -> ID .)
    AW              reduce using rule 58 (expression -> ID .)
    [               shift and go to state 58

    dimensions                     shift and go to state 57

state 100

    (55) expression -> ( expression ) .

    PLUS            reduce using rule 55 (expression -> ( expression ) .)
    MINUS           reduce using rule 55 (expression -> ( expression ) .)
    TIMES           reduce using rule 55 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 55 (expression -> ( expression ) .)
    KHREJ           reduce using rule 55 (expression -> ( expression ) .)
    KMEL            reduce using rule 55 (expression -> ( expression ) .)
    ID              reduce using rule 55 (expression -> ( expression ) .)
    MOJOD           reduce using rule 55 (expression -> ( expression ) .)
    KTEB            reduce using rule 55 (expression -> ( expression ) .)
    (               reduce using rule 55 (expression -> ( expression ) .)
    INT             reduce using rule 55 (expression -> ( expression ) .)
    FLOAT           reduce using rule 55 (expression -> ( expression ) .)
    STRING          reduce using rule 55 (expression -> ( expression ) .)
    KHATE2          reduce using rule 55 (expression -> ( expression ) .)
    S7I7            reduce using rule 55 (expression -> ( expression ) .)
    WALO            reduce using rule 55 (expression -> ( expression ) .)
    JEREB           reduce using rule 55 (expression -> ( expression ) .)
    ILA             reduce using rule 55 (expression -> ( expression ) .)
    LKOLA           reduce using rule 55 (expression -> ( expression ) .)
    MA7ED           reduce using rule 55 (expression -> ( expression ) .)
    DIR             reduce using rule 55 (expression -> ( expression ) .)
    QRA             reduce using rule 55 (expression -> ( expression ) .)
    TOL             reduce using rule 55 (expression -> ( expression ) .)
    TA3RIF          reduce using rule 55 (expression -> ( expression ) .)
    RED             reduce using rule 55 (expression -> ( expression ) .)
    [               reduce using rule 55 (expression -> ( expression ) .)
    $end            reduce using rule 55 (expression -> ( expression ) .)
    )               reduce using rule 55 (expression -> ( expression ) .)
    }               reduce using rule 55 (expression -> ( expression ) .)
    ]               reduce using rule 55 (expression -> ( expression ) .)
    ,               reduce using rule 55 (expression -> ( expression ) .)
    ;               reduce using rule 55 (expression -> ( expression ) .)
    :               reduce using rule 55 (expression -> ( expression ) .)
    SUP             reduce using rule 55 (expression -> ( expression ) .)
    INF             reduce using rule 55 (expression -> ( expression ) .)
    EQUALSCOMP      reduce using rule 55 (expression -> ( expression ) .)
    SUPEQUALS       reduce using rule 55 (expression -> ( expression ) .)
    INFEQUALS       reduce using rule 55 (expression -> ( expression ) .)
    DIFFERENT       reduce using rule 55 (expression -> ( expression ) .)
    WA              reduce using rule 55 (expression -> ( expression ) .)
    AW              reduce using rule 55 (expression -> ( expression ) .)


state 101

    (61) try -> JEREB { instruction_list . } MASD9CH { instruction_list }
    (62) try -> JEREB { instruction_list . } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 135
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction                    shift and go to state 48
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 102

    (8) if -> ILA ( condition . ) { instruction_list }
    (9) if -> ILA ( condition . ) { instruction_list } WLA { instruction_list }
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    )               shift and go to state 136
    WA              shift and go to state 124
    AW              shift and go to state 125


state 103

    (10) for -> LKOLA ( var_assign . ; condition ; incrementation ) { instruction_list }
    (11) for -> LKOLA ( var_assign . ; condition ; decrementation ) { instruction_list }

    ;               shift and go to state 137


state 104

    (12) for -> LKOLA ( expression . ; condition ; incrementation ) { instruction_list }
    (13) for -> LKOLA ( expression . ; condition ; decrementation ) { instruction_list }
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    ;               shift and go to state 138
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 105

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input
    (58) expression -> ID .
    (76) arrayelt -> ID . dimensions
    (79) arrayslice -> ID . [ expression : expression ]
    (80) arrayslice -> ID . [ : expression ]
    (81) arrayslice -> ID . [ expression : ]
    (82) arrayslice -> ID . [ : ]
    (77) dimensions -> . [ expression ]
    (78) dimensions -> . dimensions [ expression ]

    EQUALS          shift and go to state 53
    ;               reduce using rule 58 (expression -> ID .)
    PLUS            reduce using rule 58 (expression -> ID .)
    MINUS           reduce using rule 58 (expression -> ID .)
    TIMES           reduce using rule 58 (expression -> ID .)
    DIVIDE          reduce using rule 58 (expression -> ID .)
    [               shift and go to state 58

    dimensions                     shift and go to state 57

state 106

    (14) while -> MA7ED ( condition . ) { instruction_list }
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    )               shift and go to state 139
    WA              shift and go to state 124
    AW              shift and go to state 125


state 107

    (15) doWhile -> DIR { instruction_list . } MA7ED ( condition )
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 140
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction                    shift and go to state 48
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 108

    (59) input -> QRA ( expression . )
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    )               shift and go to state 141
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 109

    (60) input -> QRA ( ) .

    KHREJ           reduce using rule 60 (input -> QRA ( ) .)
    KMEL            reduce using rule 60 (input -> QRA ( ) .)
    ID              reduce using rule 60 (input -> QRA ( ) .)
    MOJOD           reduce using rule 60 (input -> QRA ( ) .)
    KTEB            reduce using rule 60 (input -> QRA ( ) .)
    (               reduce using rule 60 (input -> QRA ( ) .)
    MINUS           reduce using rule 60 (input -> QRA ( ) .)
    PLUS            reduce using rule 60 (input -> QRA ( ) .)
    INT             reduce using rule 60 (input -> QRA ( ) .)
    FLOAT           reduce using rule 60 (input -> QRA ( ) .)
    STRING          reduce using rule 60 (input -> QRA ( ) .)
    KHATE2          reduce using rule 60 (input -> QRA ( ) .)
    S7I7            reduce using rule 60 (input -> QRA ( ) .)
    WALO            reduce using rule 60 (input -> QRA ( ) .)
    JEREB           reduce using rule 60 (input -> QRA ( ) .)
    ILA             reduce using rule 60 (input -> QRA ( ) .)
    LKOLA           reduce using rule 60 (input -> QRA ( ) .)
    MA7ED           reduce using rule 60 (input -> QRA ( ) .)
    DIR             reduce using rule 60 (input -> QRA ( ) .)
    QRA             reduce using rule 60 (input -> QRA ( ) .)
    TOL             reduce using rule 60 (input -> QRA ( ) .)
    TA3RIF          reduce using rule 60 (input -> QRA ( ) .)
    RED             reduce using rule 60 (input -> QRA ( ) .)
    [               reduce using rule 60 (input -> QRA ( ) .)
    $end            reduce using rule 60 (input -> QRA ( ) .)
    }               reduce using rule 60 (input -> QRA ( ) .)
    ;               reduce using rule 60 (input -> QRA ( ) .)


state 110

    (96) len -> TOL ( expression . )
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    )               shift and go to state 142
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 111

    (88) func -> TA3RIF ID ( . parameter_list ) { instruction_list }
    (89) func -> TA3RIF ID ( . ) { instruction_list }
    (86) parameter_list -> . parameter
    (87) parameter_list -> . parameter_list , parameter
    (85) parameter -> . ID

    )               shift and go to state 145
    ID              shift and go to state 143

    parameter_list                 shift and go to state 144
    parameter                      shift and go to state 146

state 112

    (74) array -> [ arraylist ] .

    PLUS            reduce using rule 74 (array -> [ arraylist ] .)
    MINUS           reduce using rule 74 (array -> [ arraylist ] .)
    TIMES           reduce using rule 74 (array -> [ arraylist ] .)
    DIVIDE          reduce using rule 74 (array -> [ arraylist ] .)
    KHREJ           reduce using rule 74 (array -> [ arraylist ] .)
    KMEL            reduce using rule 74 (array -> [ arraylist ] .)
    ID              reduce using rule 74 (array -> [ arraylist ] .)
    MOJOD           reduce using rule 74 (array -> [ arraylist ] .)
    KTEB            reduce using rule 74 (array -> [ arraylist ] .)
    (               reduce using rule 74 (array -> [ arraylist ] .)
    INT             reduce using rule 74 (array -> [ arraylist ] .)
    FLOAT           reduce using rule 74 (array -> [ arraylist ] .)
    STRING          reduce using rule 74 (array -> [ arraylist ] .)
    KHATE2          reduce using rule 74 (array -> [ arraylist ] .)
    S7I7            reduce using rule 74 (array -> [ arraylist ] .)
    WALO            reduce using rule 74 (array -> [ arraylist ] .)
    JEREB           reduce using rule 74 (array -> [ arraylist ] .)
    ILA             reduce using rule 74 (array -> [ arraylist ] .)
    LKOLA           reduce using rule 74 (array -> [ arraylist ] .)
    MA7ED           reduce using rule 74 (array -> [ arraylist ] .)
    DIR             reduce using rule 74 (array -> [ arraylist ] .)
    QRA             reduce using rule 74 (array -> [ arraylist ] .)
    TOL             reduce using rule 74 (array -> [ arraylist ] .)
    TA3RIF          reduce using rule 74 (array -> [ arraylist ] .)
    RED             reduce using rule 74 (array -> [ arraylist ] .)
    [               reduce using rule 74 (array -> [ arraylist ] .)
    $end            reduce using rule 74 (array -> [ arraylist ] .)
    )               reduce using rule 74 (array -> [ arraylist ] .)
    }               reduce using rule 74 (array -> [ arraylist ] .)
    ]               reduce using rule 74 (array -> [ arraylist ] .)
    ,               reduce using rule 74 (array -> [ arraylist ] .)
    ;               reduce using rule 74 (array -> [ arraylist ] .)
    :               reduce using rule 74 (array -> [ arraylist ] .)
    SUP             reduce using rule 74 (array -> [ arraylist ] .)
    INF             reduce using rule 74 (array -> [ arraylist ] .)
    EQUALSCOMP      reduce using rule 74 (array -> [ arraylist ] .)
    SUPEQUALS       reduce using rule 74 (array -> [ arraylist ] .)
    INFEQUALS       reduce using rule 74 (array -> [ arraylist ] .)
    DIFFERENT       reduce using rule 74 (array -> [ arraylist ] .)
    WA              reduce using rule 74 (array -> [ arraylist ] .)
    AW              reduce using rule 74 (array -> [ arraylist ] .)


state 113

    (73) arraylist -> arraylist , . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 147
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 114

    (90) appel_func -> ID ( argument_list ) .

    KHREJ           reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    KMEL            reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    ID              reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    MOJOD           reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    KTEB            reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    (               reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    MINUS           reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    PLUS            reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    INT             reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    FLOAT           reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    STRING          reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    KHATE2          reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    S7I7            reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    WALO            reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    JEREB           reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    ILA             reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    LKOLA           reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    MA7ED           reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    DIR             reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    QRA             reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    TOL             reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    TA3RIF          reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    RED             reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    [               reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    $end            reduce using rule 90 (appel_func -> ID ( argument_list ) .)
    }               reduce using rule 90 (appel_func -> ID ( argument_list ) .)


state 115

    (84) argument_list -> argument_list , . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 148
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 116

    (78) dimensions -> dimensions [ expression . ]
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    ]               shift and go to state 149
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 117

    (79) arrayslice -> ID [ expression : . expression ]
    (81) arrayslice -> ID [ expression : . ]
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    ]               shift and go to state 151
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 150
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 118

    (77) dimensions -> [ expression ] .

    [               reduce using rule 77 (dimensions -> [ expression ] .)
    EQUALS          reduce using rule 77 (dimensions -> [ expression ] .)
    PLUS            reduce using rule 77 (dimensions -> [ expression ] .)
    MINUS           reduce using rule 77 (dimensions -> [ expression ] .)
    TIMES           reduce using rule 77 (dimensions -> [ expression ] .)
    DIVIDE          reduce using rule 77 (dimensions -> [ expression ] .)
    KHREJ           reduce using rule 77 (dimensions -> [ expression ] .)
    KMEL            reduce using rule 77 (dimensions -> [ expression ] .)
    ID              reduce using rule 77 (dimensions -> [ expression ] .)
    MOJOD           reduce using rule 77 (dimensions -> [ expression ] .)
    KTEB            reduce using rule 77 (dimensions -> [ expression ] .)
    (               reduce using rule 77 (dimensions -> [ expression ] .)
    INT             reduce using rule 77 (dimensions -> [ expression ] .)
    FLOAT           reduce using rule 77 (dimensions -> [ expression ] .)
    STRING          reduce using rule 77 (dimensions -> [ expression ] .)
    KHATE2          reduce using rule 77 (dimensions -> [ expression ] .)
    S7I7            reduce using rule 77 (dimensions -> [ expression ] .)
    WALO            reduce using rule 77 (dimensions -> [ expression ] .)
    JEREB           reduce using rule 77 (dimensions -> [ expression ] .)
    ILA             reduce using rule 77 (dimensions -> [ expression ] .)
    LKOLA           reduce using rule 77 (dimensions -> [ expression ] .)
    MA7ED           reduce using rule 77 (dimensions -> [ expression ] .)
    DIR             reduce using rule 77 (dimensions -> [ expression ] .)
    QRA             reduce using rule 77 (dimensions -> [ expression ] .)
    TOL             reduce using rule 77 (dimensions -> [ expression ] .)
    TA3RIF          reduce using rule 77 (dimensions -> [ expression ] .)
    RED             reduce using rule 77 (dimensions -> [ expression ] .)
    $end            reduce using rule 77 (dimensions -> [ expression ] .)
    }               reduce using rule 77 (dimensions -> [ expression ] .)
    )               reduce using rule 77 (dimensions -> [ expression ] .)
    ]               reduce using rule 77 (dimensions -> [ expression ] .)
    ,               reduce using rule 77 (dimensions -> [ expression ] .)
    ;               reduce using rule 77 (dimensions -> [ expression ] .)
    :               reduce using rule 77 (dimensions -> [ expression ] .)
    SUP             reduce using rule 77 (dimensions -> [ expression ] .)
    INF             reduce using rule 77 (dimensions -> [ expression ] .)
    EQUALSCOMP      reduce using rule 77 (dimensions -> [ expression ] .)
    SUPEQUALS       reduce using rule 77 (dimensions -> [ expression ] .)
    INFEQUALS       reduce using rule 77 (dimensions -> [ expression ] .)
    DIFFERENT       reduce using rule 77 (dimensions -> [ expression ] .)
    WA              reduce using rule 77 (dimensions -> [ expression ] .)
    AW              reduce using rule 77 (dimensions -> [ expression ] .)


state 119

    (80) arrayslice -> ID [ : expression . ]
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    ]               shift and go to state 152
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 120

    (82) arrayslice -> ID [ : ] .

    PLUS            reduce using rule 82 (arrayslice -> ID [ : ] .)
    MINUS           reduce using rule 82 (arrayslice -> ID [ : ] .)
    TIMES           reduce using rule 82 (arrayslice -> ID [ : ] .)
    DIVIDE          reduce using rule 82 (arrayslice -> ID [ : ] .)
    KHREJ           reduce using rule 82 (arrayslice -> ID [ : ] .)
    KMEL            reduce using rule 82 (arrayslice -> ID [ : ] .)
    ID              reduce using rule 82 (arrayslice -> ID [ : ] .)
    MOJOD           reduce using rule 82 (arrayslice -> ID [ : ] .)
    KTEB            reduce using rule 82 (arrayslice -> ID [ : ] .)
    (               reduce using rule 82 (arrayslice -> ID [ : ] .)
    INT             reduce using rule 82 (arrayslice -> ID [ : ] .)
    FLOAT           reduce using rule 82 (arrayslice -> ID [ : ] .)
    STRING          reduce using rule 82 (arrayslice -> ID [ : ] .)
    KHATE2          reduce using rule 82 (arrayslice -> ID [ : ] .)
    S7I7            reduce using rule 82 (arrayslice -> ID [ : ] .)
    WALO            reduce using rule 82 (arrayslice -> ID [ : ] .)
    JEREB           reduce using rule 82 (arrayslice -> ID [ : ] .)
    ILA             reduce using rule 82 (arrayslice -> ID [ : ] .)
    LKOLA           reduce using rule 82 (arrayslice -> ID [ : ] .)
    MA7ED           reduce using rule 82 (arrayslice -> ID [ : ] .)
    DIR             reduce using rule 82 (arrayslice -> ID [ : ] .)
    QRA             reduce using rule 82 (arrayslice -> ID [ : ] .)
    TOL             reduce using rule 82 (arrayslice -> ID [ : ] .)
    TA3RIF          reduce using rule 82 (arrayslice -> ID [ : ] .)
    RED             reduce using rule 82 (arrayslice -> ID [ : ] .)
    [               reduce using rule 82 (arrayslice -> ID [ : ] .)
    $end            reduce using rule 82 (arrayslice -> ID [ : ] .)
    )               reduce using rule 82 (arrayslice -> ID [ : ] .)
    }               reduce using rule 82 (arrayslice -> ID [ : ] .)
    ]               reduce using rule 82 (arrayslice -> ID [ : ] .)
    ,               reduce using rule 82 (arrayslice -> ID [ : ] .)
    ;               reduce using rule 82 (arrayslice -> ID [ : ] .)
    :               reduce using rule 82 (arrayslice -> ID [ : ] .)
    SUP             reduce using rule 82 (arrayslice -> ID [ : ] .)
    INF             reduce using rule 82 (arrayslice -> ID [ : ] .)
    EQUALSCOMP      reduce using rule 82 (arrayslice -> ID [ : ] .)
    SUPEQUALS       reduce using rule 82 (arrayslice -> ID [ : ] .)
    INFEQUALS       reduce using rule 82 (arrayslice -> ID [ : ] .)
    DIFFERENT       reduce using rule 82 (arrayslice -> ID [ : ] .)
    WA              reduce using rule 82 (arrayslice -> ID [ : ] .)
    AW              reduce using rule 82 (arrayslice -> ID [ : ] .)


state 121

    (37) condition -> ( condition . ) AW ( condition )
    (38) condition -> ( condition . ) WA ( condition )
    (41) condition -> ( condition . ) WA condition
    (42) condition -> ( condition . ) AW condition
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    )               shift and go to state 153
    WA              shift and go to state 124
    AW              shift and go to state 125


state 122

    (55) expression -> ( expression . )
    (44) condition -> expression . SUP expression
    (45) condition -> expression . INF expression
    (46) condition -> expression . EQUALSCOMP expression
    (47) condition -> expression . SUPEQUALS expression
    (48) condition -> expression . INFEQUALS expression
    (49) condition -> expression . DIFFERENT expression
    (50) condition -> expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 100
    SUP             shift and go to state 129
    INF             shift and go to state 130
    EQUALSCOMP      shift and go to state 131
    SUPEQUALS       shift and go to state 132
    INFEQUALS       shift and go to state 133
    DIFFERENT       shift and go to state 134
    WA              reduce using rule 50 (condition -> expression .)
    AW              reduce using rule 50 (condition -> expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52

  ! )               [ reduce using rule 50 (condition -> expression .) ]


state 123

    (93) printing -> KTEB ( condition ) .

    KHREJ           reduce using rule 93 (printing -> KTEB ( condition ) .)
    KMEL            reduce using rule 93 (printing -> KTEB ( condition ) .)
    ID              reduce using rule 93 (printing -> KTEB ( condition ) .)
    MOJOD           reduce using rule 93 (printing -> KTEB ( condition ) .)
    KTEB            reduce using rule 93 (printing -> KTEB ( condition ) .)
    (               reduce using rule 93 (printing -> KTEB ( condition ) .)
    MINUS           reduce using rule 93 (printing -> KTEB ( condition ) .)
    PLUS            reduce using rule 93 (printing -> KTEB ( condition ) .)
    INT             reduce using rule 93 (printing -> KTEB ( condition ) .)
    FLOAT           reduce using rule 93 (printing -> KTEB ( condition ) .)
    STRING          reduce using rule 93 (printing -> KTEB ( condition ) .)
    KHATE2          reduce using rule 93 (printing -> KTEB ( condition ) .)
    S7I7            reduce using rule 93 (printing -> KTEB ( condition ) .)
    WALO            reduce using rule 93 (printing -> KTEB ( condition ) .)
    JEREB           reduce using rule 93 (printing -> KTEB ( condition ) .)
    ILA             reduce using rule 93 (printing -> KTEB ( condition ) .)
    LKOLA           reduce using rule 93 (printing -> KTEB ( condition ) .)
    MA7ED           reduce using rule 93 (printing -> KTEB ( condition ) .)
    DIR             reduce using rule 93 (printing -> KTEB ( condition ) .)
    QRA             reduce using rule 93 (printing -> KTEB ( condition ) .)
    TOL             reduce using rule 93 (printing -> KTEB ( condition ) .)
    TA3RIF          reduce using rule 93 (printing -> KTEB ( condition ) .)
    RED             reduce using rule 93 (printing -> KTEB ( condition ) .)
    [               reduce using rule 93 (printing -> KTEB ( condition ) .)
    $end            reduce using rule 93 (printing -> KTEB ( condition ) .)
    }               reduce using rule 93 (printing -> KTEB ( condition ) .)


state 124

    (39) condition -> condition WA . ( condition )

    (               shift and go to state 154


state 125

    (40) condition -> condition AW . ( condition )

    (               shift and go to state 155


state 126

    (94) printing -> KTEB ( incrementation ) .

    KHREJ           reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    KMEL            reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    ID              reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    MOJOD           reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    KTEB            reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    (               reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    MINUS           reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    PLUS            reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    INT             reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    FLOAT           reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    STRING          reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    KHATE2          reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    S7I7            reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    WALO            reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    JEREB           reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    ILA             reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    LKOLA           reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    MA7ED           reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    DIR             reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    QRA             reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    TOL             reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    TA3RIF          reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    RED             reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    [               reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    $end            reduce using rule 94 (printing -> KTEB ( incrementation ) .)
    }               reduce using rule 94 (printing -> KTEB ( incrementation ) .)


state 127

    (95) printing -> KTEB ( decrementation ) .

    KHREJ           reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    KMEL            reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    ID              reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    MOJOD           reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    KTEB            reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    (               reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    MINUS           reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    PLUS            reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    INT             reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    FLOAT           reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    STRING          reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    KHATE2          reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    S7I7            reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    WALO            reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    JEREB           reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    ILA             reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    LKOLA           reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    MA7ED           reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    DIR             reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    QRA             reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    TOL             reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    TA3RIF          reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    RED             reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    [               reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    $end            reduce using rule 95 (printing -> KTEB ( decrementation ) .)
    }               reduce using rule 95 (printing -> KTEB ( decrementation ) .)


state 128

    (43) condition -> L3AKSS ( . condition )
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 93
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 156
    expression                     shift and go to state 98
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 129

    (44) condition -> expression SUP . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 157
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 130

    (45) condition -> expression INF . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 158
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 131

    (46) condition -> expression EQUALSCOMP . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 159
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 132

    (47) condition -> expression SUPEQUALS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 160
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 133

    (48) condition -> expression INFEQUALS . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 161
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 134

    (49) condition -> expression DIFFERENT . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 162
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 135

    (61) try -> JEREB { instruction_list } . MASD9CH { instruction_list }
    (62) try -> JEREB { instruction_list } . MASD9CH { instruction_list } AKHIRAN { instruction_list }

    MASD9CH         shift and go to state 163


state 136

    (8) if -> ILA ( condition ) . { instruction_list }
    (9) if -> ILA ( condition ) . { instruction_list } WLA { instruction_list }

    {               shift and go to state 164


state 137

    (10) for -> LKOLA ( var_assign ; . condition ; incrementation ) { instruction_list }
    (11) for -> LKOLA ( var_assign ; . condition ; decrementation ) { instruction_list }
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 93
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 165
    expression                     shift and go to state 98
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 138

    (12) for -> LKOLA ( expression ; . condition ; incrementation ) { instruction_list }
    (13) for -> LKOLA ( expression ; . condition ; decrementation ) { instruction_list }
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 93
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    expression                     shift and go to state 98
    condition                      shift and go to state 166
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 139

    (14) while -> MA7ED ( condition ) . { instruction_list }

    {               shift and go to state 167


state 140

    (15) doWhile -> DIR { instruction_list } . MA7ED ( condition )

    MA7ED           shift and go to state 168


state 141

    (59) input -> QRA ( expression ) .

    KHREJ           reduce using rule 59 (input -> QRA ( expression ) .)
    KMEL            reduce using rule 59 (input -> QRA ( expression ) .)
    ID              reduce using rule 59 (input -> QRA ( expression ) .)
    MOJOD           reduce using rule 59 (input -> QRA ( expression ) .)
    KTEB            reduce using rule 59 (input -> QRA ( expression ) .)
    (               reduce using rule 59 (input -> QRA ( expression ) .)
    MINUS           reduce using rule 59 (input -> QRA ( expression ) .)
    PLUS            reduce using rule 59 (input -> QRA ( expression ) .)
    INT             reduce using rule 59 (input -> QRA ( expression ) .)
    FLOAT           reduce using rule 59 (input -> QRA ( expression ) .)
    STRING          reduce using rule 59 (input -> QRA ( expression ) .)
    KHATE2          reduce using rule 59 (input -> QRA ( expression ) .)
    S7I7            reduce using rule 59 (input -> QRA ( expression ) .)
    WALO            reduce using rule 59 (input -> QRA ( expression ) .)
    JEREB           reduce using rule 59 (input -> QRA ( expression ) .)
    ILA             reduce using rule 59 (input -> QRA ( expression ) .)
    LKOLA           reduce using rule 59 (input -> QRA ( expression ) .)
    MA7ED           reduce using rule 59 (input -> QRA ( expression ) .)
    DIR             reduce using rule 59 (input -> QRA ( expression ) .)
    QRA             reduce using rule 59 (input -> QRA ( expression ) .)
    TOL             reduce using rule 59 (input -> QRA ( expression ) .)
    TA3RIF          reduce using rule 59 (input -> QRA ( expression ) .)
    RED             reduce using rule 59 (input -> QRA ( expression ) .)
    [               reduce using rule 59 (input -> QRA ( expression ) .)
    $end            reduce using rule 59 (input -> QRA ( expression ) .)
    }               reduce using rule 59 (input -> QRA ( expression ) .)
    ;               reduce using rule 59 (input -> QRA ( expression ) .)


state 142

    (96) len -> TOL ( expression ) .

    KHREJ           reduce using rule 96 (len -> TOL ( expression ) .)
    KMEL            reduce using rule 96 (len -> TOL ( expression ) .)
    ID              reduce using rule 96 (len -> TOL ( expression ) .)
    MOJOD           reduce using rule 96 (len -> TOL ( expression ) .)
    KTEB            reduce using rule 96 (len -> TOL ( expression ) .)
    (               reduce using rule 96 (len -> TOL ( expression ) .)
    MINUS           reduce using rule 96 (len -> TOL ( expression ) .)
    PLUS            reduce using rule 96 (len -> TOL ( expression ) .)
    INT             reduce using rule 96 (len -> TOL ( expression ) .)
    FLOAT           reduce using rule 96 (len -> TOL ( expression ) .)
    STRING          reduce using rule 96 (len -> TOL ( expression ) .)
    KHATE2          reduce using rule 96 (len -> TOL ( expression ) .)
    S7I7            reduce using rule 96 (len -> TOL ( expression ) .)
    WALO            reduce using rule 96 (len -> TOL ( expression ) .)
    JEREB           reduce using rule 96 (len -> TOL ( expression ) .)
    ILA             reduce using rule 96 (len -> TOL ( expression ) .)
    LKOLA           reduce using rule 96 (len -> TOL ( expression ) .)
    MA7ED           reduce using rule 96 (len -> TOL ( expression ) .)
    DIR             reduce using rule 96 (len -> TOL ( expression ) .)
    QRA             reduce using rule 96 (len -> TOL ( expression ) .)
    TOL             reduce using rule 96 (len -> TOL ( expression ) .)
    TA3RIF          reduce using rule 96 (len -> TOL ( expression ) .)
    RED             reduce using rule 96 (len -> TOL ( expression ) .)
    [               reduce using rule 96 (len -> TOL ( expression ) .)
    $end            reduce using rule 96 (len -> TOL ( expression ) .)
    }               reduce using rule 96 (len -> TOL ( expression ) .)


state 143

    (85) parameter -> ID .

    )               reduce using rule 85 (parameter -> ID .)
    ,               reduce using rule 85 (parameter -> ID .)


state 144

    (88) func -> TA3RIF ID ( parameter_list . ) { instruction_list }
    (87) parameter_list -> parameter_list . , parameter

    )               shift and go to state 169
    ,               shift and go to state 170


state 145

    (89) func -> TA3RIF ID ( ) . { instruction_list }

    {               shift and go to state 171


state 146

    (86) parameter_list -> parameter .

    )               reduce using rule 86 (parameter_list -> parameter .)
    ,               reduce using rule 86 (parameter_list -> parameter .)


state 147

    (73) arraylist -> arraylist , expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    ]               reduce using rule 73 (arraylist -> arraylist , expression .)
    ,               reduce using rule 73 (arraylist -> arraylist , expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 148

    (84) argument_list -> argument_list , expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    )               reduce using rule 84 (argument_list -> argument_list , expression .)
    ,               reduce using rule 84 (argument_list -> argument_list , expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 149

    (78) dimensions -> dimensions [ expression ] .

    [               reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    EQUALS          reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    PLUS            reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    MINUS           reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    TIMES           reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    DIVIDE          reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    KHREJ           reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    KMEL            reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    ID              reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    MOJOD           reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    KTEB            reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    (               reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    INT             reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    FLOAT           reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    STRING          reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    KHATE2          reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    S7I7            reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    WALO            reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    JEREB           reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    ILA             reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    LKOLA           reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    MA7ED           reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    DIR             reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    QRA             reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    TOL             reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    TA3RIF          reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    RED             reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    $end            reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    }               reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    )               reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    ]               reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    ,               reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    ;               reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    :               reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    SUP             reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    INF             reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    EQUALSCOMP      reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    SUPEQUALS       reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    INFEQUALS       reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    DIFFERENT       reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    WA              reduce using rule 78 (dimensions -> dimensions [ expression ] .)
    AW              reduce using rule 78 (dimensions -> dimensions [ expression ] .)


state 150

    (79) arrayslice -> ID [ expression : expression . ]
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    ]               shift and go to state 172
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 151

    (81) arrayslice -> ID [ expression : ] .

    PLUS            reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    MINUS           reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    TIMES           reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    DIVIDE          reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    KHREJ           reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    KMEL            reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    ID              reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    MOJOD           reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    KTEB            reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    (               reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    INT             reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    FLOAT           reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    STRING          reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    KHATE2          reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    S7I7            reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    WALO            reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    JEREB           reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    ILA             reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    LKOLA           reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    MA7ED           reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    DIR             reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    QRA             reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    TOL             reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    TA3RIF          reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    RED             reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    [               reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    $end            reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    )               reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    }               reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    ]               reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    ,               reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    ;               reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    :               reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    SUP             reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    INF             reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    EQUALSCOMP      reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    SUPEQUALS       reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    INFEQUALS       reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    DIFFERENT       reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    WA              reduce using rule 81 (arrayslice -> ID [ expression : ] .)
    AW              reduce using rule 81 (arrayslice -> ID [ expression : ] .)


state 152

    (80) arrayslice -> ID [ : expression ] .

    PLUS            reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    MINUS           reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    TIMES           reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    DIVIDE          reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    KHREJ           reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    KMEL            reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    ID              reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    MOJOD           reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    KTEB            reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    (               reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    INT             reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    FLOAT           reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    STRING          reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    KHATE2          reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    S7I7            reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    WALO            reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    JEREB           reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    ILA             reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    LKOLA           reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    MA7ED           reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    DIR             reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    QRA             reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    TOL             reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    TA3RIF          reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    RED             reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    [               reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    $end            reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    )               reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    }               reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    ]               reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    ,               reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    ;               reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    :               reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    SUP             reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    INF             reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    EQUALSCOMP      reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    SUPEQUALS       reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    INFEQUALS       reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    DIFFERENT       reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    WA              reduce using rule 80 (arrayslice -> ID [ : expression ] .)
    AW              reduce using rule 80 (arrayslice -> ID [ : expression ] .)


state 153

    (37) condition -> ( condition ) . AW ( condition )
    (38) condition -> ( condition ) . WA ( condition )
    (41) condition -> ( condition ) . WA condition
    (42) condition -> ( condition ) . AW condition

    AW              shift and go to state 173
    WA              shift and go to state 174


state 154

    (39) condition -> condition WA ( . condition )
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 93
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 175
    expression                     shift and go to state 98
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 155

    (40) condition -> condition AW ( . condition )
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 93
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 176
    expression                     shift and go to state 98
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 156

    (43) condition -> L3AKSS ( condition . )
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    )               shift and go to state 177
    WA              shift and go to state 124
    AW              shift and go to state 125


state 157

    (44) condition -> expression SUP expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    )               reduce using rule 44 (condition -> expression SUP expression .)
    WA              reduce using rule 44 (condition -> expression SUP expression .)
    AW              reduce using rule 44 (condition -> expression SUP expression .)
    ;               reduce using rule 44 (condition -> expression SUP expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 158

    (45) condition -> expression INF expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    )               reduce using rule 45 (condition -> expression INF expression .)
    WA              reduce using rule 45 (condition -> expression INF expression .)
    AW              reduce using rule 45 (condition -> expression INF expression .)
    ;               reduce using rule 45 (condition -> expression INF expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 159

    (46) condition -> expression EQUALSCOMP expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    )               reduce using rule 46 (condition -> expression EQUALSCOMP expression .)
    WA              reduce using rule 46 (condition -> expression EQUALSCOMP expression .)
    AW              reduce using rule 46 (condition -> expression EQUALSCOMP expression .)
    ;               reduce using rule 46 (condition -> expression EQUALSCOMP expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 160

    (47) condition -> expression SUPEQUALS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    )               reduce using rule 47 (condition -> expression SUPEQUALS expression .)
    WA              reduce using rule 47 (condition -> expression SUPEQUALS expression .)
    AW              reduce using rule 47 (condition -> expression SUPEQUALS expression .)
    ;               reduce using rule 47 (condition -> expression SUPEQUALS expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 161

    (48) condition -> expression INFEQUALS expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    )               reduce using rule 48 (condition -> expression INFEQUALS expression .)
    WA              reduce using rule 48 (condition -> expression INFEQUALS expression .)
    AW              reduce using rule 48 (condition -> expression INFEQUALS expression .)
    ;               reduce using rule 48 (condition -> expression INFEQUALS expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 162

    (49) condition -> expression DIFFERENT expression .
    (51) expression -> expression . PLUS expression
    (52) expression -> expression . MINUS expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression

    )               reduce using rule 49 (condition -> expression DIFFERENT expression .)
    WA              reduce using rule 49 (condition -> expression DIFFERENT expression .)
    AW              reduce using rule 49 (condition -> expression DIFFERENT expression .)
    ;               reduce using rule 49 (condition -> expression DIFFERENT expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 163

    (61) try -> JEREB { instruction_list } MASD9CH . { instruction_list }
    (62) try -> JEREB { instruction_list } MASD9CH . { instruction_list } AKHIRAN { instruction_list }

    {               shift and go to state 178


state 164

    (8) if -> ILA ( condition ) { . instruction_list }
    (9) if -> ILA ( condition ) { . instruction_list } WLA { instruction_list }
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction_list               shift and go to state 179
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 165

    (10) for -> LKOLA ( var_assign ; condition . ; incrementation ) { instruction_list }
    (11) for -> LKOLA ( var_assign ; condition . ; decrementation ) { instruction_list }
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    ;               shift and go to state 180
    WA              shift and go to state 124
    AW              shift and go to state 125


state 166

    (12) for -> LKOLA ( expression ; condition . ; incrementation ) { instruction_list }
    (13) for -> LKOLA ( expression ; condition . ; decrementation ) { instruction_list }
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    ;               shift and go to state 181
    WA              shift and go to state 124
    AW              shift and go to state 125


state 167

    (14) while -> MA7ED ( condition ) { . instruction_list }
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction_list               shift and go to state 182
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 168

    (15) doWhile -> DIR { instruction_list } MA7ED . ( condition )

    (               shift and go to state 183


state 169

    (88) func -> TA3RIF ID ( parameter_list ) . { instruction_list }

    {               shift and go to state 184


state 170

    (87) parameter_list -> parameter_list , . parameter
    (85) parameter -> . ID

    ID              shift and go to state 143

    parameter                      shift and go to state 185

state 171

    (89) func -> TA3RIF ID ( ) { . instruction_list }
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction_list               shift and go to state 186
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 172

    (79) arrayslice -> ID [ expression : expression ] .

    PLUS            reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    MINUS           reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    TIMES           reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    DIVIDE          reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    KHREJ           reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    KMEL            reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    ID              reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    MOJOD           reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    KTEB            reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    (               reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    INT             reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    FLOAT           reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    STRING          reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    KHATE2          reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    S7I7            reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    WALO            reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    JEREB           reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    ILA             reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    LKOLA           reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    MA7ED           reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    DIR             reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    QRA             reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    TOL             reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    TA3RIF          reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    RED             reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    [               reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    $end            reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    )               reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    }               reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    ]               reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    ,               reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    ;               reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    :               reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    SUP             reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    INF             reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    EQUALSCOMP      reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    SUPEQUALS       reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    INFEQUALS       reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    DIFFERENT       reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    WA              reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)
    AW              reduce using rule 79 (arrayslice -> ID [ expression : expression ] .)


state 173

    (37) condition -> ( condition ) AW . ( condition )
    (42) condition -> ( condition ) AW . condition
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 187
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 188
    expression                     shift and go to state 98
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 174

    (38) condition -> ( condition ) WA . ( condition )
    (41) condition -> ( condition ) WA . condition
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 189
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 190
    expression                     shift and go to state 98
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 175

    (39) condition -> condition WA ( condition . )
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    )               shift and go to state 191
    WA              shift and go to state 124
    AW              shift and go to state 125


state 176

    (40) condition -> condition AW ( condition . )
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    )               shift and go to state 192
    WA              shift and go to state 124
    AW              shift and go to state 125


state 177

    (43) condition -> L3AKSS ( condition ) .

    )               reduce using rule 43 (condition -> L3AKSS ( condition ) .)
    WA              reduce using rule 43 (condition -> L3AKSS ( condition ) .)
    AW              reduce using rule 43 (condition -> L3AKSS ( condition ) .)
    ;               reduce using rule 43 (condition -> L3AKSS ( condition ) .)


state 178

    (61) try -> JEREB { instruction_list } MASD9CH { . instruction_list }
    (62) try -> JEREB { instruction_list } MASD9CH { . instruction_list } AKHIRAN { instruction_list }
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction_list               shift and go to state 193
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 179

    (8) if -> ILA ( condition ) { instruction_list . }
    (9) if -> ILA ( condition ) { instruction_list . } WLA { instruction_list }
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 194
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction                    shift and go to state 48
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 180

    (10) for -> LKOLA ( var_assign ; condition ; . incrementation ) { instruction_list }
    (11) for -> LKOLA ( var_assign ; condition ; . decrementation ) { instruction_list }
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION

    ID              shift and go to state 197

    incrementation                 shift and go to state 195
    decrementation                 shift and go to state 196

state 181

    (12) for -> LKOLA ( expression ; condition ; . incrementation ) { instruction_list }
    (13) for -> LKOLA ( expression ; condition ; . decrementation ) { instruction_list }
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION

    ID              shift and go to state 197

    incrementation                 shift and go to state 198
    decrementation                 shift and go to state 199

state 182

    (14) while -> MA7ED ( condition ) { instruction_list . }
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 200
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction                    shift and go to state 48
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 183

    (15) doWhile -> DIR { instruction_list } MA7ED ( . condition )
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 93
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 201
    expression                     shift and go to state 98
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 184

    (88) func -> TA3RIF ID ( parameter_list ) { . instruction_list }
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction_list               shift and go to state 202
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 185

    (87) parameter_list -> parameter_list , parameter .

    )               reduce using rule 87 (parameter_list -> parameter_list , parameter .)
    ,               reduce using rule 87 (parameter_list -> parameter_list , parameter .)


state 186

    (89) func -> TA3RIF ID ( ) { instruction_list . }
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 203
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction                    shift and go to state 48
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 187

    (37) condition -> ( condition ) AW ( . condition )
    (37) condition -> ( . condition ) AW ( condition )
    (38) condition -> ( . condition ) WA ( condition )
    (41) condition -> ( . condition ) WA condition
    (42) condition -> ( . condition ) AW condition
    (55) expression -> ( . expression )
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 93
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 204
    expression                     shift and go to state 122
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 188

    (42) condition -> ( condition ) AW condition .
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    )               reduce using rule 42 (condition -> ( condition ) AW condition .)
    WA              reduce using rule 42 (condition -> ( condition ) AW condition .)
    AW              reduce using rule 42 (condition -> ( condition ) AW condition .)
    ;               reduce using rule 42 (condition -> ( condition ) AW condition .)

  ! WA              [ shift and go to state 124 ]
  ! AW              [ shift and go to state 125 ]


state 189

    (38) condition -> ( condition ) WA ( . condition )
    (37) condition -> ( . condition ) AW ( condition )
    (38) condition -> ( . condition ) WA ( condition )
    (41) condition -> ( . condition ) WA condition
    (42) condition -> ( . condition ) AW condition
    (55) expression -> ( . expression )
    (37) condition -> . ( condition ) AW ( condition )
    (38) condition -> . ( condition ) WA ( condition )
    (39) condition -> . condition WA ( condition )
    (40) condition -> . condition AW ( condition )
    (41) condition -> . ( condition ) WA condition
    (42) condition -> . ( condition ) AW condition
    (43) condition -> . L3AKSS ( condition )
    (44) condition -> . expression SUP expression
    (45) condition -> . expression INF expression
    (46) condition -> . expression EQUALSCOMP expression
    (47) condition -> . expression SUPEQUALS expression
    (48) condition -> . expression INFEQUALS expression
    (49) condition -> . expression DIFFERENT expression
    (50) condition -> . expression
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (76) arrayelt -> . ID dimensions
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

    (               shift and go to state 93
    L3AKSS          shift and go to state 97
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    ID              shift and go to state 64
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    [               shift and go to state 47

    condition                      shift and go to state 205
    expression                     shift and go to state 122
    array                          shift and go to state 36
    arrayelt                       shift and go to state 65
    arrayslice                     shift and go to state 37

state 190

    (41) condition -> ( condition ) WA condition .
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    )               reduce using rule 41 (condition -> ( condition ) WA condition .)
    WA              reduce using rule 41 (condition -> ( condition ) WA condition .)
    AW              reduce using rule 41 (condition -> ( condition ) WA condition .)
    ;               reduce using rule 41 (condition -> ( condition ) WA condition .)

  ! WA              [ shift and go to state 124 ]
  ! AW              [ shift and go to state 125 ]


state 191

    (39) condition -> condition WA ( condition ) .

    )               reduce using rule 39 (condition -> condition WA ( condition ) .)
    WA              reduce using rule 39 (condition -> condition WA ( condition ) .)
    AW              reduce using rule 39 (condition -> condition WA ( condition ) .)
    ;               reduce using rule 39 (condition -> condition WA ( condition ) .)


state 192

    (40) condition -> condition AW ( condition ) .

    )               reduce using rule 40 (condition -> condition AW ( condition ) .)
    WA              reduce using rule 40 (condition -> condition AW ( condition ) .)
    AW              reduce using rule 40 (condition -> condition AW ( condition ) .)
    ;               reduce using rule 40 (condition -> condition AW ( condition ) .)


state 193

    (61) try -> JEREB { instruction_list } MASD9CH { instruction_list . }
    (62) try -> JEREB { instruction_list } MASD9CH { instruction_list . } AKHIRAN { instruction_list }
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 206
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction                    shift and go to state 48
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 194

    (8) if -> ILA ( condition ) { instruction_list } .
    (9) if -> ILA ( condition ) { instruction_list } . WLA { instruction_list }

    KHREJ           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    KMEL            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    ID              reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    MOJOD           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    KTEB            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    (               reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    MINUS           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    PLUS            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    INT             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    FLOAT           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    STRING          reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    KHATE2          reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    S7I7            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    WALO            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    JEREB           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    ILA             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    LKOLA           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    MA7ED           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    DIR             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    QRA             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    TOL             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    TA3RIF          reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    RED             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    [               reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    $end            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    }               reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    WLA             shift and go to state 207


state 195

    (10) for -> LKOLA ( var_assign ; condition ; incrementation . ) { instruction_list }

    )               shift and go to state 208


state 196

    (11) for -> LKOLA ( var_assign ; condition ; decrementation . ) { instruction_list }

    )               shift and go to state 209


state 197

    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION

    INCREMENTATION  shift and go to state 54
    DECREMENTATION  shift and go to state 55


state 198

    (12) for -> LKOLA ( expression ; condition ; incrementation . ) { instruction_list }

    )               shift and go to state 210


state 199

    (13) for -> LKOLA ( expression ; condition ; decrementation . ) { instruction_list }

    )               shift and go to state 211


state 200

    (14) while -> MA7ED ( condition ) { instruction_list } .

    KHREJ           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    KMEL            reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    ID              reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    MOJOD           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    KTEB            reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    (               reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    MINUS           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    PLUS            reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    INT             reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    FLOAT           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    STRING          reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    KHATE2          reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    S7I7            reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    WALO            reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    JEREB           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    ILA             reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    LKOLA           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    MA7ED           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    DIR             reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    QRA             reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    TOL             reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    TA3RIF          reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    RED             reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    [               reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    $end            reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    }               reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)


state 201

    (15) doWhile -> DIR { instruction_list } MA7ED ( condition . )
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    )               shift and go to state 212
    WA              shift and go to state 124
    AW              shift and go to state 125


state 202

    (88) func -> TA3RIF ID ( parameter_list ) { instruction_list . }
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 213
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction                    shift and go to state 48
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 203

    (89) func -> TA3RIF ID ( ) { instruction_list } .

    KHREJ           reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    KMEL            reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    ID              reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    MOJOD           reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    KTEB            reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    (               reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    MINUS           reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    PLUS            reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    INT             reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    FLOAT           reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    STRING          reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    KHATE2          reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    S7I7            reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    WALO            reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    JEREB           reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    ILA             reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    LKOLA           reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    MA7ED           reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    DIR             reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    QRA             reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    TOL             reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    TA3RIF          reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    RED             reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    [               reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    $end            reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)
    }               reduce using rule 89 (func -> TA3RIF ID ( ) { instruction_list } .)


state 204

    (37) condition -> ( condition ) AW ( condition . )
    (37) condition -> ( condition . ) AW ( condition )
    (38) condition -> ( condition . ) WA ( condition )
    (41) condition -> ( condition . ) WA condition
    (42) condition -> ( condition . ) AW condition
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    )               shift and go to state 214
    WA              shift and go to state 124
    AW              shift and go to state 125


state 205

    (38) condition -> ( condition ) WA ( condition . )
    (37) condition -> ( condition . ) AW ( condition )
    (38) condition -> ( condition . ) WA ( condition )
    (41) condition -> ( condition . ) WA condition
    (42) condition -> ( condition . ) AW condition
    (39) condition -> condition . WA ( condition )
    (40) condition -> condition . AW ( condition )

    )               shift and go to state 215
    WA              shift and go to state 124
    AW              shift and go to state 125


state 206

    (61) try -> JEREB { instruction_list } MASD9CH { instruction_list } .
    (62) try -> JEREB { instruction_list } MASD9CH { instruction_list } . AKHIRAN { instruction_list }

    KHREJ           reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KMEL            reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    ID              reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MOJOD           reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KTEB            reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    (               reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MINUS           reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    PLUS            reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    INT             reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    FLOAT           reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    STRING          reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KHATE2          reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    S7I7            reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    WALO            reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    JEREB           reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    ILA             reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    LKOLA           reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MA7ED           reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    DIR             reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    QRA             reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    TOL             reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    TA3RIF          reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    RED             reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    [               reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    $end            reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    }               reduce using rule 61 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    AKHIRAN         shift and go to state 216


state 207

    (9) if -> ILA ( condition ) { instruction_list } WLA . { instruction_list }

    {               shift and go to state 217


state 208

    (10) for -> LKOLA ( var_assign ; condition ; incrementation ) . { instruction_list }

    {               shift and go to state 218


state 209

    (11) for -> LKOLA ( var_assign ; condition ; decrementation ) . { instruction_list }

    {               shift and go to state 219


state 210

    (12) for -> LKOLA ( expression ; condition ; incrementation ) . { instruction_list }

    {               shift and go to state 220


state 211

    (13) for -> LKOLA ( expression ; condition ; decrementation ) . { instruction_list }

    {               shift and go to state 221


state 212

    (15) doWhile -> DIR { instruction_list } MA7ED ( condition ) .

    KHREJ           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KMEL            reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    ID              reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MOJOD           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KTEB            reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    (               reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MINUS           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    PLUS            reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    INT             reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    FLOAT           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    STRING          reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KHATE2          reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    S7I7            reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    WALO            reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    JEREB           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    ILA             reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    LKOLA           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MA7ED           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    DIR             reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    QRA             reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    TOL             reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    TA3RIF          reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    RED             reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    [               reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    $end            reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    }               reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)


state 213

    (88) func -> TA3RIF ID ( parameter_list ) { instruction_list } .

    KHREJ           reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    KMEL            reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    ID              reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    MOJOD           reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    KTEB            reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    (               reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    MINUS           reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    PLUS            reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    INT             reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    FLOAT           reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    STRING          reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    KHATE2          reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    S7I7            reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    WALO            reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    JEREB           reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    ILA             reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    LKOLA           reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    MA7ED           reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    DIR             reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    QRA             reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    TOL             reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    TA3RIF          reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    RED             reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    [               reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    $end            reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    }               reduce using rule 88 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)


state 214

    (37) condition -> ( condition ) AW ( condition ) .
    (37) condition -> ( condition ) . AW ( condition )
    (38) condition -> ( condition ) . WA ( condition )
    (41) condition -> ( condition ) . WA condition
    (42) condition -> ( condition ) . AW condition

    )               reduce using rule 37 (condition -> ( condition ) AW ( condition ) .)
    WA              reduce using rule 37 (condition -> ( condition ) AW ( condition ) .)
    AW              reduce using rule 37 (condition -> ( condition ) AW ( condition ) .)
    ;               reduce using rule 37 (condition -> ( condition ) AW ( condition ) .)

  ! AW              [ shift and go to state 173 ]
  ! WA              [ shift and go to state 174 ]


state 215

    (38) condition -> ( condition ) WA ( condition ) .
    (37) condition -> ( condition ) . AW ( condition )
    (38) condition -> ( condition ) . WA ( condition )
    (41) condition -> ( condition ) . WA condition
    (42) condition -> ( condition ) . AW condition

    )               reduce using rule 38 (condition -> ( condition ) WA ( condition ) .)
    WA              reduce using rule 38 (condition -> ( condition ) WA ( condition ) .)
    AW              reduce using rule 38 (condition -> ( condition ) WA ( condition ) .)
    ;               reduce using rule 38 (condition -> ( condition ) WA ( condition ) .)

  ! AW              [ shift and go to state 173 ]
  ! WA              [ shift and go to state 174 ]


state 216

    (62) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN . { instruction_list }

    {               shift and go to state 222


state 217

    (9) if -> ILA ( condition ) { instruction_list } WLA { . instruction_list }
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction_list               shift and go to state 223
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 218

    (10) for -> LKOLA ( var_assign ; condition ; incrementation ) { . instruction_list }
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    var_assign                     shift and go to state 4
    incrementation                 shift and go to state 7
    instruction_list               shift and go to state 224
    instruction                    shift and go to state 3
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 219

    (11) for -> LKOLA ( var_assign ; condition ; decrementation ) { . instruction_list }
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    var_assign                     shift and go to state 4
    decrementation                 shift and go to state 8
    instruction_list               shift and go to state 225
    instruction                    shift and go to state 3
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 220

    (12) for -> LKOLA ( expression ; condition ; incrementation ) { . instruction_list }
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    expression                     shift and go to state 9
    incrementation                 shift and go to state 7
    instruction_list               shift and go to state 226
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 221

    (13) for -> LKOLA ( expression ; condition ; decrementation ) { . instruction_list }
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    expression                     shift and go to state 9
    decrementation                 shift and go to state 8
    instruction_list               shift and go to state 227
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 222

    (62) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { . instruction_list }
    (35) instruction_list -> . instruction
    (36) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    }               reduce using rule 97 (empty -> .)
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction_list               shift and go to state 228
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 223

    (9) if -> ILA ( condition ) { instruction_list } WLA { instruction_list . }
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 229
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction                    shift and go to state 48
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 224

    (10) for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list . }
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 230
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    var_assign                     shift and go to state 4
    incrementation                 shift and go to state 7
    instruction                    shift and go to state 48
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 225

    (11) for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list . }
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 231
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    var_assign                     shift and go to state 4
    decrementation                 shift and go to state 8
    instruction                    shift and go to state 48
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 226

    (12) for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list . }
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 232
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    expression                     shift and go to state 9
    incrementation                 shift and go to state 7
    instruction                    shift and go to state 48
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 227

    (13) for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list . }
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 233
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    expression                     shift and go to state 9
    decrementation                 shift and go to state 8
    instruction                    shift and go to state 48
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 228

    (62) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list . }
    (36) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (32) instruction -> . func
    (33) instruction -> . appel_func
    (34) instruction -> . return
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (93) printing -> . KTEB ( condition )
    (94) printing -> . KTEB ( incrementation )
    (95) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (51) expression -> . expression PLUS expression
    (52) expression -> . expression MINUS expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . ( expression )
    (56) expression -> . MINUS expression
    (57) expression -> . PLUS expression
    (58) expression -> . ID
    (63) expression -> . INT
    (64) expression -> . FLOAT
    (65) expression -> . STRING
    (66) expression -> . KHATE2
    (67) expression -> . S7I7
    (68) expression -> . WALO
    (69) expression -> . array
    (70) expression -> . arrayelt
    (71) expression -> . arrayslice
    (61) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (62) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (59) input -> . QRA ( expression )
    (60) input -> . QRA ( )
    (96) len -> . TOL ( expression )
    (97) empty -> .
    (88) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (89) func -> . TA3RIF ID ( ) { instruction_list }
    (90) appel_func -> . ID ( argument_list )
    (91) appel_func -> . ID ( )
    (92) return -> . RED expression
    (76) arrayelt -> . ID dimensions
    (74) array -> . [ arraylist ]
    (75) array -> . [ ]
    (79) arrayslice -> . ID [ expression : expression ]
    (80) arrayslice -> . ID [ : expression ]
    (81) arrayslice -> . ID [ expression : ]
    (82) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 234
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 26
    (               shift and go to state 27
    MINUS           shift and go to state 29
    PLUS            shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    KHATE2          shift and go to state 33
    S7I7            shift and go to state 34
    WALO            shift and go to state 35
    JEREB           shift and go to state 38
    ILA             shift and go to state 39
    LKOLA           shift and go to state 40
    MA7ED           shift and go to state 41
    DIR             shift and go to state 42
    QRA             shift and go to state 43
    TOL             shift and go to state 44
    TA3RIF          shift and go to state 45
    RED             shift and go to state 46
    [               shift and go to state 47

  ! }               [ reduce using rule 97 (empty -> .) ]
  ! KHREJ           [ reduce using rule 97 (empty -> .) ]
  ! KMEL            [ reduce using rule 97 (empty -> .) ]
  ! ID              [ reduce using rule 97 (empty -> .) ]
  ! MOJOD           [ reduce using rule 97 (empty -> .) ]
  ! KTEB            [ reduce using rule 97 (empty -> .) ]
  ! (               [ reduce using rule 97 (empty -> .) ]
  ! MINUS           [ reduce using rule 97 (empty -> .) ]
  ! PLUS            [ reduce using rule 97 (empty -> .) ]
  ! INT             [ reduce using rule 97 (empty -> .) ]
  ! FLOAT           [ reduce using rule 97 (empty -> .) ]
  ! STRING          [ reduce using rule 97 (empty -> .) ]
  ! KHATE2          [ reduce using rule 97 (empty -> .) ]
  ! S7I7            [ reduce using rule 97 (empty -> .) ]
  ! WALO            [ reduce using rule 97 (empty -> .) ]
  ! JEREB           [ reduce using rule 97 (empty -> .) ]
  ! ILA             [ reduce using rule 97 (empty -> .) ]
  ! LKOLA           [ reduce using rule 97 (empty -> .) ]
  ! MA7ED           [ reduce using rule 97 (empty -> .) ]
  ! DIR             [ reduce using rule 97 (empty -> .) ]
  ! QRA             [ reduce using rule 97 (empty -> .) ]
  ! TOL             [ reduce using rule 97 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 97 (empty -> .) ]
  ! RED             [ reduce using rule 97 (empty -> .) ]
  ! [               [ reduce using rule 97 (empty -> .) ]

    instruction                    shift and go to state 48
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrayelt                       shift and go to state 25
    array                          shift and go to state 36
    arrayslice                     shift and go to state 37

state 229

    (9) if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .

    KHREJ           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KMEL            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    ID              reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MOJOD           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KTEB            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    (               reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MINUS           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    PLUS            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    INT             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    FLOAT           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    STRING          reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KHATE2          reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    S7I7            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    WALO            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    JEREB           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    ILA             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    LKOLA           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MA7ED           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    DIR             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    QRA             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    TOL             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    TA3RIF          reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    RED             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    [               reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    $end            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    }               reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)


state 230

    (10) for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .

    KHREJ           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KMEL            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    ID              reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MOJOD           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KTEB            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    (               reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MINUS           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    PLUS            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    INT             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    FLOAT           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    STRING          reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KHATE2          reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    S7I7            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    WALO            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    JEREB           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    ILA             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    LKOLA           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MA7ED           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    DIR             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    QRA             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    TOL             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    TA3RIF          reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    RED             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    [               reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    $end            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    }               reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)


state 231

    (11) for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .

    KHREJ           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KMEL            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    ID              reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MOJOD           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KTEB            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    (               reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MINUS           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    PLUS            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    INT             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    FLOAT           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    STRING          reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KHATE2          reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    S7I7            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    WALO            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    JEREB           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    ILA             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    LKOLA           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MA7ED           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    DIR             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    QRA             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    TOL             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    TA3RIF          reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    RED             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    [               reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    $end            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    }               reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)


state 232

    (12) for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .

    KHREJ           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KMEL            reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    ID              reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MOJOD           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KTEB            reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    (               reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MINUS           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    PLUS            reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    INT             reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    FLOAT           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    STRING          reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KHATE2          reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    S7I7            reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    WALO            reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    JEREB           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    ILA             reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    LKOLA           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MA7ED           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    DIR             reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    QRA             reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    TOL             reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    TA3RIF          reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    RED             reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    [               reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    $end            reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    }               reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)


state 233

    (13) for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .

    KHREJ           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KMEL            reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    ID              reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MOJOD           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KTEB            reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    (               reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MINUS           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    PLUS            reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    INT             reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    FLOAT           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    STRING          reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KHATE2          reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    S7I7            reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    WALO            reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    JEREB           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    ILA             reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    LKOLA           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MA7ED           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    DIR             reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    QRA             reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    TOL             reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    TA3RIF          reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    RED             reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    [               reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    $end            reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    }               reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)


state 234

    (62) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .

    KHREJ           reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KMEL            reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    ID              reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MOJOD           reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KTEB            reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    (               reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MINUS           reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    PLUS            reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    INT             reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    FLOAT           reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    STRING          reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KHATE2          reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    S7I7            reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    WALO            reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    JEREB           reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    ILA             reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    LKOLA           reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MA7ED           reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    DIR             reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    QRA             reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    TOL             reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    TA3RIF          reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    RED             reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    [               reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    $end            reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    }               reduce using rule 62 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KHREJ in state 0 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 0 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 0 resolved as shift
WARNING: shift/reduce conflict for ( in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 0 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 0 resolved as shift
WARNING: shift/reduce conflict for WALO in state 0 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 0 resolved as shift
WARNING: shift/reduce conflict for ILA in state 0 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 0 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 0 resolved as shift
WARNING: shift/reduce conflict for DIR in state 0 resolved as shift
WARNING: shift/reduce conflict for QRA in state 0 resolved as shift
WARNING: shift/reduce conflict for TOL in state 0 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 0 resolved as shift
WARNING: shift/reduce conflict for RED in state 0 resolved as shift
WARNING: shift/reduce conflict for [ in state 0 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 2 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 2 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 2 resolved as shift
WARNING: shift/reduce conflict for ( in state 2 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 2 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 2 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 2 resolved as shift
WARNING: shift/reduce conflict for WALO in state 2 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 2 resolved as shift
WARNING: shift/reduce conflict for ILA in state 2 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 2 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 2 resolved as shift
WARNING: shift/reduce conflict for DIR in state 2 resolved as shift
WARNING: shift/reduce conflict for QRA in state 2 resolved as shift
WARNING: shift/reduce conflict for TOL in state 2 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 2 resolved as shift
WARNING: shift/reduce conflict for RED in state 2 resolved as shift
WARNING: shift/reduce conflict for [ in state 2 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 9 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 9 resolved as shift
WARNING: shift/reduce conflict for ( in state 23 resolved as shift
WARNING: shift/reduce conflict for [ in state 23 resolved as shift
WARNING: shift/reduce conflict for [ in state 57 resolved as shift
WARNING: shift/reduce conflict for [ in state 64 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 68 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 68 resolved as shift
WARNING: shift/reduce conflict for ID in state 68 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 68 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 68 resolved as shift
WARNING: shift/reduce conflict for ( in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for INT in state 68 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 68 resolved as shift
WARNING: shift/reduce conflict for STRING in state 68 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 68 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 68 resolved as shift
WARNING: shift/reduce conflict for WALO in state 68 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 68 resolved as shift
WARNING: shift/reduce conflict for ILA in state 68 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 68 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 68 resolved as shift
WARNING: shift/reduce conflict for DIR in state 68 resolved as shift
WARNING: shift/reduce conflict for QRA in state 68 resolved as shift
WARNING: shift/reduce conflict for TOL in state 68 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 68 resolved as shift
WARNING: shift/reduce conflict for RED in state 68 resolved as shift
WARNING: shift/reduce conflict for [ in state 68 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 72 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 72 resolved as shift
WARNING: shift/reduce conflict for ID in state 72 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 72 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 72 resolved as shift
WARNING: shift/reduce conflict for ( in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for INT in state 72 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING in state 72 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 72 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 72 resolved as shift
WARNING: shift/reduce conflict for WALO in state 72 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 72 resolved as shift
WARNING: shift/reduce conflict for ILA in state 72 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 72 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 72 resolved as shift
WARNING: shift/reduce conflict for DIR in state 72 resolved as shift
WARNING: shift/reduce conflict for QRA in state 72 resolved as shift
WARNING: shift/reduce conflict for TOL in state 72 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 72 resolved as shift
WARNING: shift/reduce conflict for RED in state 72 resolved as shift
WARNING: shift/reduce conflict for [ in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for } in state 101 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 101 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 101 resolved as shift
WARNING: shift/reduce conflict for ID in state 101 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 101 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 101 resolved as shift
WARNING: shift/reduce conflict for ( in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for INT in state 101 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 101 resolved as shift
WARNING: shift/reduce conflict for STRING in state 101 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 101 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 101 resolved as shift
WARNING: shift/reduce conflict for WALO in state 101 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 101 resolved as shift
WARNING: shift/reduce conflict for ILA in state 101 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 101 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 101 resolved as shift
WARNING: shift/reduce conflict for DIR in state 101 resolved as shift
WARNING: shift/reduce conflict for QRA in state 101 resolved as shift
WARNING: shift/reduce conflict for TOL in state 101 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 101 resolved as shift
WARNING: shift/reduce conflict for RED in state 101 resolved as shift
WARNING: shift/reduce conflict for [ in state 101 resolved as shift
WARNING: shift/reduce conflict for } in state 107 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 107 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 107 resolved as shift
WARNING: shift/reduce conflict for ID in state 107 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 107 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 107 resolved as shift
WARNING: shift/reduce conflict for ( in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for INT in state 107 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 107 resolved as shift
WARNING: shift/reduce conflict for STRING in state 107 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 107 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 107 resolved as shift
WARNING: shift/reduce conflict for WALO in state 107 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 107 resolved as shift
WARNING: shift/reduce conflict for ILA in state 107 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 107 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 107 resolved as shift
WARNING: shift/reduce conflict for DIR in state 107 resolved as shift
WARNING: shift/reduce conflict for QRA in state 107 resolved as shift
WARNING: shift/reduce conflict for TOL in state 107 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 107 resolved as shift
WARNING: shift/reduce conflict for RED in state 107 resolved as shift
WARNING: shift/reduce conflict for [ in state 107 resolved as shift
WARNING: shift/reduce conflict for ) in state 122 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 164 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 164 resolved as shift
WARNING: shift/reduce conflict for ID in state 164 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 164 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 164 resolved as shift
WARNING: shift/reduce conflict for ( in state 164 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 164 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 164 resolved as shift
WARNING: shift/reduce conflict for INT in state 164 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 164 resolved as shift
WARNING: shift/reduce conflict for STRING in state 164 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 164 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 164 resolved as shift
WARNING: shift/reduce conflict for WALO in state 164 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 164 resolved as shift
WARNING: shift/reduce conflict for ILA in state 164 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 164 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 164 resolved as shift
WARNING: shift/reduce conflict for DIR in state 164 resolved as shift
WARNING: shift/reduce conflict for QRA in state 164 resolved as shift
WARNING: shift/reduce conflict for TOL in state 164 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 164 resolved as shift
WARNING: shift/reduce conflict for RED in state 164 resolved as shift
WARNING: shift/reduce conflict for [ in state 164 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 167 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 167 resolved as shift
WARNING: shift/reduce conflict for ID in state 167 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 167 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 167 resolved as shift
WARNING: shift/reduce conflict for ( in state 167 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 167 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 167 resolved as shift
WARNING: shift/reduce conflict for INT in state 167 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 167 resolved as shift
WARNING: shift/reduce conflict for STRING in state 167 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 167 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 167 resolved as shift
WARNING: shift/reduce conflict for WALO in state 167 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 167 resolved as shift
WARNING: shift/reduce conflict for ILA in state 167 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 167 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 167 resolved as shift
WARNING: shift/reduce conflict for DIR in state 167 resolved as shift
WARNING: shift/reduce conflict for QRA in state 167 resolved as shift
WARNING: shift/reduce conflict for TOL in state 167 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 167 resolved as shift
WARNING: shift/reduce conflict for RED in state 167 resolved as shift
WARNING: shift/reduce conflict for [ in state 167 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 171 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 171 resolved as shift
WARNING: shift/reduce conflict for ID in state 171 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 171 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 171 resolved as shift
WARNING: shift/reduce conflict for ( in state 171 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 171 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 171 resolved as shift
WARNING: shift/reduce conflict for INT in state 171 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 171 resolved as shift
WARNING: shift/reduce conflict for STRING in state 171 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 171 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 171 resolved as shift
WARNING: shift/reduce conflict for WALO in state 171 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 171 resolved as shift
WARNING: shift/reduce conflict for ILA in state 171 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 171 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 171 resolved as shift
WARNING: shift/reduce conflict for DIR in state 171 resolved as shift
WARNING: shift/reduce conflict for QRA in state 171 resolved as shift
WARNING: shift/reduce conflict for TOL in state 171 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 171 resolved as shift
WARNING: shift/reduce conflict for RED in state 171 resolved as shift
WARNING: shift/reduce conflict for [ in state 171 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 178 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 178 resolved as shift
WARNING: shift/reduce conflict for ID in state 178 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 178 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 178 resolved as shift
WARNING: shift/reduce conflict for ( in state 178 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 178 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 178 resolved as shift
WARNING: shift/reduce conflict for INT in state 178 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 178 resolved as shift
WARNING: shift/reduce conflict for STRING in state 178 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 178 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 178 resolved as shift
WARNING: shift/reduce conflict for WALO in state 178 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 178 resolved as shift
WARNING: shift/reduce conflict for ILA in state 178 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 178 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 178 resolved as shift
WARNING: shift/reduce conflict for DIR in state 178 resolved as shift
WARNING: shift/reduce conflict for QRA in state 178 resolved as shift
WARNING: shift/reduce conflict for TOL in state 178 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 178 resolved as shift
WARNING: shift/reduce conflict for RED in state 178 resolved as shift
WARNING: shift/reduce conflict for [ in state 178 resolved as shift
WARNING: shift/reduce conflict for } in state 179 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 179 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 179 resolved as shift
WARNING: shift/reduce conflict for ID in state 179 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 179 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 179 resolved as shift
WARNING: shift/reduce conflict for ( in state 179 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 179 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 179 resolved as shift
WARNING: shift/reduce conflict for INT in state 179 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 179 resolved as shift
WARNING: shift/reduce conflict for STRING in state 179 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 179 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 179 resolved as shift
WARNING: shift/reduce conflict for WALO in state 179 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 179 resolved as shift
WARNING: shift/reduce conflict for ILA in state 179 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 179 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 179 resolved as shift
WARNING: shift/reduce conflict for DIR in state 179 resolved as shift
WARNING: shift/reduce conflict for QRA in state 179 resolved as shift
WARNING: shift/reduce conflict for TOL in state 179 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 179 resolved as shift
WARNING: shift/reduce conflict for RED in state 179 resolved as shift
WARNING: shift/reduce conflict for [ in state 179 resolved as shift
WARNING: shift/reduce conflict for } in state 182 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 182 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 182 resolved as shift
WARNING: shift/reduce conflict for ID in state 182 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 182 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 182 resolved as shift
WARNING: shift/reduce conflict for ( in state 182 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 182 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 182 resolved as shift
WARNING: shift/reduce conflict for INT in state 182 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 182 resolved as shift
WARNING: shift/reduce conflict for STRING in state 182 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 182 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 182 resolved as shift
WARNING: shift/reduce conflict for WALO in state 182 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 182 resolved as shift
WARNING: shift/reduce conflict for ILA in state 182 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 182 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 182 resolved as shift
WARNING: shift/reduce conflict for DIR in state 182 resolved as shift
WARNING: shift/reduce conflict for QRA in state 182 resolved as shift
WARNING: shift/reduce conflict for TOL in state 182 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 182 resolved as shift
WARNING: shift/reduce conflict for RED in state 182 resolved as shift
WARNING: shift/reduce conflict for [ in state 182 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 184 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 184 resolved as shift
WARNING: shift/reduce conflict for ID in state 184 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 184 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 184 resolved as shift
WARNING: shift/reduce conflict for ( in state 184 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 184 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 184 resolved as shift
WARNING: shift/reduce conflict for INT in state 184 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 184 resolved as shift
WARNING: shift/reduce conflict for STRING in state 184 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 184 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 184 resolved as shift
WARNING: shift/reduce conflict for WALO in state 184 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 184 resolved as shift
WARNING: shift/reduce conflict for ILA in state 184 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 184 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 184 resolved as shift
WARNING: shift/reduce conflict for DIR in state 184 resolved as shift
WARNING: shift/reduce conflict for QRA in state 184 resolved as shift
WARNING: shift/reduce conflict for TOL in state 184 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 184 resolved as shift
WARNING: shift/reduce conflict for RED in state 184 resolved as shift
WARNING: shift/reduce conflict for [ in state 184 resolved as shift
WARNING: shift/reduce conflict for } in state 186 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 186 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 186 resolved as shift
WARNING: shift/reduce conflict for ID in state 186 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 186 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 186 resolved as shift
WARNING: shift/reduce conflict for ( in state 186 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 186 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 186 resolved as shift
WARNING: shift/reduce conflict for INT in state 186 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 186 resolved as shift
WARNING: shift/reduce conflict for STRING in state 186 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 186 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 186 resolved as shift
WARNING: shift/reduce conflict for WALO in state 186 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 186 resolved as shift
WARNING: shift/reduce conflict for ILA in state 186 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 186 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 186 resolved as shift
WARNING: shift/reduce conflict for DIR in state 186 resolved as shift
WARNING: shift/reduce conflict for QRA in state 186 resolved as shift
WARNING: shift/reduce conflict for TOL in state 186 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 186 resolved as shift
WARNING: shift/reduce conflict for RED in state 186 resolved as shift
WARNING: shift/reduce conflict for [ in state 186 resolved as shift
WARNING: shift/reduce conflict for } in state 193 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 193 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 193 resolved as shift
WARNING: shift/reduce conflict for ID in state 193 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 193 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 193 resolved as shift
WARNING: shift/reduce conflict for ( in state 193 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 193 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 193 resolved as shift
WARNING: shift/reduce conflict for INT in state 193 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 193 resolved as shift
WARNING: shift/reduce conflict for STRING in state 193 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 193 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 193 resolved as shift
WARNING: shift/reduce conflict for WALO in state 193 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 193 resolved as shift
WARNING: shift/reduce conflict for ILA in state 193 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 193 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 193 resolved as shift
WARNING: shift/reduce conflict for DIR in state 193 resolved as shift
WARNING: shift/reduce conflict for QRA in state 193 resolved as shift
WARNING: shift/reduce conflict for TOL in state 193 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 193 resolved as shift
WARNING: shift/reduce conflict for RED in state 193 resolved as shift
WARNING: shift/reduce conflict for [ in state 193 resolved as shift
WARNING: shift/reduce conflict for } in state 202 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 202 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 202 resolved as shift
WARNING: shift/reduce conflict for ID in state 202 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 202 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 202 resolved as shift
WARNING: shift/reduce conflict for ( in state 202 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 202 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 202 resolved as shift
WARNING: shift/reduce conflict for INT in state 202 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 202 resolved as shift
WARNING: shift/reduce conflict for STRING in state 202 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 202 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 202 resolved as shift
WARNING: shift/reduce conflict for WALO in state 202 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 202 resolved as shift
WARNING: shift/reduce conflict for ILA in state 202 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 202 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 202 resolved as shift
WARNING: shift/reduce conflict for DIR in state 202 resolved as shift
WARNING: shift/reduce conflict for QRA in state 202 resolved as shift
WARNING: shift/reduce conflict for TOL in state 202 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 202 resolved as shift
WARNING: shift/reduce conflict for RED in state 202 resolved as shift
WARNING: shift/reduce conflict for [ in state 202 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 217 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 217 resolved as shift
WARNING: shift/reduce conflict for ID in state 217 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 217 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 217 resolved as shift
WARNING: shift/reduce conflict for ( in state 217 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 217 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 217 resolved as shift
WARNING: shift/reduce conflict for INT in state 217 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 217 resolved as shift
WARNING: shift/reduce conflict for STRING in state 217 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 217 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 217 resolved as shift
WARNING: shift/reduce conflict for WALO in state 217 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 217 resolved as shift
WARNING: shift/reduce conflict for ILA in state 217 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 217 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 217 resolved as shift
WARNING: shift/reduce conflict for DIR in state 217 resolved as shift
WARNING: shift/reduce conflict for QRA in state 217 resolved as shift
WARNING: shift/reduce conflict for TOL in state 217 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 217 resolved as shift
WARNING: shift/reduce conflict for RED in state 217 resolved as shift
WARNING: shift/reduce conflict for [ in state 217 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 218 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 218 resolved as shift
WARNING: shift/reduce conflict for ID in state 218 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 218 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 218 resolved as shift
WARNING: shift/reduce conflict for ( in state 218 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 218 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 218 resolved as shift
WARNING: shift/reduce conflict for INT in state 218 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 218 resolved as shift
WARNING: shift/reduce conflict for STRING in state 218 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 218 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 218 resolved as shift
WARNING: shift/reduce conflict for WALO in state 218 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 218 resolved as shift
WARNING: shift/reduce conflict for ILA in state 218 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 218 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 218 resolved as shift
WARNING: shift/reduce conflict for DIR in state 218 resolved as shift
WARNING: shift/reduce conflict for QRA in state 218 resolved as shift
WARNING: shift/reduce conflict for TOL in state 218 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 218 resolved as shift
WARNING: shift/reduce conflict for RED in state 218 resolved as shift
WARNING: shift/reduce conflict for [ in state 218 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 219 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 219 resolved as shift
WARNING: shift/reduce conflict for ID in state 219 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 219 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 219 resolved as shift
WARNING: shift/reduce conflict for ( in state 219 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 219 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 219 resolved as shift
WARNING: shift/reduce conflict for INT in state 219 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 219 resolved as shift
WARNING: shift/reduce conflict for STRING in state 219 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 219 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 219 resolved as shift
WARNING: shift/reduce conflict for WALO in state 219 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 219 resolved as shift
WARNING: shift/reduce conflict for ILA in state 219 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 219 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 219 resolved as shift
WARNING: shift/reduce conflict for DIR in state 219 resolved as shift
WARNING: shift/reduce conflict for QRA in state 219 resolved as shift
WARNING: shift/reduce conflict for TOL in state 219 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 219 resolved as shift
WARNING: shift/reduce conflict for RED in state 219 resolved as shift
WARNING: shift/reduce conflict for [ in state 219 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 220 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 220 resolved as shift
WARNING: shift/reduce conflict for ID in state 220 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 220 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 220 resolved as shift
WARNING: shift/reduce conflict for ( in state 220 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 220 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 220 resolved as shift
WARNING: shift/reduce conflict for INT in state 220 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 220 resolved as shift
WARNING: shift/reduce conflict for STRING in state 220 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 220 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 220 resolved as shift
WARNING: shift/reduce conflict for WALO in state 220 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 220 resolved as shift
WARNING: shift/reduce conflict for ILA in state 220 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 220 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 220 resolved as shift
WARNING: shift/reduce conflict for DIR in state 220 resolved as shift
WARNING: shift/reduce conflict for QRA in state 220 resolved as shift
WARNING: shift/reduce conflict for TOL in state 220 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 220 resolved as shift
WARNING: shift/reduce conflict for RED in state 220 resolved as shift
WARNING: shift/reduce conflict for [ in state 220 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 221 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 221 resolved as shift
WARNING: shift/reduce conflict for ID in state 221 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 221 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 221 resolved as shift
WARNING: shift/reduce conflict for ( in state 221 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 221 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 221 resolved as shift
WARNING: shift/reduce conflict for INT in state 221 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 221 resolved as shift
WARNING: shift/reduce conflict for STRING in state 221 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 221 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 221 resolved as shift
WARNING: shift/reduce conflict for WALO in state 221 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 221 resolved as shift
WARNING: shift/reduce conflict for ILA in state 221 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 221 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 221 resolved as shift
WARNING: shift/reduce conflict for DIR in state 221 resolved as shift
WARNING: shift/reduce conflict for QRA in state 221 resolved as shift
WARNING: shift/reduce conflict for TOL in state 221 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 221 resolved as shift
WARNING: shift/reduce conflict for RED in state 221 resolved as shift
WARNING: shift/reduce conflict for [ in state 221 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 222 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 222 resolved as shift
WARNING: shift/reduce conflict for ID in state 222 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 222 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 222 resolved as shift
WARNING: shift/reduce conflict for ( in state 222 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 222 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 222 resolved as shift
WARNING: shift/reduce conflict for INT in state 222 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 222 resolved as shift
WARNING: shift/reduce conflict for STRING in state 222 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 222 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 222 resolved as shift
WARNING: shift/reduce conflict for WALO in state 222 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 222 resolved as shift
WARNING: shift/reduce conflict for ILA in state 222 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 222 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 222 resolved as shift
WARNING: shift/reduce conflict for DIR in state 222 resolved as shift
WARNING: shift/reduce conflict for QRA in state 222 resolved as shift
WARNING: shift/reduce conflict for TOL in state 222 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 222 resolved as shift
WARNING: shift/reduce conflict for RED in state 222 resolved as shift
WARNING: shift/reduce conflict for [ in state 222 resolved as shift
WARNING: shift/reduce conflict for } in state 223 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 223 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 223 resolved as shift
WARNING: shift/reduce conflict for ID in state 223 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 223 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 223 resolved as shift
WARNING: shift/reduce conflict for ( in state 223 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 223 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 223 resolved as shift
WARNING: shift/reduce conflict for INT in state 223 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 223 resolved as shift
WARNING: shift/reduce conflict for STRING in state 223 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 223 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 223 resolved as shift
WARNING: shift/reduce conflict for WALO in state 223 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 223 resolved as shift
WARNING: shift/reduce conflict for ILA in state 223 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 223 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 223 resolved as shift
WARNING: shift/reduce conflict for DIR in state 223 resolved as shift
WARNING: shift/reduce conflict for QRA in state 223 resolved as shift
WARNING: shift/reduce conflict for TOL in state 223 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 223 resolved as shift
WARNING: shift/reduce conflict for RED in state 223 resolved as shift
WARNING: shift/reduce conflict for [ in state 223 resolved as shift
WARNING: shift/reduce conflict for } in state 224 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 224 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 224 resolved as shift
WARNING: shift/reduce conflict for ID in state 224 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 224 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 224 resolved as shift
WARNING: shift/reduce conflict for ( in state 224 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 224 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 224 resolved as shift
WARNING: shift/reduce conflict for INT in state 224 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 224 resolved as shift
WARNING: shift/reduce conflict for STRING in state 224 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 224 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 224 resolved as shift
WARNING: shift/reduce conflict for WALO in state 224 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 224 resolved as shift
WARNING: shift/reduce conflict for ILA in state 224 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 224 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 224 resolved as shift
WARNING: shift/reduce conflict for DIR in state 224 resolved as shift
WARNING: shift/reduce conflict for QRA in state 224 resolved as shift
WARNING: shift/reduce conflict for TOL in state 224 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 224 resolved as shift
WARNING: shift/reduce conflict for RED in state 224 resolved as shift
WARNING: shift/reduce conflict for [ in state 224 resolved as shift
WARNING: shift/reduce conflict for } in state 225 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 225 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 225 resolved as shift
WARNING: shift/reduce conflict for ID in state 225 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 225 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 225 resolved as shift
WARNING: shift/reduce conflict for ( in state 225 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 225 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 225 resolved as shift
WARNING: shift/reduce conflict for INT in state 225 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 225 resolved as shift
WARNING: shift/reduce conflict for STRING in state 225 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 225 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 225 resolved as shift
WARNING: shift/reduce conflict for WALO in state 225 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 225 resolved as shift
WARNING: shift/reduce conflict for ILA in state 225 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 225 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 225 resolved as shift
WARNING: shift/reduce conflict for DIR in state 225 resolved as shift
WARNING: shift/reduce conflict for QRA in state 225 resolved as shift
WARNING: shift/reduce conflict for TOL in state 225 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 225 resolved as shift
WARNING: shift/reduce conflict for RED in state 225 resolved as shift
WARNING: shift/reduce conflict for [ in state 225 resolved as shift
WARNING: shift/reduce conflict for } in state 226 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 226 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 226 resolved as shift
WARNING: shift/reduce conflict for ID in state 226 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 226 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 226 resolved as shift
WARNING: shift/reduce conflict for ( in state 226 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 226 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 226 resolved as shift
WARNING: shift/reduce conflict for INT in state 226 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 226 resolved as shift
WARNING: shift/reduce conflict for STRING in state 226 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 226 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 226 resolved as shift
WARNING: shift/reduce conflict for WALO in state 226 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 226 resolved as shift
WARNING: shift/reduce conflict for ILA in state 226 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 226 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 226 resolved as shift
WARNING: shift/reduce conflict for DIR in state 226 resolved as shift
WARNING: shift/reduce conflict for QRA in state 226 resolved as shift
WARNING: shift/reduce conflict for TOL in state 226 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 226 resolved as shift
WARNING: shift/reduce conflict for RED in state 226 resolved as shift
WARNING: shift/reduce conflict for [ in state 226 resolved as shift
WARNING: shift/reduce conflict for } in state 227 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 227 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 227 resolved as shift
WARNING: shift/reduce conflict for ID in state 227 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 227 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 227 resolved as shift
WARNING: shift/reduce conflict for ( in state 227 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 227 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 227 resolved as shift
WARNING: shift/reduce conflict for INT in state 227 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 227 resolved as shift
WARNING: shift/reduce conflict for STRING in state 227 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 227 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 227 resolved as shift
WARNING: shift/reduce conflict for WALO in state 227 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 227 resolved as shift
WARNING: shift/reduce conflict for ILA in state 227 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 227 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 227 resolved as shift
WARNING: shift/reduce conflict for DIR in state 227 resolved as shift
WARNING: shift/reduce conflict for QRA in state 227 resolved as shift
WARNING: shift/reduce conflict for TOL in state 227 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 227 resolved as shift
WARNING: shift/reduce conflict for RED in state 227 resolved as shift
WARNING: shift/reduce conflict for [ in state 227 resolved as shift
WARNING: shift/reduce conflict for } in state 228 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 228 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 228 resolved as shift
WARNING: shift/reduce conflict for ID in state 228 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 228 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 228 resolved as shift
WARNING: shift/reduce conflict for ( in state 228 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 228 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 228 resolved as shift
WARNING: shift/reduce conflict for INT in state 228 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 228 resolved as shift
WARNING: shift/reduce conflict for STRING in state 228 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 228 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 228 resolved as shift
WARNING: shift/reduce conflict for WALO in state 228 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 228 resolved as shift
WARNING: shift/reduce conflict for ILA in state 228 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 228 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 228 resolved as shift
WARNING: shift/reduce conflict for DIR in state 228 resolved as shift
WARNING: shift/reduce conflict for QRA in state 228 resolved as shift
WARNING: shift/reduce conflict for TOL in state 228 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 228 resolved as shift
WARNING: shift/reduce conflict for RED in state 228 resolved as shift
WARNING: shift/reduce conflict for [ in state 228 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (program -> instruction_list)
WARNING: rejected rule (empty -> <empty>) in state 2
