Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    3AMM
    3AREF
    AKHIRAN
    B7AL
    DOUZ
    FI
    FTARED
    HUWA
    JEREB
    JIB
    KHREJ
    KMEL
    LAMBDA
    LKOLA
    M3A
    MACHIMA7ALI
    MAMTZAMENCH
    MASD9CH
    MEN
    MSE7
    NAW3
    RED
    RJE3
    SEMICOLON
    TELE3
    TSNA
    WLAILA
    machi

Grammar

Rule 0     S' -> darija
Rule 1     darija -> var_assign
Rule 2     darija -> printing
Rule 3     darija -> incrementation
Rule 4     darija -> decrementation
Rule 5     darija -> expression
Rule 6     darija -> if
Rule 7     darija -> while
Rule 8     darija -> empty
Rule 9     incrementation -> ID INCREMENTATION
Rule 10    decrementation -> ID DECREMENTATION
Rule 11    var_assign -> ID EQUALS expression
Rule 12    if -> ILA LPAREN condition RPAREN LBRACKET block RBRACKET
Rule 13    if -> ILA LPAREN condition RPAREN LBRACKET block RBRACKET WLA LBRACKET block RBRACKET
Rule 14    while -> MA7ED LPAREN condition RPAREN LBRACKET block RBRACKET
Rule 15    block -> var_assign
Rule 16    block -> printing
Rule 17    block -> incrementation
Rule 18    block -> decrementation
Rule 19    block -> expression
Rule 20    block -> if
Rule 21    block -> while
Rule 22    block -> empty
Rule 23    condition -> LPAREN condition RPAREN AW LPAREN condition RPAREN
Rule 24    condition -> LPAREN condition RPAREN WA LPAREN condition RPAREN
Rule 25    condition -> condition WA LPAREN condition RPAREN
Rule 26    condition -> condition AW LPAREN condition RPAREN
Rule 27    condition -> LPAREN condition RPAREN WA condition
Rule 28    condition -> LPAREN condition RPAREN AW condition
Rule 29    condition -> condition WA condition
Rule 30    condition -> condition AW condition
Rule 31    condition -> expression SUP expression
Rule 32    condition -> expression INF expression
Rule 33    condition -> expression EQUALSCOMP expression
Rule 34    condition -> expression SUPEQUALS expression
Rule 35    condition -> expression INFEQUALS expression
Rule 36    condition -> expression
Rule 37    expression -> expression PLUS expression
Rule 38    expression -> expression MINUS expression
Rule 39    expression -> expression TIMES expression
Rule 40    expression -> expression DIVIDE expression
Rule 41    expression -> LPAREN expression RPAREN
Rule 42    expression -> ID
Rule 43    expression -> INT
Rule 44    expression -> FLOAT
Rule 45    expression -> STRING
Rule 46    expression -> KHATE2
Rule 47    expression -> S7I7
Rule 48    expression -> WALO
Rule 49    printing -> KTEB LPAREN expression RPAREN
Rule 50    printing -> KTEB LPAREN incrementation RPAREN
Rule 51    printing -> KTEB LPAREN decrementation RPAREN
Rule 52    printing -> KTEB LPAREN condition RPAREN
Rule 53    empty -> <empty>

Terminals, with rules where they appear

3AMM                 : 
3AREF                : 
AKHIRAN              : 
AW                   : 23 26 28 30
B7AL                 : 
DECREMENTATION       : 10
DIVIDE               : 40
DOUZ                 : 
EQUALS               : 11
EQUALSCOMP           : 33
FI                   : 
FLOAT                : 44
FTARED               : 
HUWA                 : 
ID                   : 9 10 11 42
ILA                  : 12 13
INCREMENTATION       : 9
INF                  : 32
INFEQUALS            : 35
INT                  : 43
JEREB                : 
JIB                  : 
KHATE2               : 46
KHREJ                : 
KMEL                 : 
KTEB                 : 49 50 51 52
LAMBDA               : 
LBRACKET             : 12 13 13 14
LKOLA                : 
LPAREN               : 12 13 14 23 23 24 24 25 26 27 28 41 49 50 51 52
M3A                  : 
MA7ED                : 14
MACHIMA7ALI          : 
MAMTZAMENCH          : 
MASD9CH              : 
MEN                  : 
MINUS                : 38
MSE7                 : 
NAW3                 : 
PLUS                 : 37
RBRACKET             : 12 13 13 14
RED                  : 
RJE3                 : 
RPAREN               : 12 13 14 23 23 24 24 25 26 27 28 41 49 50 51 52
S7I7                 : 47
SEMICOLON            : 
STRING               : 45
SUP                  : 31
SUPEQUALS            : 34
TELE3                : 
TIMES                : 39
TSNA                 : 
WA                   : 24 25 27 29
WALO                 : 48
WLA                  : 13
WLAILA               : 
error                : 
machi                : 

Nonterminals, with rules where they appear

block                : 12 13 13 14
condition            : 12 13 14 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 52
darija               : 0
decrementation       : 4 18 51
empty                : 8 22
expression           : 5 11 19 31 31 32 32 33 33 34 34 35 35 36 37 37 38 38 39 39 40 40 41 49
if                   : 6 20
incrementation       : 3 17 50
printing             : 2 16
var_assign           : 1 15
while                : 7 21

Parsing method: LALR

state 0

    (0) S' -> . darija
    (1) darija -> . var_assign
    (2) darija -> . printing
    (3) darija -> . incrementation
    (4) darija -> . decrementation
    (5) darija -> . expression
    (6) darija -> . if
    (7) darija -> . while
    (8) darija -> . empty
    (11) var_assign -> . ID EQUALS expression
    (49) printing -> . KTEB LPAREN expression RPAREN
    (50) printing -> . KTEB LPAREN incrementation RPAREN
    (51) printing -> . KTEB LPAREN decrementation RPAREN
    (52) printing -> . KTEB LPAREN condition RPAREN
    (9) incrementation -> . ID INCREMENTATION
    (10) decrementation -> . ID DECREMENTATION
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO
    (12) if -> . ILA LPAREN condition RPAREN LBRACKET block RBRACKET
    (13) if -> . ILA LPAREN condition RPAREN LBRACKET block RBRACKET WLA LBRACKET block RBRACKET
    (14) while -> . MA7ED LPAREN condition RPAREN LBRACKET block RBRACKET
    (53) empty -> .

    ID              shift and go to state 10
    KTEB            shift and go to state 11
    LPAREN          shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18
    ILA             shift and go to state 19
    MA7ED           shift and go to state 20
    $end            reduce using rule 53 (empty -> .)

    darija                         shift and go to state 1
    var_assign                     shift and go to state 2
    printing                       shift and go to state 3
    incrementation                 shift and go to state 4
    decrementation                 shift and go to state 5
    expression                     shift and go to state 6
    if                             shift and go to state 7
    while                          shift and go to state 8
    empty                          shift and go to state 9

state 1

    (0) S' -> darija .



state 2

    (1) darija -> var_assign .

    $end            reduce using rule 1 (darija -> var_assign .)


state 3

    (2) darija -> printing .

    $end            reduce using rule 2 (darija -> printing .)


state 4

    (3) darija -> incrementation .

    $end            reduce using rule 3 (darija -> incrementation .)


state 5

    (4) darija -> decrementation .

    $end            reduce using rule 4 (darija -> decrementation .)


state 6

    (5) darija -> expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    $end            reduce using rule 5 (darija -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24


state 7

    (6) darija -> if .

    $end            reduce using rule 6 (darija -> if .)


state 8

    (7) darija -> while .

    $end            reduce using rule 7 (darija -> while .)


state 9

    (8) darija -> empty .

    $end            reduce using rule 8 (darija -> empty .)


state 10

    (11) var_assign -> ID . EQUALS expression
    (9) incrementation -> ID . INCREMENTATION
    (10) decrementation -> ID . DECREMENTATION
    (42) expression -> ID .

    EQUALS          shift and go to state 25
    INCREMENTATION  shift and go to state 26
    DECREMENTATION  shift and go to state 27
    PLUS            reduce using rule 42 (expression -> ID .)
    MINUS           reduce using rule 42 (expression -> ID .)
    TIMES           reduce using rule 42 (expression -> ID .)
    DIVIDE          reduce using rule 42 (expression -> ID .)
    $end            reduce using rule 42 (expression -> ID .)
    RBRACKET        reduce using rule 42 (expression -> ID .)


state 11

    (49) printing -> KTEB . LPAREN expression RPAREN
    (50) printing -> KTEB . LPAREN incrementation RPAREN
    (51) printing -> KTEB . LPAREN decrementation RPAREN
    (52) printing -> KTEB . LPAREN condition RPAREN

    LPAREN          shift and go to state 28


state 12

    (41) expression -> LPAREN . expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 12
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 29

state 13

    (43) expression -> INT .

    PLUS            reduce using rule 43 (expression -> INT .)
    MINUS           reduce using rule 43 (expression -> INT .)
    TIMES           reduce using rule 43 (expression -> INT .)
    DIVIDE          reduce using rule 43 (expression -> INT .)
    $end            reduce using rule 43 (expression -> INT .)
    RPAREN          reduce using rule 43 (expression -> INT .)
    RBRACKET        reduce using rule 43 (expression -> INT .)
    SUP             reduce using rule 43 (expression -> INT .)
    INF             reduce using rule 43 (expression -> INT .)
    EQUALSCOMP      reduce using rule 43 (expression -> INT .)
    SUPEQUALS       reduce using rule 43 (expression -> INT .)
    INFEQUALS       reduce using rule 43 (expression -> INT .)
    WA              reduce using rule 43 (expression -> INT .)
    AW              reduce using rule 43 (expression -> INT .)


state 14

    (44) expression -> FLOAT .

    PLUS            reduce using rule 44 (expression -> FLOAT .)
    MINUS           reduce using rule 44 (expression -> FLOAT .)
    TIMES           reduce using rule 44 (expression -> FLOAT .)
    DIVIDE          reduce using rule 44 (expression -> FLOAT .)
    $end            reduce using rule 44 (expression -> FLOAT .)
    RPAREN          reduce using rule 44 (expression -> FLOAT .)
    RBRACKET        reduce using rule 44 (expression -> FLOAT .)
    SUP             reduce using rule 44 (expression -> FLOAT .)
    INF             reduce using rule 44 (expression -> FLOAT .)
    EQUALSCOMP      reduce using rule 44 (expression -> FLOAT .)
    SUPEQUALS       reduce using rule 44 (expression -> FLOAT .)
    INFEQUALS       reduce using rule 44 (expression -> FLOAT .)
    WA              reduce using rule 44 (expression -> FLOAT .)
    AW              reduce using rule 44 (expression -> FLOAT .)


state 15

    (45) expression -> STRING .

    PLUS            reduce using rule 45 (expression -> STRING .)
    MINUS           reduce using rule 45 (expression -> STRING .)
    TIMES           reduce using rule 45 (expression -> STRING .)
    DIVIDE          reduce using rule 45 (expression -> STRING .)
    $end            reduce using rule 45 (expression -> STRING .)
    RPAREN          reduce using rule 45 (expression -> STRING .)
    RBRACKET        reduce using rule 45 (expression -> STRING .)
    SUP             reduce using rule 45 (expression -> STRING .)
    INF             reduce using rule 45 (expression -> STRING .)
    EQUALSCOMP      reduce using rule 45 (expression -> STRING .)
    SUPEQUALS       reduce using rule 45 (expression -> STRING .)
    INFEQUALS       reduce using rule 45 (expression -> STRING .)
    WA              reduce using rule 45 (expression -> STRING .)
    AW              reduce using rule 45 (expression -> STRING .)


state 16

    (46) expression -> KHATE2 .

    PLUS            reduce using rule 46 (expression -> KHATE2 .)
    MINUS           reduce using rule 46 (expression -> KHATE2 .)
    TIMES           reduce using rule 46 (expression -> KHATE2 .)
    DIVIDE          reduce using rule 46 (expression -> KHATE2 .)
    $end            reduce using rule 46 (expression -> KHATE2 .)
    RPAREN          reduce using rule 46 (expression -> KHATE2 .)
    RBRACKET        reduce using rule 46 (expression -> KHATE2 .)
    SUP             reduce using rule 46 (expression -> KHATE2 .)
    INF             reduce using rule 46 (expression -> KHATE2 .)
    EQUALSCOMP      reduce using rule 46 (expression -> KHATE2 .)
    SUPEQUALS       reduce using rule 46 (expression -> KHATE2 .)
    INFEQUALS       reduce using rule 46 (expression -> KHATE2 .)
    WA              reduce using rule 46 (expression -> KHATE2 .)
    AW              reduce using rule 46 (expression -> KHATE2 .)


state 17

    (47) expression -> S7I7 .

    PLUS            reduce using rule 47 (expression -> S7I7 .)
    MINUS           reduce using rule 47 (expression -> S7I7 .)
    TIMES           reduce using rule 47 (expression -> S7I7 .)
    DIVIDE          reduce using rule 47 (expression -> S7I7 .)
    $end            reduce using rule 47 (expression -> S7I7 .)
    RPAREN          reduce using rule 47 (expression -> S7I7 .)
    RBRACKET        reduce using rule 47 (expression -> S7I7 .)
    SUP             reduce using rule 47 (expression -> S7I7 .)
    INF             reduce using rule 47 (expression -> S7I7 .)
    EQUALSCOMP      reduce using rule 47 (expression -> S7I7 .)
    SUPEQUALS       reduce using rule 47 (expression -> S7I7 .)
    INFEQUALS       reduce using rule 47 (expression -> S7I7 .)
    WA              reduce using rule 47 (expression -> S7I7 .)
    AW              reduce using rule 47 (expression -> S7I7 .)


state 18

    (48) expression -> WALO .

    PLUS            reduce using rule 48 (expression -> WALO .)
    MINUS           reduce using rule 48 (expression -> WALO .)
    TIMES           reduce using rule 48 (expression -> WALO .)
    DIVIDE          reduce using rule 48 (expression -> WALO .)
    $end            reduce using rule 48 (expression -> WALO .)
    RPAREN          reduce using rule 48 (expression -> WALO .)
    RBRACKET        reduce using rule 48 (expression -> WALO .)
    SUP             reduce using rule 48 (expression -> WALO .)
    INF             reduce using rule 48 (expression -> WALO .)
    EQUALSCOMP      reduce using rule 48 (expression -> WALO .)
    SUPEQUALS       reduce using rule 48 (expression -> WALO .)
    INFEQUALS       reduce using rule 48 (expression -> WALO .)
    WA              reduce using rule 48 (expression -> WALO .)
    AW              reduce using rule 48 (expression -> WALO .)


state 19

    (12) if -> ILA . LPAREN condition RPAREN LBRACKET block RBRACKET
    (13) if -> ILA . LPAREN condition RPAREN LBRACKET block RBRACKET WLA LBRACKET block RBRACKET

    LPAREN          shift and go to state 31


state 20

    (14) while -> MA7ED . LPAREN condition RPAREN LBRACKET block RBRACKET

    LPAREN          shift and go to state 32


state 21

    (37) expression -> expression PLUS . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 12
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 33

state 22

    (38) expression -> expression MINUS . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 12
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 34

state 23

    (39) expression -> expression TIMES . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 12
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 35

state 24

    (40) expression -> expression DIVIDE . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 12
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 36

state 25

    (11) var_assign -> ID EQUALS . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 12
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 37

state 26

    (9) incrementation -> ID INCREMENTATION .

    $end            reduce using rule 9 (incrementation -> ID INCREMENTATION .)
    RPAREN          reduce using rule 9 (incrementation -> ID INCREMENTATION .)
    RBRACKET        reduce using rule 9 (incrementation -> ID INCREMENTATION .)


state 27

    (10) decrementation -> ID DECREMENTATION .

    $end            reduce using rule 10 (decrementation -> ID DECREMENTATION .)
    RPAREN          reduce using rule 10 (decrementation -> ID DECREMENTATION .)
    RBRACKET        reduce using rule 10 (decrementation -> ID DECREMENTATION .)


state 28

    (49) printing -> KTEB LPAREN . expression RPAREN
    (50) printing -> KTEB LPAREN . incrementation RPAREN
    (51) printing -> KTEB LPAREN . decrementation RPAREN
    (52) printing -> KTEB LPAREN . condition RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO
    (9) incrementation -> . ID INCREMENTATION
    (10) decrementation -> . ID DECREMENTATION
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression

    LPAREN          shift and go to state 38
    ID              shift and go to state 43
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 39
    incrementation                 shift and go to state 40
    decrementation                 shift and go to state 41
    condition                      shift and go to state 42

state 29

    (41) expression -> LPAREN expression . RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 44
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24


state 30

    (42) expression -> ID .

    RPAREN          reduce using rule 42 (expression -> ID .)
    PLUS            reduce using rule 42 (expression -> ID .)
    MINUS           reduce using rule 42 (expression -> ID .)
    TIMES           reduce using rule 42 (expression -> ID .)
    DIVIDE          reduce using rule 42 (expression -> ID .)
    $end            reduce using rule 42 (expression -> ID .)
    RBRACKET        reduce using rule 42 (expression -> ID .)
    SUP             reduce using rule 42 (expression -> ID .)
    INF             reduce using rule 42 (expression -> ID .)
    EQUALSCOMP      reduce using rule 42 (expression -> ID .)
    SUPEQUALS       reduce using rule 42 (expression -> ID .)
    INFEQUALS       reduce using rule 42 (expression -> ID .)
    WA              reduce using rule 42 (expression -> ID .)
    AW              reduce using rule 42 (expression -> ID .)


state 31

    (12) if -> ILA LPAREN . condition RPAREN LBRACKET block RBRACKET
    (13) if -> ILA LPAREN . condition RPAREN LBRACKET block RBRACKET WLA LBRACKET block RBRACKET
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 45
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    condition                      shift and go to state 46
    expression                     shift and go to state 47

state 32

    (14) while -> MA7ED LPAREN . condition RPAREN LBRACKET block RBRACKET
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 45
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    condition                      shift and go to state 48
    expression                     shift and go to state 47

state 33

    (37) expression -> expression PLUS expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 37 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 37 (expression -> expression PLUS expression .)
    $end            reduce using rule 37 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 37 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 37 (expression -> expression PLUS expression .)
    SUP             reduce using rule 37 (expression -> expression PLUS expression .)
    INF             reduce using rule 37 (expression -> expression PLUS expression .)
    EQUALSCOMP      reduce using rule 37 (expression -> expression PLUS expression .)
    SUPEQUALS       reduce using rule 37 (expression -> expression PLUS expression .)
    INFEQUALS       reduce using rule 37 (expression -> expression PLUS expression .)
    WA              reduce using rule 37 (expression -> expression PLUS expression .)
    AW              reduce using rule 37 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24

  ! TIMES           [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]


state 34

    (38) expression -> expression MINUS expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 38 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 38 (expression -> expression MINUS expression .)
    $end            reduce using rule 38 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 38 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 38 (expression -> expression MINUS expression .)
    SUP             reduce using rule 38 (expression -> expression MINUS expression .)
    INF             reduce using rule 38 (expression -> expression MINUS expression .)
    EQUALSCOMP      reduce using rule 38 (expression -> expression MINUS expression .)
    SUPEQUALS       reduce using rule 38 (expression -> expression MINUS expression .)
    INFEQUALS       reduce using rule 38 (expression -> expression MINUS expression .)
    WA              reduce using rule 38 (expression -> expression MINUS expression .)
    AW              reduce using rule 38 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24

  ! TIMES           [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]


state 35

    (39) expression -> expression TIMES expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 39 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 39 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 39 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 39 (expression -> expression TIMES expression .)
    $end            reduce using rule 39 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 39 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 39 (expression -> expression TIMES expression .)
    SUP             reduce using rule 39 (expression -> expression TIMES expression .)
    INF             reduce using rule 39 (expression -> expression TIMES expression .)
    EQUALSCOMP      reduce using rule 39 (expression -> expression TIMES expression .)
    SUPEQUALS       reduce using rule 39 (expression -> expression TIMES expression .)
    INFEQUALS       reduce using rule 39 (expression -> expression TIMES expression .)
    WA              reduce using rule 39 (expression -> expression TIMES expression .)
    AW              reduce using rule 39 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! TIMES           [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 24 ]


state 36

    (40) expression -> expression DIVIDE expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 40 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 40 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 40 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 40 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 40 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 40 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 40 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 40 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 40 (expression -> expression DIVIDE expression .)
    EQUALSCOMP      reduce using rule 40 (expression -> expression DIVIDE expression .)
    SUPEQUALS       reduce using rule 40 (expression -> expression DIVIDE expression .)
    INFEQUALS       reduce using rule 40 (expression -> expression DIVIDE expression .)
    WA              reduce using rule 40 (expression -> expression DIVIDE expression .)
    AW              reduce using rule 40 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! TIMES           [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 24 ]


state 37

    (11) var_assign -> ID EQUALS expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    $end            reduce using rule 11 (var_assign -> ID EQUALS expression .)
    RBRACKET        reduce using rule 11 (var_assign -> ID EQUALS expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24


state 38

    (41) expression -> LPAREN . expression RPAREN
    (23) condition -> LPAREN . condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> LPAREN . condition RPAREN WA LPAREN condition RPAREN
    (27) condition -> LPAREN . condition RPAREN WA condition
    (28) condition -> LPAREN . condition RPAREN AW condition
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression

    LPAREN          shift and go to state 38
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 49
    condition                      shift and go to state 50

state 39

    (49) printing -> KTEB LPAREN expression . RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (31) condition -> expression . SUP expression
    (32) condition -> expression . INF expression
    (33) condition -> expression . EQUALSCOMP expression
    (34) condition -> expression . SUPEQUALS expression
    (35) condition -> expression . INFEQUALS expression
    (36) condition -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 51
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    SUP             shift and go to state 52
    INF             shift and go to state 53
    EQUALSCOMP      shift and go to state 54
    SUPEQUALS       shift and go to state 55
    INFEQUALS       shift and go to state 56
    WA              reduce using rule 36 (condition -> expression .)
    AW              reduce using rule 36 (condition -> expression .)

  ! RPAREN          [ reduce using rule 36 (condition -> expression .) ]


state 40

    (50) printing -> KTEB LPAREN incrementation . RPAREN

    RPAREN          shift and go to state 57


state 41

    (51) printing -> KTEB LPAREN decrementation . RPAREN

    RPAREN          shift and go to state 58


state 42

    (52) printing -> KTEB LPAREN condition . RPAREN
    (25) condition -> condition . WA LPAREN condition RPAREN
    (26) condition -> condition . AW LPAREN condition RPAREN
    (29) condition -> condition . WA condition
    (30) condition -> condition . AW condition

    RPAREN          shift and go to state 59
    WA              shift and go to state 60
    AW              shift and go to state 61


state 43

    (42) expression -> ID .
    (9) incrementation -> ID . INCREMENTATION
    (10) decrementation -> ID . DECREMENTATION

    RPAREN          reduce using rule 42 (expression -> ID .)
    PLUS            reduce using rule 42 (expression -> ID .)
    MINUS           reduce using rule 42 (expression -> ID .)
    TIMES           reduce using rule 42 (expression -> ID .)
    DIVIDE          reduce using rule 42 (expression -> ID .)
    SUP             reduce using rule 42 (expression -> ID .)
    INF             reduce using rule 42 (expression -> ID .)
    EQUALSCOMP      reduce using rule 42 (expression -> ID .)
    SUPEQUALS       reduce using rule 42 (expression -> ID .)
    INFEQUALS       reduce using rule 42 (expression -> ID .)
    WA              reduce using rule 42 (expression -> ID .)
    AW              reduce using rule 42 (expression -> ID .)
    INCREMENTATION  shift and go to state 26
    DECREMENTATION  shift and go to state 27


state 44

    (41) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    INF             reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    EQUALSCOMP      reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    SUPEQUALS       reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    INFEQUALS       reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    WA              reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    AW              reduce using rule 41 (expression -> LPAREN expression RPAREN .)


state 45

    (23) condition -> LPAREN . condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> LPAREN . condition RPAREN WA LPAREN condition RPAREN
    (27) condition -> LPAREN . condition RPAREN WA condition
    (28) condition -> LPAREN . condition RPAREN AW condition
    (41) expression -> LPAREN . expression RPAREN
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 45
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    condition                      shift and go to state 50
    expression                     shift and go to state 62

state 46

    (12) if -> ILA LPAREN condition . RPAREN LBRACKET block RBRACKET
    (13) if -> ILA LPAREN condition . RPAREN LBRACKET block RBRACKET WLA LBRACKET block RBRACKET
    (25) condition -> condition . WA LPAREN condition RPAREN
    (26) condition -> condition . AW LPAREN condition RPAREN
    (29) condition -> condition . WA condition
    (30) condition -> condition . AW condition

    RPAREN          shift and go to state 63
    WA              shift and go to state 60
    AW              shift and go to state 61


state 47

    (31) condition -> expression . SUP expression
    (32) condition -> expression . INF expression
    (33) condition -> expression . EQUALSCOMP expression
    (34) condition -> expression . SUPEQUALS expression
    (35) condition -> expression . INFEQUALS expression
    (36) condition -> expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    SUP             shift and go to state 52
    INF             shift and go to state 53
    EQUALSCOMP      shift and go to state 54
    SUPEQUALS       shift and go to state 55
    INFEQUALS       shift and go to state 56
    RPAREN          reduce using rule 36 (condition -> expression .)
    WA              reduce using rule 36 (condition -> expression .)
    AW              reduce using rule 36 (condition -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24


state 48

    (14) while -> MA7ED LPAREN condition . RPAREN LBRACKET block RBRACKET
    (25) condition -> condition . WA LPAREN condition RPAREN
    (26) condition -> condition . AW LPAREN condition RPAREN
    (29) condition -> condition . WA condition
    (30) condition -> condition . AW condition

    RPAREN          shift and go to state 64
    WA              shift and go to state 60
    AW              shift and go to state 61


state 49

    (41) expression -> LPAREN expression . RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (31) condition -> expression . SUP expression
    (32) condition -> expression . INF expression
    (33) condition -> expression . EQUALSCOMP expression
    (34) condition -> expression . SUPEQUALS expression
    (35) condition -> expression . INFEQUALS expression
    (36) condition -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 44
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    SUP             shift and go to state 52
    INF             shift and go to state 53
    EQUALSCOMP      shift and go to state 54
    SUPEQUALS       shift and go to state 55
    INFEQUALS       shift and go to state 56
    WA              reduce using rule 36 (condition -> expression .)
    AW              reduce using rule 36 (condition -> expression .)

  ! RPAREN          [ reduce using rule 36 (condition -> expression .) ]


state 50

    (23) condition -> LPAREN condition . RPAREN AW LPAREN condition RPAREN
    (24) condition -> LPAREN condition . RPAREN WA LPAREN condition RPAREN
    (27) condition -> LPAREN condition . RPAREN WA condition
    (28) condition -> LPAREN condition . RPAREN AW condition
    (25) condition -> condition . WA LPAREN condition RPAREN
    (26) condition -> condition . AW LPAREN condition RPAREN
    (29) condition -> condition . WA condition
    (30) condition -> condition . AW condition

    RPAREN          shift and go to state 65
    WA              shift and go to state 60
    AW              shift and go to state 61


state 51

    (49) printing -> KTEB LPAREN expression RPAREN .

    $end            reduce using rule 49 (printing -> KTEB LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 49 (printing -> KTEB LPAREN expression RPAREN .)


state 52

    (31) condition -> expression SUP . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 12
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 66

state 53

    (32) condition -> expression INF . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 12
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 67

state 54

    (33) condition -> expression EQUALSCOMP . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 12
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 68

state 55

    (34) condition -> expression SUPEQUALS . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 12
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 69

state 56

    (35) condition -> expression INFEQUALS . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 12
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    expression                     shift and go to state 70

state 57

    (50) printing -> KTEB LPAREN incrementation RPAREN .

    $end            reduce using rule 50 (printing -> KTEB LPAREN incrementation RPAREN .)
    RBRACKET        reduce using rule 50 (printing -> KTEB LPAREN incrementation RPAREN .)


state 58

    (51) printing -> KTEB LPAREN decrementation RPAREN .

    $end            reduce using rule 51 (printing -> KTEB LPAREN decrementation RPAREN .)
    RBRACKET        reduce using rule 51 (printing -> KTEB LPAREN decrementation RPAREN .)


state 59

    (52) printing -> KTEB LPAREN condition RPAREN .

    $end            reduce using rule 52 (printing -> KTEB LPAREN condition RPAREN .)
    RBRACKET        reduce using rule 52 (printing -> KTEB LPAREN condition RPAREN .)


state 60

    (25) condition -> condition WA . LPAREN condition RPAREN
    (29) condition -> condition WA . condition
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 72
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    condition                      shift and go to state 71
    expression                     shift and go to state 47

state 61

    (26) condition -> condition AW . LPAREN condition RPAREN
    (30) condition -> condition AW . condition
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 74
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    condition                      shift and go to state 73
    expression                     shift and go to state 47

state 62

    (41) expression -> LPAREN expression . RPAREN
    (31) condition -> expression . SUP expression
    (32) condition -> expression . INF expression
    (33) condition -> expression . EQUALSCOMP expression
    (34) condition -> expression . SUPEQUALS expression
    (35) condition -> expression . INFEQUALS expression
    (36) condition -> expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 44
    SUP             shift and go to state 52
    INF             shift and go to state 53
    EQUALSCOMP      shift and go to state 54
    SUPEQUALS       shift and go to state 55
    INFEQUALS       shift and go to state 56
    WA              reduce using rule 36 (condition -> expression .)
    AW              reduce using rule 36 (condition -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24

  ! RPAREN          [ reduce using rule 36 (condition -> expression .) ]


state 63

    (12) if -> ILA LPAREN condition RPAREN . LBRACKET block RBRACKET
    (13) if -> ILA LPAREN condition RPAREN . LBRACKET block RBRACKET WLA LBRACKET block RBRACKET

    LBRACKET        shift and go to state 75


state 64

    (14) while -> MA7ED LPAREN condition RPAREN . LBRACKET block RBRACKET

    LBRACKET        shift and go to state 76


state 65

    (23) condition -> LPAREN condition RPAREN . AW LPAREN condition RPAREN
    (24) condition -> LPAREN condition RPAREN . WA LPAREN condition RPAREN
    (27) condition -> LPAREN condition RPAREN . WA condition
    (28) condition -> LPAREN condition RPAREN . AW condition

    AW              shift and go to state 77
    WA              shift and go to state 78


state 66

    (31) condition -> expression SUP expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 31 (condition -> expression SUP expression .)
    WA              reduce using rule 31 (condition -> expression SUP expression .)
    AW              reduce using rule 31 (condition -> expression SUP expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24


state 67

    (32) condition -> expression INF expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 32 (condition -> expression INF expression .)
    WA              reduce using rule 32 (condition -> expression INF expression .)
    AW              reduce using rule 32 (condition -> expression INF expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24


state 68

    (33) condition -> expression EQUALSCOMP expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 33 (condition -> expression EQUALSCOMP expression .)
    WA              reduce using rule 33 (condition -> expression EQUALSCOMP expression .)
    AW              reduce using rule 33 (condition -> expression EQUALSCOMP expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24


state 69

    (34) condition -> expression SUPEQUALS expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 34 (condition -> expression SUPEQUALS expression .)
    WA              reduce using rule 34 (condition -> expression SUPEQUALS expression .)
    AW              reduce using rule 34 (condition -> expression SUPEQUALS expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24


state 70

    (35) condition -> expression INFEQUALS expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 35 (condition -> expression INFEQUALS expression .)
    WA              reduce using rule 35 (condition -> expression INFEQUALS expression .)
    AW              reduce using rule 35 (condition -> expression INFEQUALS expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24


state 71

    (29) condition -> condition WA condition .
    (25) condition -> condition . WA LPAREN condition RPAREN
    (26) condition -> condition . AW LPAREN condition RPAREN
    (29) condition -> condition . WA condition
    (30) condition -> condition . AW condition

    RPAREN          reduce using rule 29 (condition -> condition WA condition .)
    WA              reduce using rule 29 (condition -> condition WA condition .)
    AW              reduce using rule 29 (condition -> condition WA condition .)

  ! WA              [ shift and go to state 60 ]
  ! AW              [ shift and go to state 61 ]


state 72

    (25) condition -> condition WA LPAREN . condition RPAREN
    (23) condition -> LPAREN . condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> LPAREN . condition RPAREN WA LPAREN condition RPAREN
    (27) condition -> LPAREN . condition RPAREN WA condition
    (28) condition -> LPAREN . condition RPAREN AW condition
    (41) expression -> LPAREN . expression RPAREN
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 45
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    condition                      shift and go to state 79
    expression                     shift and go to state 62

state 73

    (30) condition -> condition AW condition .
    (25) condition -> condition . WA LPAREN condition RPAREN
    (26) condition -> condition . AW LPAREN condition RPAREN
    (29) condition -> condition . WA condition
    (30) condition -> condition . AW condition

    RPAREN          reduce using rule 30 (condition -> condition AW condition .)
    WA              reduce using rule 30 (condition -> condition AW condition .)
    AW              reduce using rule 30 (condition -> condition AW condition .)

  ! WA              [ shift and go to state 60 ]
  ! AW              [ shift and go to state 61 ]


state 74

    (26) condition -> condition AW LPAREN . condition RPAREN
    (23) condition -> LPAREN . condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> LPAREN . condition RPAREN WA LPAREN condition RPAREN
    (27) condition -> LPAREN . condition RPAREN WA condition
    (28) condition -> LPAREN . condition RPAREN AW condition
    (41) expression -> LPAREN . expression RPAREN
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 45
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    condition                      shift and go to state 80
    expression                     shift and go to state 62

state 75

    (12) if -> ILA LPAREN condition RPAREN LBRACKET . block RBRACKET
    (13) if -> ILA LPAREN condition RPAREN LBRACKET . block RBRACKET WLA LBRACKET block RBRACKET
    (15) block -> . var_assign
    (16) block -> . printing
    (17) block -> . incrementation
    (18) block -> . decrementation
    (19) block -> . expression
    (20) block -> . if
    (21) block -> . while
    (22) block -> . empty
    (11) var_assign -> . ID EQUALS expression
    (49) printing -> . KTEB LPAREN expression RPAREN
    (50) printing -> . KTEB LPAREN incrementation RPAREN
    (51) printing -> . KTEB LPAREN decrementation RPAREN
    (52) printing -> . KTEB LPAREN condition RPAREN
    (9) incrementation -> . ID INCREMENTATION
    (10) decrementation -> . ID DECREMENTATION
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO
    (12) if -> . ILA LPAREN condition RPAREN LBRACKET block RBRACKET
    (13) if -> . ILA LPAREN condition RPAREN LBRACKET block RBRACKET WLA LBRACKET block RBRACKET
    (14) while -> . MA7ED LPAREN condition RPAREN LBRACKET block RBRACKET
    (53) empty -> .

    ID              shift and go to state 10
    KTEB            shift and go to state 11
    LPAREN          shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18
    ILA             shift and go to state 19
    MA7ED           shift and go to state 20
    RBRACKET        reduce using rule 53 (empty -> .)

    block                          shift and go to state 81
    var_assign                     shift and go to state 82
    printing                       shift and go to state 83
    incrementation                 shift and go to state 84
    decrementation                 shift and go to state 85
    expression                     shift and go to state 86
    if                             shift and go to state 87
    while                          shift and go to state 88
    empty                          shift and go to state 89

state 76

    (14) while -> MA7ED LPAREN condition RPAREN LBRACKET . block RBRACKET
    (15) block -> . var_assign
    (16) block -> . printing
    (17) block -> . incrementation
    (18) block -> . decrementation
    (19) block -> . expression
    (20) block -> . if
    (21) block -> . while
    (22) block -> . empty
    (11) var_assign -> . ID EQUALS expression
    (49) printing -> . KTEB LPAREN expression RPAREN
    (50) printing -> . KTEB LPAREN incrementation RPAREN
    (51) printing -> . KTEB LPAREN decrementation RPAREN
    (52) printing -> . KTEB LPAREN condition RPAREN
    (9) incrementation -> . ID INCREMENTATION
    (10) decrementation -> . ID DECREMENTATION
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO
    (12) if -> . ILA LPAREN condition RPAREN LBRACKET block RBRACKET
    (13) if -> . ILA LPAREN condition RPAREN LBRACKET block RBRACKET WLA LBRACKET block RBRACKET
    (14) while -> . MA7ED LPAREN condition RPAREN LBRACKET block RBRACKET
    (53) empty -> .

    ID              shift and go to state 10
    KTEB            shift and go to state 11
    LPAREN          shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18
    ILA             shift and go to state 19
    MA7ED           shift and go to state 20
    RBRACKET        reduce using rule 53 (empty -> .)

    block                          shift and go to state 90
    var_assign                     shift and go to state 82
    printing                       shift and go to state 83
    incrementation                 shift and go to state 84
    decrementation                 shift and go to state 85
    expression                     shift and go to state 86
    if                             shift and go to state 87
    while                          shift and go to state 88
    empty                          shift and go to state 89

state 77

    (23) condition -> LPAREN condition RPAREN AW . LPAREN condition RPAREN
    (28) condition -> LPAREN condition RPAREN AW . condition
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 91
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    condition                      shift and go to state 92
    expression                     shift and go to state 47

state 78

    (24) condition -> LPAREN condition RPAREN WA . LPAREN condition RPAREN
    (27) condition -> LPAREN condition RPAREN WA . condition
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 93
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    condition                      shift and go to state 94
    expression                     shift and go to state 47

state 79

    (25) condition -> condition WA LPAREN condition . RPAREN
    (23) condition -> LPAREN condition . RPAREN AW LPAREN condition RPAREN
    (24) condition -> LPAREN condition . RPAREN WA LPAREN condition RPAREN
    (27) condition -> LPAREN condition . RPAREN WA condition
    (28) condition -> LPAREN condition . RPAREN AW condition
    (25) condition -> condition . WA LPAREN condition RPAREN
    (26) condition -> condition . AW LPAREN condition RPAREN
    (29) condition -> condition . WA condition
    (30) condition -> condition . AW condition

    RPAREN          shift and go to state 95
    WA              shift and go to state 60
    AW              shift and go to state 61


state 80

    (26) condition -> condition AW LPAREN condition . RPAREN
    (23) condition -> LPAREN condition . RPAREN AW LPAREN condition RPAREN
    (24) condition -> LPAREN condition . RPAREN WA LPAREN condition RPAREN
    (27) condition -> LPAREN condition . RPAREN WA condition
    (28) condition -> LPAREN condition . RPAREN AW condition
    (25) condition -> condition . WA LPAREN condition RPAREN
    (26) condition -> condition . AW LPAREN condition RPAREN
    (29) condition -> condition . WA condition
    (30) condition -> condition . AW condition

    RPAREN          shift and go to state 96
    WA              shift and go to state 60
    AW              shift and go to state 61


state 81

    (12) if -> ILA LPAREN condition RPAREN LBRACKET block . RBRACKET
    (13) if -> ILA LPAREN condition RPAREN LBRACKET block . RBRACKET WLA LBRACKET block RBRACKET

    RBRACKET        shift and go to state 97


state 82

    (15) block -> var_assign .

    RBRACKET        reduce using rule 15 (block -> var_assign .)


state 83

    (16) block -> printing .

    RBRACKET        reduce using rule 16 (block -> printing .)


state 84

    (17) block -> incrementation .

    RBRACKET        reduce using rule 17 (block -> incrementation .)


state 85

    (18) block -> decrementation .

    RBRACKET        reduce using rule 18 (block -> decrementation .)


state 86

    (19) block -> expression .
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression

    RBRACKET        reduce using rule 19 (block -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24


state 87

    (20) block -> if .

    RBRACKET        reduce using rule 20 (block -> if .)


state 88

    (21) block -> while .

    RBRACKET        reduce using rule 21 (block -> while .)


state 89

    (22) block -> empty .

    RBRACKET        reduce using rule 22 (block -> empty .)


state 90

    (14) while -> MA7ED LPAREN condition RPAREN LBRACKET block . RBRACKET

    RBRACKET        shift and go to state 98


state 91

    (23) condition -> LPAREN condition RPAREN AW LPAREN . condition RPAREN
    (23) condition -> LPAREN . condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> LPAREN . condition RPAREN WA LPAREN condition RPAREN
    (27) condition -> LPAREN . condition RPAREN WA condition
    (28) condition -> LPAREN . condition RPAREN AW condition
    (41) expression -> LPAREN . expression RPAREN
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 45
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    condition                      shift and go to state 99
    expression                     shift and go to state 62

state 92

    (28) condition -> LPAREN condition RPAREN AW condition .
    (25) condition -> condition . WA LPAREN condition RPAREN
    (26) condition -> condition . AW LPAREN condition RPAREN
    (29) condition -> condition . WA condition
    (30) condition -> condition . AW condition

    RPAREN          reduce using rule 28 (condition -> LPAREN condition RPAREN AW condition .)
    WA              reduce using rule 28 (condition -> LPAREN condition RPAREN AW condition .)
    AW              reduce using rule 28 (condition -> LPAREN condition RPAREN AW condition .)

  ! WA              [ shift and go to state 60 ]
  ! AW              [ shift and go to state 61 ]


state 93

    (24) condition -> LPAREN condition RPAREN WA LPAREN . condition RPAREN
    (23) condition -> LPAREN . condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> LPAREN . condition RPAREN WA LPAREN condition RPAREN
    (27) condition -> LPAREN . condition RPAREN WA condition
    (28) condition -> LPAREN . condition RPAREN AW condition
    (41) expression -> LPAREN . expression RPAREN
    (23) condition -> . LPAREN condition RPAREN AW LPAREN condition RPAREN
    (24) condition -> . LPAREN condition RPAREN WA LPAREN condition RPAREN
    (25) condition -> . condition WA LPAREN condition RPAREN
    (26) condition -> . condition AW LPAREN condition RPAREN
    (27) condition -> . LPAREN condition RPAREN WA condition
    (28) condition -> . LPAREN condition RPAREN AW condition
    (29) condition -> . condition WA condition
    (30) condition -> . condition AW condition
    (31) condition -> . expression SUP expression
    (32) condition -> . expression INF expression
    (33) condition -> . expression EQUALSCOMP expression
    (34) condition -> . expression SUPEQUALS expression
    (35) condition -> . expression INFEQUALS expression
    (36) condition -> . expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO

    LPAREN          shift and go to state 45
    ID              shift and go to state 30
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18

    condition                      shift and go to state 100
    expression                     shift and go to state 62

state 94

    (27) condition -> LPAREN condition RPAREN WA condition .
    (25) condition -> condition . WA LPAREN condition RPAREN
    (26) condition -> condition . AW LPAREN condition RPAREN
    (29) condition -> condition . WA condition
    (30) condition -> condition . AW condition

    RPAREN          reduce using rule 27 (condition -> LPAREN condition RPAREN WA condition .)
    WA              reduce using rule 27 (condition -> LPAREN condition RPAREN WA condition .)
    AW              reduce using rule 27 (condition -> LPAREN condition RPAREN WA condition .)

  ! WA              [ shift and go to state 60 ]
  ! AW              [ shift and go to state 61 ]


state 95

    (25) condition -> condition WA LPAREN condition RPAREN .
    (23) condition -> LPAREN condition RPAREN . AW LPAREN condition RPAREN
    (24) condition -> LPAREN condition RPAREN . WA LPAREN condition RPAREN
    (27) condition -> LPAREN condition RPAREN . WA condition
    (28) condition -> LPAREN condition RPAREN . AW condition

    RPAREN          reduce using rule 25 (condition -> condition WA LPAREN condition RPAREN .)
    WA              reduce using rule 25 (condition -> condition WA LPAREN condition RPAREN .)
    AW              reduce using rule 25 (condition -> condition WA LPAREN condition RPAREN .)

  ! AW              [ shift and go to state 77 ]
  ! WA              [ shift and go to state 78 ]


state 96

    (26) condition -> condition AW LPAREN condition RPAREN .
    (23) condition -> LPAREN condition RPAREN . AW LPAREN condition RPAREN
    (24) condition -> LPAREN condition RPAREN . WA LPAREN condition RPAREN
    (27) condition -> LPAREN condition RPAREN . WA condition
    (28) condition -> LPAREN condition RPAREN . AW condition

    RPAREN          reduce using rule 26 (condition -> condition AW LPAREN condition RPAREN .)
    WA              reduce using rule 26 (condition -> condition AW LPAREN condition RPAREN .)
    AW              reduce using rule 26 (condition -> condition AW LPAREN condition RPAREN .)

  ! AW              [ shift and go to state 77 ]
  ! WA              [ shift and go to state 78 ]


state 97

    (12) if -> ILA LPAREN condition RPAREN LBRACKET block RBRACKET .
    (13) if -> ILA LPAREN condition RPAREN LBRACKET block RBRACKET . WLA LBRACKET block RBRACKET

    $end            reduce using rule 12 (if -> ILA LPAREN condition RPAREN LBRACKET block RBRACKET .)
    RBRACKET        reduce using rule 12 (if -> ILA LPAREN condition RPAREN LBRACKET block RBRACKET .)
    WLA             shift and go to state 101


state 98

    (14) while -> MA7ED LPAREN condition RPAREN LBRACKET block RBRACKET .

    $end            reduce using rule 14 (while -> MA7ED LPAREN condition RPAREN LBRACKET block RBRACKET .)
    RBRACKET        reduce using rule 14 (while -> MA7ED LPAREN condition RPAREN LBRACKET block RBRACKET .)


state 99

    (23) condition -> LPAREN condition RPAREN AW LPAREN condition . RPAREN
    (23) condition -> LPAREN condition . RPAREN AW LPAREN condition RPAREN
    (24) condition -> LPAREN condition . RPAREN WA LPAREN condition RPAREN
    (27) condition -> LPAREN condition . RPAREN WA condition
    (28) condition -> LPAREN condition . RPAREN AW condition
    (25) condition -> condition . WA LPAREN condition RPAREN
    (26) condition -> condition . AW LPAREN condition RPAREN
    (29) condition -> condition . WA condition
    (30) condition -> condition . AW condition

    RPAREN          shift and go to state 102
    WA              shift and go to state 60
    AW              shift and go to state 61


state 100

    (24) condition -> LPAREN condition RPAREN WA LPAREN condition . RPAREN
    (23) condition -> LPAREN condition . RPAREN AW LPAREN condition RPAREN
    (24) condition -> LPAREN condition . RPAREN WA LPAREN condition RPAREN
    (27) condition -> LPAREN condition . RPAREN WA condition
    (28) condition -> LPAREN condition . RPAREN AW condition
    (25) condition -> condition . WA LPAREN condition RPAREN
    (26) condition -> condition . AW LPAREN condition RPAREN
    (29) condition -> condition . WA condition
    (30) condition -> condition . AW condition

    RPAREN          shift and go to state 103
    WA              shift and go to state 60
    AW              shift and go to state 61


state 101

    (13) if -> ILA LPAREN condition RPAREN LBRACKET block RBRACKET WLA . LBRACKET block RBRACKET

    LBRACKET        shift and go to state 104


state 102

    (23) condition -> LPAREN condition RPAREN AW LPAREN condition RPAREN .
    (23) condition -> LPAREN condition RPAREN . AW LPAREN condition RPAREN
    (24) condition -> LPAREN condition RPAREN . WA LPAREN condition RPAREN
    (27) condition -> LPAREN condition RPAREN . WA condition
    (28) condition -> LPAREN condition RPAREN . AW condition

    RPAREN          reduce using rule 23 (condition -> LPAREN condition RPAREN AW LPAREN condition RPAREN .)
    WA              reduce using rule 23 (condition -> LPAREN condition RPAREN AW LPAREN condition RPAREN .)
    AW              reduce using rule 23 (condition -> LPAREN condition RPAREN AW LPAREN condition RPAREN .)

  ! AW              [ shift and go to state 77 ]
  ! WA              [ shift and go to state 78 ]


state 103

    (24) condition -> LPAREN condition RPAREN WA LPAREN condition RPAREN .
    (23) condition -> LPAREN condition RPAREN . AW LPAREN condition RPAREN
    (24) condition -> LPAREN condition RPAREN . WA LPAREN condition RPAREN
    (27) condition -> LPAREN condition RPAREN . WA condition
    (28) condition -> LPAREN condition RPAREN . AW condition

    RPAREN          reduce using rule 24 (condition -> LPAREN condition RPAREN WA LPAREN condition RPAREN .)
    WA              reduce using rule 24 (condition -> LPAREN condition RPAREN WA LPAREN condition RPAREN .)
    AW              reduce using rule 24 (condition -> LPAREN condition RPAREN WA LPAREN condition RPAREN .)

  ! AW              [ shift and go to state 77 ]
  ! WA              [ shift and go to state 78 ]


state 104

    (13) if -> ILA LPAREN condition RPAREN LBRACKET block RBRACKET WLA LBRACKET . block RBRACKET
    (15) block -> . var_assign
    (16) block -> . printing
    (17) block -> . incrementation
    (18) block -> . decrementation
    (19) block -> . expression
    (20) block -> . if
    (21) block -> . while
    (22) block -> . empty
    (11) var_assign -> . ID EQUALS expression
    (49) printing -> . KTEB LPAREN expression RPAREN
    (50) printing -> . KTEB LPAREN incrementation RPAREN
    (51) printing -> . KTEB LPAREN decrementation RPAREN
    (52) printing -> . KTEB LPAREN condition RPAREN
    (9) incrementation -> . ID INCREMENTATION
    (10) decrementation -> . ID DECREMENTATION
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . ID
    (43) expression -> . INT
    (44) expression -> . FLOAT
    (45) expression -> . STRING
    (46) expression -> . KHATE2
    (47) expression -> . S7I7
    (48) expression -> . WALO
    (12) if -> . ILA LPAREN condition RPAREN LBRACKET block RBRACKET
    (13) if -> . ILA LPAREN condition RPAREN LBRACKET block RBRACKET WLA LBRACKET block RBRACKET
    (14) while -> . MA7ED LPAREN condition RPAREN LBRACKET block RBRACKET
    (53) empty -> .

    ID              shift and go to state 10
    KTEB            shift and go to state 11
    LPAREN          shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    KHATE2          shift and go to state 16
    S7I7            shift and go to state 17
    WALO            shift and go to state 18
    ILA             shift and go to state 19
    MA7ED           shift and go to state 20
    RBRACKET        reduce using rule 53 (empty -> .)

    block                          shift and go to state 105
    var_assign                     shift and go to state 82
    printing                       shift and go to state 83
    incrementation                 shift and go to state 84
    decrementation                 shift and go to state 85
    expression                     shift and go to state 86
    if                             shift and go to state 87
    while                          shift and go to state 88
    empty                          shift and go to state 89

state 105

    (13) if -> ILA LPAREN condition RPAREN LBRACKET block RBRACKET WLA LBRACKET block . RBRACKET

    RBRACKET        shift and go to state 106


state 106

    (13) if -> ILA LPAREN condition RPAREN LBRACKET block RBRACKET WLA LBRACKET block RBRACKET .

    $end            reduce using rule 13 (if -> ILA LPAREN condition RPAREN LBRACKET block RBRACKET WLA LBRACKET block RBRACKET .)
    RBRACKET        reduce using rule 13 (if -> ILA LPAREN condition RPAREN LBRACKET block RBRACKET WLA LBRACKET block RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 39 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 49 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 62 resolved as shift
