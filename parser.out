Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instruction_list
Rule 2     incrementation -> ID INCREMENTATION
Rule 3     decrementation -> ID DECREMENTATION
Rule 4     var_assign -> ID EQUALS expression
Rule 5     var_assign -> ID EQUALS input
Rule 6     var_assign -> MOJOD var_assign
Rule 7     arrayelt_assign -> arrayelt EQUALS expression
Rule 8     arrayelt_assign -> arrayslice EQUALS expression
Rule 9     if -> ILA ( condition ) { instruction_list }
Rule 10    if -> ILA ( condition ) { instruction_list } WLA { instruction_list }
Rule 11    for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
Rule 12    for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
Rule 13    for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list }
Rule 14    for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list }
Rule 15    while -> MA7ED ( condition ) { instruction_list }
Rule 16    doWhile -> DIR { instruction_list } MA7ED ( condition )
Rule 17    instruction -> var_assign
Rule 18    instruction -> arrayelt_assign
Rule 19    instruction -> printing
Rule 20    instruction -> incrementation
Rule 21    instruction -> decrementation
Rule 22    instruction -> expression
Rule 23    instruction -> try
Rule 24    instruction -> if
Rule 25    instruction -> for
Rule 26    instruction -> KHREJ
Rule 27    instruction -> KMEL
Rule 28    instruction -> while
Rule 29    instruction -> doWhile
Rule 30    instruction -> input
Rule 31    instruction -> len
Rule 32    instruction -> empty
Rule 33    instruction -> func
Rule 34    instruction -> appel_func
Rule 35    instruction -> return
Rule 36    instruction -> arrfn
Rule 37    instruction_list -> instruction
Rule 38    instruction_list -> instruction_list instruction
Rule 39    condition -> ( condition ) AW ( condition )
Rule 40    condition -> ( condition ) WA ( condition )
Rule 41    condition -> condition WA ( condition )
Rule 42    condition -> condition AW ( condition )
Rule 43    condition -> ( condition ) WA condition
Rule 44    condition -> ( condition ) AW condition
Rule 45    condition -> condition WA condition
Rule 46    condition -> condition AW condition
Rule 47    condition -> L3AKSS ( condition )
Rule 48    condition -> expression SUP expression
Rule 49    condition -> expression INF expression
Rule 50    condition -> expression EQUALSCOMP expression
Rule 51    condition -> expression SUPEQUALS expression
Rule 52    condition -> expression INFEQUALS expression
Rule 53    condition -> expression DIFFERENT expression
Rule 54    condition -> expression
Rule 55    expression -> expression PLUS expression
Rule 56    expression -> expression MINUS expression
Rule 57    expression -> expression TIMES expression
Rule 58    expression -> expression DIVIDE expression
Rule 59    expression -> expression MODULO expression
Rule 60    expression -> expression POWER expression
Rule 61    expression -> ( expression )
Rule 62    expression -> MINUS expression
Rule 63    expression -> PLUS expression
Rule 64    expression -> ID
Rule 65    input -> QRA ( expression )
Rule 66    input -> QRA ( )
Rule 67    try -> JEREB { instruction_list } MASD9CH { instruction_list }
Rule 68    try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
Rule 69    expression -> INT
Rule 70    expression -> FLOAT
Rule 71    expression -> STRING
Rule 72    expression -> KHATE2
Rule 73    expression -> S7I7
Rule 74    expression -> WALO
Rule 75    expression -> array
Rule 76    expression -> arrayelt
Rule 77    expression -> arrayslice
Rule 78    expression -> arrfn
Rule 79    arraylist -> expression
Rule 80    arraylist -> arraylist , expression
Rule 81    array -> [ arraylist ]
Rule 82    array -> [ ]
Rule 83    arrayelt -> ID dimensions
Rule 84    dimensions -> [ expression ]
Rule 85    dimensions -> dimensions [ expression ]
Rule 86    arrayslice -> ID [ expression : expression ]
Rule 87    arrayslice -> ID [ : expression ]
Rule 88    arrayslice -> ID [ expression : ]
Rule 89    arrayslice -> ID [ : ]
Rule 90    arrfn -> ID . ZID ( expression )
Rule 91    arrfn -> ID . KBER ( array )
Rule 92    arrfn -> ID . KHWI ( )
Rule 93    arrfn -> ID . DKHEL ( expression , expression )
Rule 94    arrfn -> ID . MSSE7 ( expression )
Rule 95    arrfn -> ID . MSSE7 ( )
Rule 96    argument_list -> expression
Rule 97    argument_list -> argument_list , expression
Rule 98    parameter -> ID
Rule 99    parameter_list -> parameter
Rule 100   parameter_list -> parameter_list , parameter
Rule 101   func -> TA3RIF ID ( parameter_list ) { instruction_list }
Rule 102   func -> TA3RIF ID ( ) { instruction_list }
Rule 103   appel_func -> ID ( argument_list )
Rule 104   appel_func -> ID ( )
Rule 105   return -> RED expression
Rule 106   printing -> KTEB ( condition )
Rule 107   printing -> KTEB ( incrementation )
Rule 108   printing -> KTEB ( decrementation )
Rule 109   len -> TOL ( expression )
Rule 110   empty -> <empty>

Terminals, with rules where they appear

(                    : 9 10 11 12 13 14 15 16 39 39 40 40 41 42 43 44 47 61 65 66 90 91 92 93 94 95 101 102 103 104 106 107 108 109
)                    : 9 10 11 12 13 14 15 16 39 39 40 40 41 42 43 44 47 61 65 66 90 91 92 93 94 95 101 102 103 104 106 107 108 109
,                    : 80 93 97 100
.                    : 90 91 92 93 94 95
:                    : 86 87 88 89
;                    : 11 11 12 12 13 13 14 14
AKHIRAN              : 68
AW                   : 39 42 44 46
DECREMENTATION       : 3
DIFFERENT            : 53
DIR                  : 16
DIVIDE               : 58
DKHEL                : 93
EQUALS               : 4 5 7 8
EQUALSCOMP           : 50
FLOAT                : 70
ID                   : 2 3 4 5 64 83 86 87 88 89 90 91 92 93 94 95 98 101 102 103 104
ILA                  : 9 10
INCREMENTATION       : 2
INF                  : 49
INFEQUALS            : 52
INT                  : 69
JEREB                : 67 68
KBER                 : 91
KHATE2               : 72
KHREJ                : 26
KHWI                 : 92
KMEL                 : 27
KTEB                 : 106 107 108
L3AKSS               : 47
LKOLA                : 11 12 13 14
MA7ED                : 15 16
MASD9CH              : 67 68
MINUS                : 56 62
MODULO               : 59
MOJOD                : 6
MSSE7                : 94 95
PLUS                 : 55 63
POWER                : 60
QRA                  : 65 66
RED                  : 105
S7I7                 : 73
STRING               : 71
SUP                  : 48
SUPEQUALS            : 51
TA3RIF               : 101 102
TIMES                : 57
TOL                  : 109
WA                   : 40 41 43 45
WALO                 : 74
WLA                  : 10
ZID                  : 90
[                    : 81 82 84 85 86 87 88 89
]                    : 81 82 84 85 86 87 88 89
error                : 
{                    : 9 10 10 11 12 13 14 15 16 67 67 68 68 68 101 102
}                    : 9 10 10 11 12 13 14 15 16 67 67 68 68 68 101 102

Nonterminals, with rules where they appear

appel_func           : 34
argument_list        : 97 103
array                : 75 91
arrayelt             : 7 76
arrayelt_assign      : 18
arraylist            : 80 81
arrayslice           : 8 77
arrfn                : 36 78
condition            : 9 10 11 12 13 14 15 16 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 106
decrementation       : 12 14 21 108
dimensions           : 83 85
doWhile              : 29
empty                : 32
expression           : 4 7 8 13 14 22 48 48 49 49 50 50 51 51 52 52 53 53 54 55 55 56 56 57 57 58 58 59 59 60 60 61 62 63 65 79 80 84 85 86 86 87 88 90 93 93 94 96 97 105 109
for                  : 25
func                 : 33
if                   : 24
incrementation       : 11 13 20 107
input                : 5 30
instruction          : 37 38
instruction_list     : 1 9 10 10 11 12 13 14 15 16 38 67 67 68 68 68 101 102
len                  : 31
parameter            : 99 100
parameter_list       : 100 101
printing             : 19
program              : 0
return               : 35
try                  : 23
var_assign           : 6 11 12 17
while                : 28

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instruction_list
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    $end            reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    program                        shift and go to state 1
    instruction_list               shift and go to state 2
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 1

    (0) S' -> program .



state 2

    (1) program -> instruction_list .
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (program -> instruction_list .)
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    $end            reduce using rule 1 (program -> instruction_list .)
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]
  ! $end            [ reduce using rule 110 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 3

    (37) instruction_list -> instruction .

    KHREJ           reduce using rule 37 (instruction_list -> instruction .)
    KMEL            reduce using rule 37 (instruction_list -> instruction .)
    ID              reduce using rule 37 (instruction_list -> instruction .)
    MOJOD           reduce using rule 37 (instruction_list -> instruction .)
    KTEB            reduce using rule 37 (instruction_list -> instruction .)
    (               reduce using rule 37 (instruction_list -> instruction .)
    MINUS           reduce using rule 37 (instruction_list -> instruction .)
    PLUS            reduce using rule 37 (instruction_list -> instruction .)
    INT             reduce using rule 37 (instruction_list -> instruction .)
    FLOAT           reduce using rule 37 (instruction_list -> instruction .)
    STRING          reduce using rule 37 (instruction_list -> instruction .)
    KHATE2          reduce using rule 37 (instruction_list -> instruction .)
    S7I7            reduce using rule 37 (instruction_list -> instruction .)
    WALO            reduce using rule 37 (instruction_list -> instruction .)
    JEREB           reduce using rule 37 (instruction_list -> instruction .)
    ILA             reduce using rule 37 (instruction_list -> instruction .)
    LKOLA           reduce using rule 37 (instruction_list -> instruction .)
    MA7ED           reduce using rule 37 (instruction_list -> instruction .)
    DIR             reduce using rule 37 (instruction_list -> instruction .)
    QRA             reduce using rule 37 (instruction_list -> instruction .)
    TOL             reduce using rule 37 (instruction_list -> instruction .)
    TA3RIF          reduce using rule 37 (instruction_list -> instruction .)
    RED             reduce using rule 37 (instruction_list -> instruction .)
    [               reduce using rule 37 (instruction_list -> instruction .)
    $end            reduce using rule 37 (instruction_list -> instruction .)
    }               reduce using rule 37 (instruction_list -> instruction .)


state 4

    (17) instruction -> var_assign .

    KHREJ           reduce using rule 17 (instruction -> var_assign .)
    KMEL            reduce using rule 17 (instruction -> var_assign .)
    ID              reduce using rule 17 (instruction -> var_assign .)
    MOJOD           reduce using rule 17 (instruction -> var_assign .)
    KTEB            reduce using rule 17 (instruction -> var_assign .)
    (               reduce using rule 17 (instruction -> var_assign .)
    MINUS           reduce using rule 17 (instruction -> var_assign .)
    PLUS            reduce using rule 17 (instruction -> var_assign .)
    INT             reduce using rule 17 (instruction -> var_assign .)
    FLOAT           reduce using rule 17 (instruction -> var_assign .)
    STRING          reduce using rule 17 (instruction -> var_assign .)
    KHATE2          reduce using rule 17 (instruction -> var_assign .)
    S7I7            reduce using rule 17 (instruction -> var_assign .)
    WALO            reduce using rule 17 (instruction -> var_assign .)
    JEREB           reduce using rule 17 (instruction -> var_assign .)
    ILA             reduce using rule 17 (instruction -> var_assign .)
    LKOLA           reduce using rule 17 (instruction -> var_assign .)
    MA7ED           reduce using rule 17 (instruction -> var_assign .)
    DIR             reduce using rule 17 (instruction -> var_assign .)
    QRA             reduce using rule 17 (instruction -> var_assign .)
    TOL             reduce using rule 17 (instruction -> var_assign .)
    TA3RIF          reduce using rule 17 (instruction -> var_assign .)
    RED             reduce using rule 17 (instruction -> var_assign .)
    [               reduce using rule 17 (instruction -> var_assign .)
    $end            reduce using rule 17 (instruction -> var_assign .)
    }               reduce using rule 17 (instruction -> var_assign .)


state 5

    (18) instruction -> arrayelt_assign .

    KHREJ           reduce using rule 18 (instruction -> arrayelt_assign .)
    KMEL            reduce using rule 18 (instruction -> arrayelt_assign .)
    ID              reduce using rule 18 (instruction -> arrayelt_assign .)
    MOJOD           reduce using rule 18 (instruction -> arrayelt_assign .)
    KTEB            reduce using rule 18 (instruction -> arrayelt_assign .)
    (               reduce using rule 18 (instruction -> arrayelt_assign .)
    MINUS           reduce using rule 18 (instruction -> arrayelt_assign .)
    PLUS            reduce using rule 18 (instruction -> arrayelt_assign .)
    INT             reduce using rule 18 (instruction -> arrayelt_assign .)
    FLOAT           reduce using rule 18 (instruction -> arrayelt_assign .)
    STRING          reduce using rule 18 (instruction -> arrayelt_assign .)
    KHATE2          reduce using rule 18 (instruction -> arrayelt_assign .)
    S7I7            reduce using rule 18 (instruction -> arrayelt_assign .)
    WALO            reduce using rule 18 (instruction -> arrayelt_assign .)
    JEREB           reduce using rule 18 (instruction -> arrayelt_assign .)
    ILA             reduce using rule 18 (instruction -> arrayelt_assign .)
    LKOLA           reduce using rule 18 (instruction -> arrayelt_assign .)
    MA7ED           reduce using rule 18 (instruction -> arrayelt_assign .)
    DIR             reduce using rule 18 (instruction -> arrayelt_assign .)
    QRA             reduce using rule 18 (instruction -> arrayelt_assign .)
    TOL             reduce using rule 18 (instruction -> arrayelt_assign .)
    TA3RIF          reduce using rule 18 (instruction -> arrayelt_assign .)
    RED             reduce using rule 18 (instruction -> arrayelt_assign .)
    [               reduce using rule 18 (instruction -> arrayelt_assign .)
    $end            reduce using rule 18 (instruction -> arrayelt_assign .)
    }               reduce using rule 18 (instruction -> arrayelt_assign .)


state 6

    (19) instruction -> printing .

    KHREJ           reduce using rule 19 (instruction -> printing .)
    KMEL            reduce using rule 19 (instruction -> printing .)
    ID              reduce using rule 19 (instruction -> printing .)
    MOJOD           reduce using rule 19 (instruction -> printing .)
    KTEB            reduce using rule 19 (instruction -> printing .)
    (               reduce using rule 19 (instruction -> printing .)
    MINUS           reduce using rule 19 (instruction -> printing .)
    PLUS            reduce using rule 19 (instruction -> printing .)
    INT             reduce using rule 19 (instruction -> printing .)
    FLOAT           reduce using rule 19 (instruction -> printing .)
    STRING          reduce using rule 19 (instruction -> printing .)
    KHATE2          reduce using rule 19 (instruction -> printing .)
    S7I7            reduce using rule 19 (instruction -> printing .)
    WALO            reduce using rule 19 (instruction -> printing .)
    JEREB           reduce using rule 19 (instruction -> printing .)
    ILA             reduce using rule 19 (instruction -> printing .)
    LKOLA           reduce using rule 19 (instruction -> printing .)
    MA7ED           reduce using rule 19 (instruction -> printing .)
    DIR             reduce using rule 19 (instruction -> printing .)
    QRA             reduce using rule 19 (instruction -> printing .)
    TOL             reduce using rule 19 (instruction -> printing .)
    TA3RIF          reduce using rule 19 (instruction -> printing .)
    RED             reduce using rule 19 (instruction -> printing .)
    [               reduce using rule 19 (instruction -> printing .)
    $end            reduce using rule 19 (instruction -> printing .)
    }               reduce using rule 19 (instruction -> printing .)


state 7

    (20) instruction -> incrementation .

    KHREJ           reduce using rule 20 (instruction -> incrementation .)
    KMEL            reduce using rule 20 (instruction -> incrementation .)
    ID              reduce using rule 20 (instruction -> incrementation .)
    MOJOD           reduce using rule 20 (instruction -> incrementation .)
    KTEB            reduce using rule 20 (instruction -> incrementation .)
    (               reduce using rule 20 (instruction -> incrementation .)
    MINUS           reduce using rule 20 (instruction -> incrementation .)
    PLUS            reduce using rule 20 (instruction -> incrementation .)
    INT             reduce using rule 20 (instruction -> incrementation .)
    FLOAT           reduce using rule 20 (instruction -> incrementation .)
    STRING          reduce using rule 20 (instruction -> incrementation .)
    KHATE2          reduce using rule 20 (instruction -> incrementation .)
    S7I7            reduce using rule 20 (instruction -> incrementation .)
    WALO            reduce using rule 20 (instruction -> incrementation .)
    JEREB           reduce using rule 20 (instruction -> incrementation .)
    ILA             reduce using rule 20 (instruction -> incrementation .)
    LKOLA           reduce using rule 20 (instruction -> incrementation .)
    MA7ED           reduce using rule 20 (instruction -> incrementation .)
    DIR             reduce using rule 20 (instruction -> incrementation .)
    QRA             reduce using rule 20 (instruction -> incrementation .)
    TOL             reduce using rule 20 (instruction -> incrementation .)
    TA3RIF          reduce using rule 20 (instruction -> incrementation .)
    RED             reduce using rule 20 (instruction -> incrementation .)
    [               reduce using rule 20 (instruction -> incrementation .)
    $end            reduce using rule 20 (instruction -> incrementation .)
    }               reduce using rule 20 (instruction -> incrementation .)


state 8

    (21) instruction -> decrementation .

    KHREJ           reduce using rule 21 (instruction -> decrementation .)
    KMEL            reduce using rule 21 (instruction -> decrementation .)
    ID              reduce using rule 21 (instruction -> decrementation .)
    MOJOD           reduce using rule 21 (instruction -> decrementation .)
    KTEB            reduce using rule 21 (instruction -> decrementation .)
    (               reduce using rule 21 (instruction -> decrementation .)
    MINUS           reduce using rule 21 (instruction -> decrementation .)
    PLUS            reduce using rule 21 (instruction -> decrementation .)
    INT             reduce using rule 21 (instruction -> decrementation .)
    FLOAT           reduce using rule 21 (instruction -> decrementation .)
    STRING          reduce using rule 21 (instruction -> decrementation .)
    KHATE2          reduce using rule 21 (instruction -> decrementation .)
    S7I7            reduce using rule 21 (instruction -> decrementation .)
    WALO            reduce using rule 21 (instruction -> decrementation .)
    JEREB           reduce using rule 21 (instruction -> decrementation .)
    ILA             reduce using rule 21 (instruction -> decrementation .)
    LKOLA           reduce using rule 21 (instruction -> decrementation .)
    MA7ED           reduce using rule 21 (instruction -> decrementation .)
    DIR             reduce using rule 21 (instruction -> decrementation .)
    QRA             reduce using rule 21 (instruction -> decrementation .)
    TOL             reduce using rule 21 (instruction -> decrementation .)
    TA3RIF          reduce using rule 21 (instruction -> decrementation .)
    RED             reduce using rule 21 (instruction -> decrementation .)
    [               reduce using rule 21 (instruction -> decrementation .)
    $end            reduce using rule 21 (instruction -> decrementation .)
    }               reduce using rule 21 (instruction -> decrementation .)


state 9

    (22) instruction -> expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 22 (instruction -> expression .)
    KMEL            reduce using rule 22 (instruction -> expression .)
    ID              reduce using rule 22 (instruction -> expression .)
    MOJOD           reduce using rule 22 (instruction -> expression .)
    KTEB            reduce using rule 22 (instruction -> expression .)
    (               reduce using rule 22 (instruction -> expression .)
    INT             reduce using rule 22 (instruction -> expression .)
    FLOAT           reduce using rule 22 (instruction -> expression .)
    STRING          reduce using rule 22 (instruction -> expression .)
    KHATE2          reduce using rule 22 (instruction -> expression .)
    S7I7            reduce using rule 22 (instruction -> expression .)
    WALO            reduce using rule 22 (instruction -> expression .)
    JEREB           reduce using rule 22 (instruction -> expression .)
    ILA             reduce using rule 22 (instruction -> expression .)
    LKOLA           reduce using rule 22 (instruction -> expression .)
    MA7ED           reduce using rule 22 (instruction -> expression .)
    DIR             reduce using rule 22 (instruction -> expression .)
    QRA             reduce using rule 22 (instruction -> expression .)
    TOL             reduce using rule 22 (instruction -> expression .)
    TA3RIF          reduce using rule 22 (instruction -> expression .)
    RED             reduce using rule 22 (instruction -> expression .)
    [               reduce using rule 22 (instruction -> expression .)
    $end            reduce using rule 22 (instruction -> expression .)
    }               reduce using rule 22 (instruction -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! MINUS           [ reduce using rule 22 (instruction -> expression .) ]
  ! PLUS            [ reduce using rule 22 (instruction -> expression .) ]


state 10

    (23) instruction -> try .

    KHREJ           reduce using rule 23 (instruction -> try .)
    KMEL            reduce using rule 23 (instruction -> try .)
    ID              reduce using rule 23 (instruction -> try .)
    MOJOD           reduce using rule 23 (instruction -> try .)
    KTEB            reduce using rule 23 (instruction -> try .)
    (               reduce using rule 23 (instruction -> try .)
    MINUS           reduce using rule 23 (instruction -> try .)
    PLUS            reduce using rule 23 (instruction -> try .)
    INT             reduce using rule 23 (instruction -> try .)
    FLOAT           reduce using rule 23 (instruction -> try .)
    STRING          reduce using rule 23 (instruction -> try .)
    KHATE2          reduce using rule 23 (instruction -> try .)
    S7I7            reduce using rule 23 (instruction -> try .)
    WALO            reduce using rule 23 (instruction -> try .)
    JEREB           reduce using rule 23 (instruction -> try .)
    ILA             reduce using rule 23 (instruction -> try .)
    LKOLA           reduce using rule 23 (instruction -> try .)
    MA7ED           reduce using rule 23 (instruction -> try .)
    DIR             reduce using rule 23 (instruction -> try .)
    QRA             reduce using rule 23 (instruction -> try .)
    TOL             reduce using rule 23 (instruction -> try .)
    TA3RIF          reduce using rule 23 (instruction -> try .)
    RED             reduce using rule 23 (instruction -> try .)
    [               reduce using rule 23 (instruction -> try .)
    $end            reduce using rule 23 (instruction -> try .)
    }               reduce using rule 23 (instruction -> try .)


state 11

    (24) instruction -> if .

    KHREJ           reduce using rule 24 (instruction -> if .)
    KMEL            reduce using rule 24 (instruction -> if .)
    ID              reduce using rule 24 (instruction -> if .)
    MOJOD           reduce using rule 24 (instruction -> if .)
    KTEB            reduce using rule 24 (instruction -> if .)
    (               reduce using rule 24 (instruction -> if .)
    MINUS           reduce using rule 24 (instruction -> if .)
    PLUS            reduce using rule 24 (instruction -> if .)
    INT             reduce using rule 24 (instruction -> if .)
    FLOAT           reduce using rule 24 (instruction -> if .)
    STRING          reduce using rule 24 (instruction -> if .)
    KHATE2          reduce using rule 24 (instruction -> if .)
    S7I7            reduce using rule 24 (instruction -> if .)
    WALO            reduce using rule 24 (instruction -> if .)
    JEREB           reduce using rule 24 (instruction -> if .)
    ILA             reduce using rule 24 (instruction -> if .)
    LKOLA           reduce using rule 24 (instruction -> if .)
    MA7ED           reduce using rule 24 (instruction -> if .)
    DIR             reduce using rule 24 (instruction -> if .)
    QRA             reduce using rule 24 (instruction -> if .)
    TOL             reduce using rule 24 (instruction -> if .)
    TA3RIF          reduce using rule 24 (instruction -> if .)
    RED             reduce using rule 24 (instruction -> if .)
    [               reduce using rule 24 (instruction -> if .)
    $end            reduce using rule 24 (instruction -> if .)
    }               reduce using rule 24 (instruction -> if .)


state 12

    (25) instruction -> for .

    KHREJ           reduce using rule 25 (instruction -> for .)
    KMEL            reduce using rule 25 (instruction -> for .)
    ID              reduce using rule 25 (instruction -> for .)
    MOJOD           reduce using rule 25 (instruction -> for .)
    KTEB            reduce using rule 25 (instruction -> for .)
    (               reduce using rule 25 (instruction -> for .)
    MINUS           reduce using rule 25 (instruction -> for .)
    PLUS            reduce using rule 25 (instruction -> for .)
    INT             reduce using rule 25 (instruction -> for .)
    FLOAT           reduce using rule 25 (instruction -> for .)
    STRING          reduce using rule 25 (instruction -> for .)
    KHATE2          reduce using rule 25 (instruction -> for .)
    S7I7            reduce using rule 25 (instruction -> for .)
    WALO            reduce using rule 25 (instruction -> for .)
    JEREB           reduce using rule 25 (instruction -> for .)
    ILA             reduce using rule 25 (instruction -> for .)
    LKOLA           reduce using rule 25 (instruction -> for .)
    MA7ED           reduce using rule 25 (instruction -> for .)
    DIR             reduce using rule 25 (instruction -> for .)
    QRA             reduce using rule 25 (instruction -> for .)
    TOL             reduce using rule 25 (instruction -> for .)
    TA3RIF          reduce using rule 25 (instruction -> for .)
    RED             reduce using rule 25 (instruction -> for .)
    [               reduce using rule 25 (instruction -> for .)
    $end            reduce using rule 25 (instruction -> for .)
    }               reduce using rule 25 (instruction -> for .)


state 13

    (26) instruction -> KHREJ .

    KHREJ           reduce using rule 26 (instruction -> KHREJ .)
    KMEL            reduce using rule 26 (instruction -> KHREJ .)
    ID              reduce using rule 26 (instruction -> KHREJ .)
    MOJOD           reduce using rule 26 (instruction -> KHREJ .)
    KTEB            reduce using rule 26 (instruction -> KHREJ .)
    (               reduce using rule 26 (instruction -> KHREJ .)
    MINUS           reduce using rule 26 (instruction -> KHREJ .)
    PLUS            reduce using rule 26 (instruction -> KHREJ .)
    INT             reduce using rule 26 (instruction -> KHREJ .)
    FLOAT           reduce using rule 26 (instruction -> KHREJ .)
    STRING          reduce using rule 26 (instruction -> KHREJ .)
    KHATE2          reduce using rule 26 (instruction -> KHREJ .)
    S7I7            reduce using rule 26 (instruction -> KHREJ .)
    WALO            reduce using rule 26 (instruction -> KHREJ .)
    JEREB           reduce using rule 26 (instruction -> KHREJ .)
    ILA             reduce using rule 26 (instruction -> KHREJ .)
    LKOLA           reduce using rule 26 (instruction -> KHREJ .)
    MA7ED           reduce using rule 26 (instruction -> KHREJ .)
    DIR             reduce using rule 26 (instruction -> KHREJ .)
    QRA             reduce using rule 26 (instruction -> KHREJ .)
    TOL             reduce using rule 26 (instruction -> KHREJ .)
    TA3RIF          reduce using rule 26 (instruction -> KHREJ .)
    RED             reduce using rule 26 (instruction -> KHREJ .)
    [               reduce using rule 26 (instruction -> KHREJ .)
    $end            reduce using rule 26 (instruction -> KHREJ .)
    }               reduce using rule 26 (instruction -> KHREJ .)


state 14

    (27) instruction -> KMEL .

    KHREJ           reduce using rule 27 (instruction -> KMEL .)
    KMEL            reduce using rule 27 (instruction -> KMEL .)
    ID              reduce using rule 27 (instruction -> KMEL .)
    MOJOD           reduce using rule 27 (instruction -> KMEL .)
    KTEB            reduce using rule 27 (instruction -> KMEL .)
    (               reduce using rule 27 (instruction -> KMEL .)
    MINUS           reduce using rule 27 (instruction -> KMEL .)
    PLUS            reduce using rule 27 (instruction -> KMEL .)
    INT             reduce using rule 27 (instruction -> KMEL .)
    FLOAT           reduce using rule 27 (instruction -> KMEL .)
    STRING          reduce using rule 27 (instruction -> KMEL .)
    KHATE2          reduce using rule 27 (instruction -> KMEL .)
    S7I7            reduce using rule 27 (instruction -> KMEL .)
    WALO            reduce using rule 27 (instruction -> KMEL .)
    JEREB           reduce using rule 27 (instruction -> KMEL .)
    ILA             reduce using rule 27 (instruction -> KMEL .)
    LKOLA           reduce using rule 27 (instruction -> KMEL .)
    MA7ED           reduce using rule 27 (instruction -> KMEL .)
    DIR             reduce using rule 27 (instruction -> KMEL .)
    QRA             reduce using rule 27 (instruction -> KMEL .)
    TOL             reduce using rule 27 (instruction -> KMEL .)
    TA3RIF          reduce using rule 27 (instruction -> KMEL .)
    RED             reduce using rule 27 (instruction -> KMEL .)
    [               reduce using rule 27 (instruction -> KMEL .)
    $end            reduce using rule 27 (instruction -> KMEL .)
    }               reduce using rule 27 (instruction -> KMEL .)


state 15

    (28) instruction -> while .

    KHREJ           reduce using rule 28 (instruction -> while .)
    KMEL            reduce using rule 28 (instruction -> while .)
    ID              reduce using rule 28 (instruction -> while .)
    MOJOD           reduce using rule 28 (instruction -> while .)
    KTEB            reduce using rule 28 (instruction -> while .)
    (               reduce using rule 28 (instruction -> while .)
    MINUS           reduce using rule 28 (instruction -> while .)
    PLUS            reduce using rule 28 (instruction -> while .)
    INT             reduce using rule 28 (instruction -> while .)
    FLOAT           reduce using rule 28 (instruction -> while .)
    STRING          reduce using rule 28 (instruction -> while .)
    KHATE2          reduce using rule 28 (instruction -> while .)
    S7I7            reduce using rule 28 (instruction -> while .)
    WALO            reduce using rule 28 (instruction -> while .)
    JEREB           reduce using rule 28 (instruction -> while .)
    ILA             reduce using rule 28 (instruction -> while .)
    LKOLA           reduce using rule 28 (instruction -> while .)
    MA7ED           reduce using rule 28 (instruction -> while .)
    DIR             reduce using rule 28 (instruction -> while .)
    QRA             reduce using rule 28 (instruction -> while .)
    TOL             reduce using rule 28 (instruction -> while .)
    TA3RIF          reduce using rule 28 (instruction -> while .)
    RED             reduce using rule 28 (instruction -> while .)
    [               reduce using rule 28 (instruction -> while .)
    $end            reduce using rule 28 (instruction -> while .)
    }               reduce using rule 28 (instruction -> while .)


state 16

    (29) instruction -> doWhile .

    KHREJ           reduce using rule 29 (instruction -> doWhile .)
    KMEL            reduce using rule 29 (instruction -> doWhile .)
    ID              reduce using rule 29 (instruction -> doWhile .)
    MOJOD           reduce using rule 29 (instruction -> doWhile .)
    KTEB            reduce using rule 29 (instruction -> doWhile .)
    (               reduce using rule 29 (instruction -> doWhile .)
    MINUS           reduce using rule 29 (instruction -> doWhile .)
    PLUS            reduce using rule 29 (instruction -> doWhile .)
    INT             reduce using rule 29 (instruction -> doWhile .)
    FLOAT           reduce using rule 29 (instruction -> doWhile .)
    STRING          reduce using rule 29 (instruction -> doWhile .)
    KHATE2          reduce using rule 29 (instruction -> doWhile .)
    S7I7            reduce using rule 29 (instruction -> doWhile .)
    WALO            reduce using rule 29 (instruction -> doWhile .)
    JEREB           reduce using rule 29 (instruction -> doWhile .)
    ILA             reduce using rule 29 (instruction -> doWhile .)
    LKOLA           reduce using rule 29 (instruction -> doWhile .)
    MA7ED           reduce using rule 29 (instruction -> doWhile .)
    DIR             reduce using rule 29 (instruction -> doWhile .)
    QRA             reduce using rule 29 (instruction -> doWhile .)
    TOL             reduce using rule 29 (instruction -> doWhile .)
    TA3RIF          reduce using rule 29 (instruction -> doWhile .)
    RED             reduce using rule 29 (instruction -> doWhile .)
    [               reduce using rule 29 (instruction -> doWhile .)
    $end            reduce using rule 29 (instruction -> doWhile .)
    }               reduce using rule 29 (instruction -> doWhile .)


state 17

    (30) instruction -> input .

    KHREJ           reduce using rule 30 (instruction -> input .)
    KMEL            reduce using rule 30 (instruction -> input .)
    ID              reduce using rule 30 (instruction -> input .)
    MOJOD           reduce using rule 30 (instruction -> input .)
    KTEB            reduce using rule 30 (instruction -> input .)
    (               reduce using rule 30 (instruction -> input .)
    MINUS           reduce using rule 30 (instruction -> input .)
    PLUS            reduce using rule 30 (instruction -> input .)
    INT             reduce using rule 30 (instruction -> input .)
    FLOAT           reduce using rule 30 (instruction -> input .)
    STRING          reduce using rule 30 (instruction -> input .)
    KHATE2          reduce using rule 30 (instruction -> input .)
    S7I7            reduce using rule 30 (instruction -> input .)
    WALO            reduce using rule 30 (instruction -> input .)
    JEREB           reduce using rule 30 (instruction -> input .)
    ILA             reduce using rule 30 (instruction -> input .)
    LKOLA           reduce using rule 30 (instruction -> input .)
    MA7ED           reduce using rule 30 (instruction -> input .)
    DIR             reduce using rule 30 (instruction -> input .)
    QRA             reduce using rule 30 (instruction -> input .)
    TOL             reduce using rule 30 (instruction -> input .)
    TA3RIF          reduce using rule 30 (instruction -> input .)
    RED             reduce using rule 30 (instruction -> input .)
    [               reduce using rule 30 (instruction -> input .)
    $end            reduce using rule 30 (instruction -> input .)
    }               reduce using rule 30 (instruction -> input .)


state 18

    (31) instruction -> len .

    KHREJ           reduce using rule 31 (instruction -> len .)
    KMEL            reduce using rule 31 (instruction -> len .)
    ID              reduce using rule 31 (instruction -> len .)
    MOJOD           reduce using rule 31 (instruction -> len .)
    KTEB            reduce using rule 31 (instruction -> len .)
    (               reduce using rule 31 (instruction -> len .)
    MINUS           reduce using rule 31 (instruction -> len .)
    PLUS            reduce using rule 31 (instruction -> len .)
    INT             reduce using rule 31 (instruction -> len .)
    FLOAT           reduce using rule 31 (instruction -> len .)
    STRING          reduce using rule 31 (instruction -> len .)
    KHATE2          reduce using rule 31 (instruction -> len .)
    S7I7            reduce using rule 31 (instruction -> len .)
    WALO            reduce using rule 31 (instruction -> len .)
    JEREB           reduce using rule 31 (instruction -> len .)
    ILA             reduce using rule 31 (instruction -> len .)
    LKOLA           reduce using rule 31 (instruction -> len .)
    MA7ED           reduce using rule 31 (instruction -> len .)
    DIR             reduce using rule 31 (instruction -> len .)
    QRA             reduce using rule 31 (instruction -> len .)
    TOL             reduce using rule 31 (instruction -> len .)
    TA3RIF          reduce using rule 31 (instruction -> len .)
    RED             reduce using rule 31 (instruction -> len .)
    [               reduce using rule 31 (instruction -> len .)
    $end            reduce using rule 31 (instruction -> len .)
    }               reduce using rule 31 (instruction -> len .)


state 19

    (32) instruction -> empty .

    KHREJ           reduce using rule 32 (instruction -> empty .)
    KMEL            reduce using rule 32 (instruction -> empty .)
    ID              reduce using rule 32 (instruction -> empty .)
    MOJOD           reduce using rule 32 (instruction -> empty .)
    KTEB            reduce using rule 32 (instruction -> empty .)
    (               reduce using rule 32 (instruction -> empty .)
    MINUS           reduce using rule 32 (instruction -> empty .)
    PLUS            reduce using rule 32 (instruction -> empty .)
    INT             reduce using rule 32 (instruction -> empty .)
    FLOAT           reduce using rule 32 (instruction -> empty .)
    STRING          reduce using rule 32 (instruction -> empty .)
    KHATE2          reduce using rule 32 (instruction -> empty .)
    S7I7            reduce using rule 32 (instruction -> empty .)
    WALO            reduce using rule 32 (instruction -> empty .)
    JEREB           reduce using rule 32 (instruction -> empty .)
    ILA             reduce using rule 32 (instruction -> empty .)
    LKOLA           reduce using rule 32 (instruction -> empty .)
    MA7ED           reduce using rule 32 (instruction -> empty .)
    DIR             reduce using rule 32 (instruction -> empty .)
    QRA             reduce using rule 32 (instruction -> empty .)
    TOL             reduce using rule 32 (instruction -> empty .)
    TA3RIF          reduce using rule 32 (instruction -> empty .)
    RED             reduce using rule 32 (instruction -> empty .)
    [               reduce using rule 32 (instruction -> empty .)
    $end            reduce using rule 32 (instruction -> empty .)
    }               reduce using rule 32 (instruction -> empty .)


state 20

    (33) instruction -> func .

    KHREJ           reduce using rule 33 (instruction -> func .)
    KMEL            reduce using rule 33 (instruction -> func .)
    ID              reduce using rule 33 (instruction -> func .)
    MOJOD           reduce using rule 33 (instruction -> func .)
    KTEB            reduce using rule 33 (instruction -> func .)
    (               reduce using rule 33 (instruction -> func .)
    MINUS           reduce using rule 33 (instruction -> func .)
    PLUS            reduce using rule 33 (instruction -> func .)
    INT             reduce using rule 33 (instruction -> func .)
    FLOAT           reduce using rule 33 (instruction -> func .)
    STRING          reduce using rule 33 (instruction -> func .)
    KHATE2          reduce using rule 33 (instruction -> func .)
    S7I7            reduce using rule 33 (instruction -> func .)
    WALO            reduce using rule 33 (instruction -> func .)
    JEREB           reduce using rule 33 (instruction -> func .)
    ILA             reduce using rule 33 (instruction -> func .)
    LKOLA           reduce using rule 33 (instruction -> func .)
    MA7ED           reduce using rule 33 (instruction -> func .)
    DIR             reduce using rule 33 (instruction -> func .)
    QRA             reduce using rule 33 (instruction -> func .)
    TOL             reduce using rule 33 (instruction -> func .)
    TA3RIF          reduce using rule 33 (instruction -> func .)
    RED             reduce using rule 33 (instruction -> func .)
    [               reduce using rule 33 (instruction -> func .)
    $end            reduce using rule 33 (instruction -> func .)
    }               reduce using rule 33 (instruction -> func .)


state 21

    (34) instruction -> appel_func .

    KHREJ           reduce using rule 34 (instruction -> appel_func .)
    KMEL            reduce using rule 34 (instruction -> appel_func .)
    ID              reduce using rule 34 (instruction -> appel_func .)
    MOJOD           reduce using rule 34 (instruction -> appel_func .)
    KTEB            reduce using rule 34 (instruction -> appel_func .)
    (               reduce using rule 34 (instruction -> appel_func .)
    MINUS           reduce using rule 34 (instruction -> appel_func .)
    PLUS            reduce using rule 34 (instruction -> appel_func .)
    INT             reduce using rule 34 (instruction -> appel_func .)
    FLOAT           reduce using rule 34 (instruction -> appel_func .)
    STRING          reduce using rule 34 (instruction -> appel_func .)
    KHATE2          reduce using rule 34 (instruction -> appel_func .)
    S7I7            reduce using rule 34 (instruction -> appel_func .)
    WALO            reduce using rule 34 (instruction -> appel_func .)
    JEREB           reduce using rule 34 (instruction -> appel_func .)
    ILA             reduce using rule 34 (instruction -> appel_func .)
    LKOLA           reduce using rule 34 (instruction -> appel_func .)
    MA7ED           reduce using rule 34 (instruction -> appel_func .)
    DIR             reduce using rule 34 (instruction -> appel_func .)
    QRA             reduce using rule 34 (instruction -> appel_func .)
    TOL             reduce using rule 34 (instruction -> appel_func .)
    TA3RIF          reduce using rule 34 (instruction -> appel_func .)
    RED             reduce using rule 34 (instruction -> appel_func .)
    [               reduce using rule 34 (instruction -> appel_func .)
    $end            reduce using rule 34 (instruction -> appel_func .)
    }               reduce using rule 34 (instruction -> appel_func .)


state 22

    (35) instruction -> return .

    KHREJ           reduce using rule 35 (instruction -> return .)
    KMEL            reduce using rule 35 (instruction -> return .)
    ID              reduce using rule 35 (instruction -> return .)
    MOJOD           reduce using rule 35 (instruction -> return .)
    KTEB            reduce using rule 35 (instruction -> return .)
    (               reduce using rule 35 (instruction -> return .)
    MINUS           reduce using rule 35 (instruction -> return .)
    PLUS            reduce using rule 35 (instruction -> return .)
    INT             reduce using rule 35 (instruction -> return .)
    FLOAT           reduce using rule 35 (instruction -> return .)
    STRING          reduce using rule 35 (instruction -> return .)
    KHATE2          reduce using rule 35 (instruction -> return .)
    S7I7            reduce using rule 35 (instruction -> return .)
    WALO            reduce using rule 35 (instruction -> return .)
    JEREB           reduce using rule 35 (instruction -> return .)
    ILA             reduce using rule 35 (instruction -> return .)
    LKOLA           reduce using rule 35 (instruction -> return .)
    MA7ED           reduce using rule 35 (instruction -> return .)
    DIR             reduce using rule 35 (instruction -> return .)
    QRA             reduce using rule 35 (instruction -> return .)
    TOL             reduce using rule 35 (instruction -> return .)
    TA3RIF          reduce using rule 35 (instruction -> return .)
    RED             reduce using rule 35 (instruction -> return .)
    [               reduce using rule 35 (instruction -> return .)
    $end            reduce using rule 35 (instruction -> return .)
    }               reduce using rule 35 (instruction -> return .)


state 23

    (36) instruction -> arrfn .
    (78) expression -> arrfn .

  ! reduce/reduce conflict for PLUS resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for MINUS resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for KHREJ resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for KMEL resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for ID resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for MOJOD resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for KTEB resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for ( resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for INT resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for FLOAT resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for STRING resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for KHATE2 resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for S7I7 resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for WALO resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for JEREB resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for ILA resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for LKOLA resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for MA7ED resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for DIR resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for QRA resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for TOL resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for TA3RIF resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for RED resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for [ resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for $end resolved using rule 36 (instruction -> arrfn .)
  ! reduce/reduce conflict for } resolved using rule 36 (instruction -> arrfn .)
    KHREJ           reduce using rule 36 (instruction -> arrfn .)
    KMEL            reduce using rule 36 (instruction -> arrfn .)
    ID              reduce using rule 36 (instruction -> arrfn .)
    MOJOD           reduce using rule 36 (instruction -> arrfn .)
    KTEB            reduce using rule 36 (instruction -> arrfn .)
    (               reduce using rule 36 (instruction -> arrfn .)
    MINUS           reduce using rule 36 (instruction -> arrfn .)
    PLUS            reduce using rule 36 (instruction -> arrfn .)
    INT             reduce using rule 36 (instruction -> arrfn .)
    FLOAT           reduce using rule 36 (instruction -> arrfn .)
    STRING          reduce using rule 36 (instruction -> arrfn .)
    KHATE2          reduce using rule 36 (instruction -> arrfn .)
    S7I7            reduce using rule 36 (instruction -> arrfn .)
    WALO            reduce using rule 36 (instruction -> arrfn .)
    JEREB           reduce using rule 36 (instruction -> arrfn .)
    ILA             reduce using rule 36 (instruction -> arrfn .)
    LKOLA           reduce using rule 36 (instruction -> arrfn .)
    MA7ED           reduce using rule 36 (instruction -> arrfn .)
    DIR             reduce using rule 36 (instruction -> arrfn .)
    QRA             reduce using rule 36 (instruction -> arrfn .)
    TOL             reduce using rule 36 (instruction -> arrfn .)
    TA3RIF          reduce using rule 36 (instruction -> arrfn .)
    RED             reduce using rule 36 (instruction -> arrfn .)
    [               reduce using rule 36 (instruction -> arrfn .)
    $end            reduce using rule 36 (instruction -> arrfn .)
    }               reduce using rule 36 (instruction -> arrfn .)
    TIMES           reduce using rule 78 (expression -> arrfn .)
    DIVIDE          reduce using rule 78 (expression -> arrfn .)
    MODULO          reduce using rule 78 (expression -> arrfn .)
    POWER           reduce using rule 78 (expression -> arrfn .)

  ! PLUS            [ reduce using rule 78 (expression -> arrfn .) ]
  ! MINUS           [ reduce using rule 78 (expression -> arrfn .) ]
  ! KHREJ           [ reduce using rule 78 (expression -> arrfn .) ]
  ! KMEL            [ reduce using rule 78 (expression -> arrfn .) ]
  ! ID              [ reduce using rule 78 (expression -> arrfn .) ]
  ! MOJOD           [ reduce using rule 78 (expression -> arrfn .) ]
  ! KTEB            [ reduce using rule 78 (expression -> arrfn .) ]
  ! (               [ reduce using rule 78 (expression -> arrfn .) ]
  ! INT             [ reduce using rule 78 (expression -> arrfn .) ]
  ! FLOAT           [ reduce using rule 78 (expression -> arrfn .) ]
  ! STRING          [ reduce using rule 78 (expression -> arrfn .) ]
  ! KHATE2          [ reduce using rule 78 (expression -> arrfn .) ]
  ! S7I7            [ reduce using rule 78 (expression -> arrfn .) ]
  ! WALO            [ reduce using rule 78 (expression -> arrfn .) ]
  ! JEREB           [ reduce using rule 78 (expression -> arrfn .) ]
  ! ILA             [ reduce using rule 78 (expression -> arrfn .) ]
  ! LKOLA           [ reduce using rule 78 (expression -> arrfn .) ]
  ! MA7ED           [ reduce using rule 78 (expression -> arrfn .) ]
  ! DIR             [ reduce using rule 78 (expression -> arrfn .) ]
  ! QRA             [ reduce using rule 78 (expression -> arrfn .) ]
  ! TOL             [ reduce using rule 78 (expression -> arrfn .) ]
  ! TA3RIF          [ reduce using rule 78 (expression -> arrfn .) ]
  ! RED             [ reduce using rule 78 (expression -> arrfn .) ]
  ! [               [ reduce using rule 78 (expression -> arrfn .) ]
  ! $end            [ reduce using rule 78 (expression -> arrfn .) ]
  ! }               [ reduce using rule 78 (expression -> arrfn .) ]


state 24

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input
    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION
    (64) expression -> ID .
    (103) appel_func -> ID . ( argument_list )
    (104) appel_func -> ID . ( )
    (90) arrfn -> ID . . ZID ( expression )
    (91) arrfn -> ID . . KBER ( array )
    (92) arrfn -> ID . . KHWI ( )
    (93) arrfn -> ID . . DKHEL ( expression , expression )
    (94) arrfn -> ID . . MSSE7 ( expression )
    (95) arrfn -> ID . . MSSE7 ( )
    (83) arrayelt -> ID . dimensions
    (86) arrayslice -> ID . [ expression : expression ]
    (87) arrayslice -> ID . [ : expression ]
    (88) arrayslice -> ID . [ expression : ]
    (89) arrayslice -> ID . [ : ]
    (84) dimensions -> . [ expression ]
    (85) dimensions -> . dimensions [ expression ]

  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    EQUALS          shift and go to state 56
    INCREMENTATION  shift and go to state 57
    DECREMENTATION  shift and go to state 58
    PLUS            reduce using rule 64 (expression -> ID .)
    MINUS           reduce using rule 64 (expression -> ID .)
    TIMES           reduce using rule 64 (expression -> ID .)
    DIVIDE          reduce using rule 64 (expression -> ID .)
    MODULO          reduce using rule 64 (expression -> ID .)
    POWER           reduce using rule 64 (expression -> ID .)
    KHREJ           reduce using rule 64 (expression -> ID .)
    KMEL            reduce using rule 64 (expression -> ID .)
    ID              reduce using rule 64 (expression -> ID .)
    MOJOD           reduce using rule 64 (expression -> ID .)
    KTEB            reduce using rule 64 (expression -> ID .)
    INT             reduce using rule 64 (expression -> ID .)
    FLOAT           reduce using rule 64 (expression -> ID .)
    STRING          reduce using rule 64 (expression -> ID .)
    KHATE2          reduce using rule 64 (expression -> ID .)
    S7I7            reduce using rule 64 (expression -> ID .)
    WALO            reduce using rule 64 (expression -> ID .)
    JEREB           reduce using rule 64 (expression -> ID .)
    ILA             reduce using rule 64 (expression -> ID .)
    LKOLA           reduce using rule 64 (expression -> ID .)
    MA7ED           reduce using rule 64 (expression -> ID .)
    DIR             reduce using rule 64 (expression -> ID .)
    QRA             reduce using rule 64 (expression -> ID .)
    TOL             reduce using rule 64 (expression -> ID .)
    TA3RIF          reduce using rule 64 (expression -> ID .)
    RED             reduce using rule 64 (expression -> ID .)
    $end            reduce using rule 64 (expression -> ID .)
    }               reduce using rule 64 (expression -> ID .)
    (               shift and go to state 59
    .               shift and go to state 60
    [               shift and go to state 62

  ! (               [ reduce using rule 64 (expression -> ID .) ]
  ! [               [ reduce using rule 64 (expression -> ID .) ]

    dimensions                     shift and go to state 61

state 25

    (6) var_assign -> MOJOD . var_assign
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign

    ID              shift and go to state 64
    MOJOD           shift and go to state 25

    var_assign                     shift and go to state 63

state 26

    (7) arrayelt_assign -> arrayelt . EQUALS expression
    (76) expression -> arrayelt .

    EQUALS          shift and go to state 65
    PLUS            reduce using rule 76 (expression -> arrayelt .)
    MINUS           reduce using rule 76 (expression -> arrayelt .)
    TIMES           reduce using rule 76 (expression -> arrayelt .)
    DIVIDE          reduce using rule 76 (expression -> arrayelt .)
    MODULO          reduce using rule 76 (expression -> arrayelt .)
    POWER           reduce using rule 76 (expression -> arrayelt .)
    KHREJ           reduce using rule 76 (expression -> arrayelt .)
    KMEL            reduce using rule 76 (expression -> arrayelt .)
    ID              reduce using rule 76 (expression -> arrayelt .)
    MOJOD           reduce using rule 76 (expression -> arrayelt .)
    KTEB            reduce using rule 76 (expression -> arrayelt .)
    (               reduce using rule 76 (expression -> arrayelt .)
    INT             reduce using rule 76 (expression -> arrayelt .)
    FLOAT           reduce using rule 76 (expression -> arrayelt .)
    STRING          reduce using rule 76 (expression -> arrayelt .)
    KHATE2          reduce using rule 76 (expression -> arrayelt .)
    S7I7            reduce using rule 76 (expression -> arrayelt .)
    WALO            reduce using rule 76 (expression -> arrayelt .)
    JEREB           reduce using rule 76 (expression -> arrayelt .)
    ILA             reduce using rule 76 (expression -> arrayelt .)
    LKOLA           reduce using rule 76 (expression -> arrayelt .)
    MA7ED           reduce using rule 76 (expression -> arrayelt .)
    DIR             reduce using rule 76 (expression -> arrayelt .)
    QRA             reduce using rule 76 (expression -> arrayelt .)
    TOL             reduce using rule 76 (expression -> arrayelt .)
    TA3RIF          reduce using rule 76 (expression -> arrayelt .)
    RED             reduce using rule 76 (expression -> arrayelt .)
    [               reduce using rule 76 (expression -> arrayelt .)
    $end            reduce using rule 76 (expression -> arrayelt .)
    }               reduce using rule 76 (expression -> arrayelt .)


state 27

    (8) arrayelt_assign -> arrayslice . EQUALS expression
    (77) expression -> arrayslice .

    EQUALS          shift and go to state 66
    PLUS            reduce using rule 77 (expression -> arrayslice .)
    MINUS           reduce using rule 77 (expression -> arrayslice .)
    TIMES           reduce using rule 77 (expression -> arrayslice .)
    DIVIDE          reduce using rule 77 (expression -> arrayslice .)
    MODULO          reduce using rule 77 (expression -> arrayslice .)
    POWER           reduce using rule 77 (expression -> arrayslice .)
    KHREJ           reduce using rule 77 (expression -> arrayslice .)
    KMEL            reduce using rule 77 (expression -> arrayslice .)
    ID              reduce using rule 77 (expression -> arrayslice .)
    MOJOD           reduce using rule 77 (expression -> arrayslice .)
    KTEB            reduce using rule 77 (expression -> arrayslice .)
    (               reduce using rule 77 (expression -> arrayslice .)
    INT             reduce using rule 77 (expression -> arrayslice .)
    FLOAT           reduce using rule 77 (expression -> arrayslice .)
    STRING          reduce using rule 77 (expression -> arrayslice .)
    KHATE2          reduce using rule 77 (expression -> arrayslice .)
    S7I7            reduce using rule 77 (expression -> arrayslice .)
    WALO            reduce using rule 77 (expression -> arrayslice .)
    JEREB           reduce using rule 77 (expression -> arrayslice .)
    ILA             reduce using rule 77 (expression -> arrayslice .)
    LKOLA           reduce using rule 77 (expression -> arrayslice .)
    MA7ED           reduce using rule 77 (expression -> arrayslice .)
    DIR             reduce using rule 77 (expression -> arrayslice .)
    QRA             reduce using rule 77 (expression -> arrayslice .)
    TOL             reduce using rule 77 (expression -> arrayslice .)
    TA3RIF          reduce using rule 77 (expression -> arrayslice .)
    RED             reduce using rule 77 (expression -> arrayslice .)
    [               reduce using rule 77 (expression -> arrayslice .)
    $end            reduce using rule 77 (expression -> arrayslice .)
    }               reduce using rule 77 (expression -> arrayslice .)


state 28

    (106) printing -> KTEB . ( condition )
    (107) printing -> KTEB . ( incrementation )
    (108) printing -> KTEB . ( decrementation )

    (               shift and go to state 67


state 29

    (61) expression -> ( . expression )
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 68
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 30

    (63) expression -> PLUS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 73
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 31

    (62) expression -> MINUS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 74
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 32

    (69) expression -> INT .

    PLUS            reduce using rule 69 (expression -> INT .)
    MINUS           reduce using rule 69 (expression -> INT .)
    TIMES           reduce using rule 69 (expression -> INT .)
    DIVIDE          reduce using rule 69 (expression -> INT .)
    MODULO          reduce using rule 69 (expression -> INT .)
    POWER           reduce using rule 69 (expression -> INT .)
    KHREJ           reduce using rule 69 (expression -> INT .)
    KMEL            reduce using rule 69 (expression -> INT .)
    ID              reduce using rule 69 (expression -> INT .)
    MOJOD           reduce using rule 69 (expression -> INT .)
    KTEB            reduce using rule 69 (expression -> INT .)
    (               reduce using rule 69 (expression -> INT .)
    INT             reduce using rule 69 (expression -> INT .)
    FLOAT           reduce using rule 69 (expression -> INT .)
    STRING          reduce using rule 69 (expression -> INT .)
    KHATE2          reduce using rule 69 (expression -> INT .)
    S7I7            reduce using rule 69 (expression -> INT .)
    WALO            reduce using rule 69 (expression -> INT .)
    JEREB           reduce using rule 69 (expression -> INT .)
    ILA             reduce using rule 69 (expression -> INT .)
    LKOLA           reduce using rule 69 (expression -> INT .)
    MA7ED           reduce using rule 69 (expression -> INT .)
    DIR             reduce using rule 69 (expression -> INT .)
    QRA             reduce using rule 69 (expression -> INT .)
    TOL             reduce using rule 69 (expression -> INT .)
    TA3RIF          reduce using rule 69 (expression -> INT .)
    RED             reduce using rule 69 (expression -> INT .)
    [               reduce using rule 69 (expression -> INT .)
    $end            reduce using rule 69 (expression -> INT .)
    )               reduce using rule 69 (expression -> INT .)
    }               reduce using rule 69 (expression -> INT .)
    ]               reduce using rule 69 (expression -> INT .)
    ,               reduce using rule 69 (expression -> INT .)
    ;               reduce using rule 69 (expression -> INT .)
    :               reduce using rule 69 (expression -> INT .)
    SUP             reduce using rule 69 (expression -> INT .)
    INF             reduce using rule 69 (expression -> INT .)
    EQUALSCOMP      reduce using rule 69 (expression -> INT .)
    SUPEQUALS       reduce using rule 69 (expression -> INT .)
    INFEQUALS       reduce using rule 69 (expression -> INT .)
    DIFFERENT       reduce using rule 69 (expression -> INT .)
    WA              reduce using rule 69 (expression -> INT .)
    AW              reduce using rule 69 (expression -> INT .)


state 33

    (70) expression -> FLOAT .

    PLUS            reduce using rule 70 (expression -> FLOAT .)
    MINUS           reduce using rule 70 (expression -> FLOAT .)
    TIMES           reduce using rule 70 (expression -> FLOAT .)
    DIVIDE          reduce using rule 70 (expression -> FLOAT .)
    MODULO          reduce using rule 70 (expression -> FLOAT .)
    POWER           reduce using rule 70 (expression -> FLOAT .)
    KHREJ           reduce using rule 70 (expression -> FLOAT .)
    KMEL            reduce using rule 70 (expression -> FLOAT .)
    ID              reduce using rule 70 (expression -> FLOAT .)
    MOJOD           reduce using rule 70 (expression -> FLOAT .)
    KTEB            reduce using rule 70 (expression -> FLOAT .)
    (               reduce using rule 70 (expression -> FLOAT .)
    INT             reduce using rule 70 (expression -> FLOAT .)
    FLOAT           reduce using rule 70 (expression -> FLOAT .)
    STRING          reduce using rule 70 (expression -> FLOAT .)
    KHATE2          reduce using rule 70 (expression -> FLOAT .)
    S7I7            reduce using rule 70 (expression -> FLOAT .)
    WALO            reduce using rule 70 (expression -> FLOAT .)
    JEREB           reduce using rule 70 (expression -> FLOAT .)
    ILA             reduce using rule 70 (expression -> FLOAT .)
    LKOLA           reduce using rule 70 (expression -> FLOAT .)
    MA7ED           reduce using rule 70 (expression -> FLOAT .)
    DIR             reduce using rule 70 (expression -> FLOAT .)
    QRA             reduce using rule 70 (expression -> FLOAT .)
    TOL             reduce using rule 70 (expression -> FLOAT .)
    TA3RIF          reduce using rule 70 (expression -> FLOAT .)
    RED             reduce using rule 70 (expression -> FLOAT .)
    [               reduce using rule 70 (expression -> FLOAT .)
    $end            reduce using rule 70 (expression -> FLOAT .)
    )               reduce using rule 70 (expression -> FLOAT .)
    }               reduce using rule 70 (expression -> FLOAT .)
    ]               reduce using rule 70 (expression -> FLOAT .)
    ,               reduce using rule 70 (expression -> FLOAT .)
    ;               reduce using rule 70 (expression -> FLOAT .)
    :               reduce using rule 70 (expression -> FLOAT .)
    SUP             reduce using rule 70 (expression -> FLOAT .)
    INF             reduce using rule 70 (expression -> FLOAT .)
    EQUALSCOMP      reduce using rule 70 (expression -> FLOAT .)
    SUPEQUALS       reduce using rule 70 (expression -> FLOAT .)
    INFEQUALS       reduce using rule 70 (expression -> FLOAT .)
    DIFFERENT       reduce using rule 70 (expression -> FLOAT .)
    WA              reduce using rule 70 (expression -> FLOAT .)
    AW              reduce using rule 70 (expression -> FLOAT .)


state 34

    (71) expression -> STRING .

    PLUS            reduce using rule 71 (expression -> STRING .)
    MINUS           reduce using rule 71 (expression -> STRING .)
    TIMES           reduce using rule 71 (expression -> STRING .)
    DIVIDE          reduce using rule 71 (expression -> STRING .)
    MODULO          reduce using rule 71 (expression -> STRING .)
    POWER           reduce using rule 71 (expression -> STRING .)
    KHREJ           reduce using rule 71 (expression -> STRING .)
    KMEL            reduce using rule 71 (expression -> STRING .)
    ID              reduce using rule 71 (expression -> STRING .)
    MOJOD           reduce using rule 71 (expression -> STRING .)
    KTEB            reduce using rule 71 (expression -> STRING .)
    (               reduce using rule 71 (expression -> STRING .)
    INT             reduce using rule 71 (expression -> STRING .)
    FLOAT           reduce using rule 71 (expression -> STRING .)
    STRING          reduce using rule 71 (expression -> STRING .)
    KHATE2          reduce using rule 71 (expression -> STRING .)
    S7I7            reduce using rule 71 (expression -> STRING .)
    WALO            reduce using rule 71 (expression -> STRING .)
    JEREB           reduce using rule 71 (expression -> STRING .)
    ILA             reduce using rule 71 (expression -> STRING .)
    LKOLA           reduce using rule 71 (expression -> STRING .)
    MA7ED           reduce using rule 71 (expression -> STRING .)
    DIR             reduce using rule 71 (expression -> STRING .)
    QRA             reduce using rule 71 (expression -> STRING .)
    TOL             reduce using rule 71 (expression -> STRING .)
    TA3RIF          reduce using rule 71 (expression -> STRING .)
    RED             reduce using rule 71 (expression -> STRING .)
    [               reduce using rule 71 (expression -> STRING .)
    $end            reduce using rule 71 (expression -> STRING .)
    )               reduce using rule 71 (expression -> STRING .)
    }               reduce using rule 71 (expression -> STRING .)
    ]               reduce using rule 71 (expression -> STRING .)
    ,               reduce using rule 71 (expression -> STRING .)
    ;               reduce using rule 71 (expression -> STRING .)
    :               reduce using rule 71 (expression -> STRING .)
    SUP             reduce using rule 71 (expression -> STRING .)
    INF             reduce using rule 71 (expression -> STRING .)
    EQUALSCOMP      reduce using rule 71 (expression -> STRING .)
    SUPEQUALS       reduce using rule 71 (expression -> STRING .)
    INFEQUALS       reduce using rule 71 (expression -> STRING .)
    DIFFERENT       reduce using rule 71 (expression -> STRING .)
    WA              reduce using rule 71 (expression -> STRING .)
    AW              reduce using rule 71 (expression -> STRING .)


state 35

    (72) expression -> KHATE2 .

    PLUS            reduce using rule 72 (expression -> KHATE2 .)
    MINUS           reduce using rule 72 (expression -> KHATE2 .)
    TIMES           reduce using rule 72 (expression -> KHATE2 .)
    DIVIDE          reduce using rule 72 (expression -> KHATE2 .)
    MODULO          reduce using rule 72 (expression -> KHATE2 .)
    POWER           reduce using rule 72 (expression -> KHATE2 .)
    KHREJ           reduce using rule 72 (expression -> KHATE2 .)
    KMEL            reduce using rule 72 (expression -> KHATE2 .)
    ID              reduce using rule 72 (expression -> KHATE2 .)
    MOJOD           reduce using rule 72 (expression -> KHATE2 .)
    KTEB            reduce using rule 72 (expression -> KHATE2 .)
    (               reduce using rule 72 (expression -> KHATE2 .)
    INT             reduce using rule 72 (expression -> KHATE2 .)
    FLOAT           reduce using rule 72 (expression -> KHATE2 .)
    STRING          reduce using rule 72 (expression -> KHATE2 .)
    KHATE2          reduce using rule 72 (expression -> KHATE2 .)
    S7I7            reduce using rule 72 (expression -> KHATE2 .)
    WALO            reduce using rule 72 (expression -> KHATE2 .)
    JEREB           reduce using rule 72 (expression -> KHATE2 .)
    ILA             reduce using rule 72 (expression -> KHATE2 .)
    LKOLA           reduce using rule 72 (expression -> KHATE2 .)
    MA7ED           reduce using rule 72 (expression -> KHATE2 .)
    DIR             reduce using rule 72 (expression -> KHATE2 .)
    QRA             reduce using rule 72 (expression -> KHATE2 .)
    TOL             reduce using rule 72 (expression -> KHATE2 .)
    TA3RIF          reduce using rule 72 (expression -> KHATE2 .)
    RED             reduce using rule 72 (expression -> KHATE2 .)
    [               reduce using rule 72 (expression -> KHATE2 .)
    $end            reduce using rule 72 (expression -> KHATE2 .)
    )               reduce using rule 72 (expression -> KHATE2 .)
    }               reduce using rule 72 (expression -> KHATE2 .)
    ]               reduce using rule 72 (expression -> KHATE2 .)
    ,               reduce using rule 72 (expression -> KHATE2 .)
    ;               reduce using rule 72 (expression -> KHATE2 .)
    :               reduce using rule 72 (expression -> KHATE2 .)
    SUP             reduce using rule 72 (expression -> KHATE2 .)
    INF             reduce using rule 72 (expression -> KHATE2 .)
    EQUALSCOMP      reduce using rule 72 (expression -> KHATE2 .)
    SUPEQUALS       reduce using rule 72 (expression -> KHATE2 .)
    INFEQUALS       reduce using rule 72 (expression -> KHATE2 .)
    DIFFERENT       reduce using rule 72 (expression -> KHATE2 .)
    WA              reduce using rule 72 (expression -> KHATE2 .)
    AW              reduce using rule 72 (expression -> KHATE2 .)


state 36

    (73) expression -> S7I7 .

    PLUS            reduce using rule 73 (expression -> S7I7 .)
    MINUS           reduce using rule 73 (expression -> S7I7 .)
    TIMES           reduce using rule 73 (expression -> S7I7 .)
    DIVIDE          reduce using rule 73 (expression -> S7I7 .)
    MODULO          reduce using rule 73 (expression -> S7I7 .)
    POWER           reduce using rule 73 (expression -> S7I7 .)
    KHREJ           reduce using rule 73 (expression -> S7I7 .)
    KMEL            reduce using rule 73 (expression -> S7I7 .)
    ID              reduce using rule 73 (expression -> S7I7 .)
    MOJOD           reduce using rule 73 (expression -> S7I7 .)
    KTEB            reduce using rule 73 (expression -> S7I7 .)
    (               reduce using rule 73 (expression -> S7I7 .)
    INT             reduce using rule 73 (expression -> S7I7 .)
    FLOAT           reduce using rule 73 (expression -> S7I7 .)
    STRING          reduce using rule 73 (expression -> S7I7 .)
    KHATE2          reduce using rule 73 (expression -> S7I7 .)
    S7I7            reduce using rule 73 (expression -> S7I7 .)
    WALO            reduce using rule 73 (expression -> S7I7 .)
    JEREB           reduce using rule 73 (expression -> S7I7 .)
    ILA             reduce using rule 73 (expression -> S7I7 .)
    LKOLA           reduce using rule 73 (expression -> S7I7 .)
    MA7ED           reduce using rule 73 (expression -> S7I7 .)
    DIR             reduce using rule 73 (expression -> S7I7 .)
    QRA             reduce using rule 73 (expression -> S7I7 .)
    TOL             reduce using rule 73 (expression -> S7I7 .)
    TA3RIF          reduce using rule 73 (expression -> S7I7 .)
    RED             reduce using rule 73 (expression -> S7I7 .)
    [               reduce using rule 73 (expression -> S7I7 .)
    $end            reduce using rule 73 (expression -> S7I7 .)
    )               reduce using rule 73 (expression -> S7I7 .)
    }               reduce using rule 73 (expression -> S7I7 .)
    ]               reduce using rule 73 (expression -> S7I7 .)
    ,               reduce using rule 73 (expression -> S7I7 .)
    ;               reduce using rule 73 (expression -> S7I7 .)
    :               reduce using rule 73 (expression -> S7I7 .)
    SUP             reduce using rule 73 (expression -> S7I7 .)
    INF             reduce using rule 73 (expression -> S7I7 .)
    EQUALSCOMP      reduce using rule 73 (expression -> S7I7 .)
    SUPEQUALS       reduce using rule 73 (expression -> S7I7 .)
    INFEQUALS       reduce using rule 73 (expression -> S7I7 .)
    DIFFERENT       reduce using rule 73 (expression -> S7I7 .)
    WA              reduce using rule 73 (expression -> S7I7 .)
    AW              reduce using rule 73 (expression -> S7I7 .)


state 37

    (74) expression -> WALO .

    PLUS            reduce using rule 74 (expression -> WALO .)
    MINUS           reduce using rule 74 (expression -> WALO .)
    TIMES           reduce using rule 74 (expression -> WALO .)
    DIVIDE          reduce using rule 74 (expression -> WALO .)
    MODULO          reduce using rule 74 (expression -> WALO .)
    POWER           reduce using rule 74 (expression -> WALO .)
    KHREJ           reduce using rule 74 (expression -> WALO .)
    KMEL            reduce using rule 74 (expression -> WALO .)
    ID              reduce using rule 74 (expression -> WALO .)
    MOJOD           reduce using rule 74 (expression -> WALO .)
    KTEB            reduce using rule 74 (expression -> WALO .)
    (               reduce using rule 74 (expression -> WALO .)
    INT             reduce using rule 74 (expression -> WALO .)
    FLOAT           reduce using rule 74 (expression -> WALO .)
    STRING          reduce using rule 74 (expression -> WALO .)
    KHATE2          reduce using rule 74 (expression -> WALO .)
    S7I7            reduce using rule 74 (expression -> WALO .)
    WALO            reduce using rule 74 (expression -> WALO .)
    JEREB           reduce using rule 74 (expression -> WALO .)
    ILA             reduce using rule 74 (expression -> WALO .)
    LKOLA           reduce using rule 74 (expression -> WALO .)
    MA7ED           reduce using rule 74 (expression -> WALO .)
    DIR             reduce using rule 74 (expression -> WALO .)
    QRA             reduce using rule 74 (expression -> WALO .)
    TOL             reduce using rule 74 (expression -> WALO .)
    TA3RIF          reduce using rule 74 (expression -> WALO .)
    RED             reduce using rule 74 (expression -> WALO .)
    [               reduce using rule 74 (expression -> WALO .)
    $end            reduce using rule 74 (expression -> WALO .)
    )               reduce using rule 74 (expression -> WALO .)
    }               reduce using rule 74 (expression -> WALO .)
    ]               reduce using rule 74 (expression -> WALO .)
    ,               reduce using rule 74 (expression -> WALO .)
    ;               reduce using rule 74 (expression -> WALO .)
    :               reduce using rule 74 (expression -> WALO .)
    SUP             reduce using rule 74 (expression -> WALO .)
    INF             reduce using rule 74 (expression -> WALO .)
    EQUALSCOMP      reduce using rule 74 (expression -> WALO .)
    SUPEQUALS       reduce using rule 74 (expression -> WALO .)
    INFEQUALS       reduce using rule 74 (expression -> WALO .)
    DIFFERENT       reduce using rule 74 (expression -> WALO .)
    WA              reduce using rule 74 (expression -> WALO .)
    AW              reduce using rule 74 (expression -> WALO .)


state 38

    (75) expression -> array .

    PLUS            reduce using rule 75 (expression -> array .)
    MINUS           reduce using rule 75 (expression -> array .)
    TIMES           reduce using rule 75 (expression -> array .)
    DIVIDE          reduce using rule 75 (expression -> array .)
    MODULO          reduce using rule 75 (expression -> array .)
    POWER           reduce using rule 75 (expression -> array .)
    KHREJ           reduce using rule 75 (expression -> array .)
    KMEL            reduce using rule 75 (expression -> array .)
    ID              reduce using rule 75 (expression -> array .)
    MOJOD           reduce using rule 75 (expression -> array .)
    KTEB            reduce using rule 75 (expression -> array .)
    (               reduce using rule 75 (expression -> array .)
    INT             reduce using rule 75 (expression -> array .)
    FLOAT           reduce using rule 75 (expression -> array .)
    STRING          reduce using rule 75 (expression -> array .)
    KHATE2          reduce using rule 75 (expression -> array .)
    S7I7            reduce using rule 75 (expression -> array .)
    WALO            reduce using rule 75 (expression -> array .)
    JEREB           reduce using rule 75 (expression -> array .)
    ILA             reduce using rule 75 (expression -> array .)
    LKOLA           reduce using rule 75 (expression -> array .)
    MA7ED           reduce using rule 75 (expression -> array .)
    DIR             reduce using rule 75 (expression -> array .)
    QRA             reduce using rule 75 (expression -> array .)
    TOL             reduce using rule 75 (expression -> array .)
    TA3RIF          reduce using rule 75 (expression -> array .)
    RED             reduce using rule 75 (expression -> array .)
    [               reduce using rule 75 (expression -> array .)
    $end            reduce using rule 75 (expression -> array .)
    )               reduce using rule 75 (expression -> array .)
    }               reduce using rule 75 (expression -> array .)
    ]               reduce using rule 75 (expression -> array .)
    ,               reduce using rule 75 (expression -> array .)
    ;               reduce using rule 75 (expression -> array .)
    :               reduce using rule 75 (expression -> array .)
    SUP             reduce using rule 75 (expression -> array .)
    INF             reduce using rule 75 (expression -> array .)
    EQUALSCOMP      reduce using rule 75 (expression -> array .)
    SUPEQUALS       reduce using rule 75 (expression -> array .)
    INFEQUALS       reduce using rule 75 (expression -> array .)
    DIFFERENT       reduce using rule 75 (expression -> array .)
    WA              reduce using rule 75 (expression -> array .)
    AW              reduce using rule 75 (expression -> array .)


state 39

    (67) try -> JEREB . { instruction_list } MASD9CH { instruction_list }
    (68) try -> JEREB . { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }

    {               shift and go to state 75


state 40

    (9) if -> ILA . ( condition ) { instruction_list }
    (10) if -> ILA . ( condition ) { instruction_list } WLA { instruction_list }

    (               shift and go to state 76


state 41

    (11) for -> LKOLA . ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> LKOLA . ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> LKOLA . ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> LKOLA . ( expression ; condition ; decrementation ) { instruction_list }

    (               shift and go to state 77


state 42

    (15) while -> MA7ED . ( condition ) { instruction_list }

    (               shift and go to state 78


state 43

    (16) doWhile -> DIR . { instruction_list } MA7ED ( condition )

    {               shift and go to state 79


state 44

    (65) input -> QRA . ( expression )
    (66) input -> QRA . ( )

    (               shift and go to state 80


state 45

    (109) len -> TOL . ( expression )

    (               shift and go to state 81


state 46

    (101) func -> TA3RIF . ID ( parameter_list ) { instruction_list }
    (102) func -> TA3RIF . ID ( ) { instruction_list }

    ID              shift and go to state 82


state 47

    (105) return -> RED . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 83
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 48

    (81) array -> [ . arraylist ]
    (82) array -> [ . ]
    (79) arraylist -> . expression
    (80) arraylist -> . arraylist , expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    ]               shift and go to state 85
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    arraylist                      shift and go to state 84
    expression                     shift and go to state 86
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 49

    (38) instruction_list -> instruction_list instruction .

    KHREJ           reduce using rule 38 (instruction_list -> instruction_list instruction .)
    KMEL            reduce using rule 38 (instruction_list -> instruction_list instruction .)
    ID              reduce using rule 38 (instruction_list -> instruction_list instruction .)
    MOJOD           reduce using rule 38 (instruction_list -> instruction_list instruction .)
    KTEB            reduce using rule 38 (instruction_list -> instruction_list instruction .)
    (               reduce using rule 38 (instruction_list -> instruction_list instruction .)
    MINUS           reduce using rule 38 (instruction_list -> instruction_list instruction .)
    PLUS            reduce using rule 38 (instruction_list -> instruction_list instruction .)
    INT             reduce using rule 38 (instruction_list -> instruction_list instruction .)
    FLOAT           reduce using rule 38 (instruction_list -> instruction_list instruction .)
    STRING          reduce using rule 38 (instruction_list -> instruction_list instruction .)
    KHATE2          reduce using rule 38 (instruction_list -> instruction_list instruction .)
    S7I7            reduce using rule 38 (instruction_list -> instruction_list instruction .)
    WALO            reduce using rule 38 (instruction_list -> instruction_list instruction .)
    JEREB           reduce using rule 38 (instruction_list -> instruction_list instruction .)
    ILA             reduce using rule 38 (instruction_list -> instruction_list instruction .)
    LKOLA           reduce using rule 38 (instruction_list -> instruction_list instruction .)
    MA7ED           reduce using rule 38 (instruction_list -> instruction_list instruction .)
    DIR             reduce using rule 38 (instruction_list -> instruction_list instruction .)
    QRA             reduce using rule 38 (instruction_list -> instruction_list instruction .)
    TOL             reduce using rule 38 (instruction_list -> instruction_list instruction .)
    TA3RIF          reduce using rule 38 (instruction_list -> instruction_list instruction .)
    RED             reduce using rule 38 (instruction_list -> instruction_list instruction .)
    [               reduce using rule 38 (instruction_list -> instruction_list instruction .)
    $end            reduce using rule 38 (instruction_list -> instruction_list instruction .)
    }               reduce using rule 38 (instruction_list -> instruction_list instruction .)


state 50

    (55) expression -> expression PLUS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 87
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 51

    (56) expression -> expression MINUS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 88
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 52

    (57) expression -> expression TIMES . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 89
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 53

    (58) expression -> expression DIVIDE . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 90
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 54

    (59) expression -> expression MODULO . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 91
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 55

    (60) expression -> expression POWER . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 92
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 56

    (4) var_assign -> ID EQUALS . expression
    (5) var_assign -> ID EQUALS . input
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    QRA             shift and go to state 44
    [               shift and go to state 48

    expression                     shift and go to state 93
    input                          shift and go to state 94
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 57

    (2) incrementation -> ID INCREMENTATION .

    KHREJ           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KMEL            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    ID              reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MOJOD           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KTEB            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    (               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MINUS           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    PLUS            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    INT             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    FLOAT           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    STRING          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KHATE2          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    S7I7            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    WALO            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    JEREB           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    ILA             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    LKOLA           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MA7ED           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    DIR             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    QRA             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    TOL             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    TA3RIF          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    RED             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    [               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    $end            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    )               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    }               reduce using rule 2 (incrementation -> ID INCREMENTATION .)


state 58

    (3) decrementation -> ID DECREMENTATION .

    KHREJ           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KMEL            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    ID              reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MOJOD           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KTEB            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    (               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MINUS           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    PLUS            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    INT             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    FLOAT           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    STRING          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KHATE2          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    S7I7            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    WALO            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    JEREB           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    ILA             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    LKOLA           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MA7ED           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    DIR             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    QRA             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    TOL             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    TA3RIF          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    RED             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    [               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    $end            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    )               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    }               reduce using rule 3 (decrementation -> ID DECREMENTATION .)


state 59

    (103) appel_func -> ID ( . argument_list )
    (104) appel_func -> ID ( . )
    (96) argument_list -> . expression
    (97) argument_list -> . argument_list , expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    )               shift and go to state 96
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    argument_list                  shift and go to state 95
    expression                     shift and go to state 97
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 60

    (90) arrfn -> ID . . ZID ( expression )
    (91) arrfn -> ID . . KBER ( array )
    (92) arrfn -> ID . . KHWI ( )
    (93) arrfn -> ID . . DKHEL ( expression , expression )
    (94) arrfn -> ID . . MSSE7 ( expression )
    (95) arrfn -> ID . . MSSE7 ( )

    ZID             shift and go to state 98
    KBER            shift and go to state 99
    KHWI            shift and go to state 100
    DKHEL           shift and go to state 101
    MSSE7           shift and go to state 102


state 61

    (83) arrayelt -> ID dimensions .
    (85) dimensions -> dimensions . [ expression ]

  ! shift/reduce conflict for [ resolved as shift
    EQUALS          reduce using rule 83 (arrayelt -> ID dimensions .)
    PLUS            reduce using rule 83 (arrayelt -> ID dimensions .)
    MINUS           reduce using rule 83 (arrayelt -> ID dimensions .)
    TIMES           reduce using rule 83 (arrayelt -> ID dimensions .)
    DIVIDE          reduce using rule 83 (arrayelt -> ID dimensions .)
    MODULO          reduce using rule 83 (arrayelt -> ID dimensions .)
    POWER           reduce using rule 83 (arrayelt -> ID dimensions .)
    KHREJ           reduce using rule 83 (arrayelt -> ID dimensions .)
    KMEL            reduce using rule 83 (arrayelt -> ID dimensions .)
    ID              reduce using rule 83 (arrayelt -> ID dimensions .)
    MOJOD           reduce using rule 83 (arrayelt -> ID dimensions .)
    KTEB            reduce using rule 83 (arrayelt -> ID dimensions .)
    (               reduce using rule 83 (arrayelt -> ID dimensions .)
    INT             reduce using rule 83 (arrayelt -> ID dimensions .)
    FLOAT           reduce using rule 83 (arrayelt -> ID dimensions .)
    STRING          reduce using rule 83 (arrayelt -> ID dimensions .)
    KHATE2          reduce using rule 83 (arrayelt -> ID dimensions .)
    S7I7            reduce using rule 83 (arrayelt -> ID dimensions .)
    WALO            reduce using rule 83 (arrayelt -> ID dimensions .)
    JEREB           reduce using rule 83 (arrayelt -> ID dimensions .)
    ILA             reduce using rule 83 (arrayelt -> ID dimensions .)
    LKOLA           reduce using rule 83 (arrayelt -> ID dimensions .)
    MA7ED           reduce using rule 83 (arrayelt -> ID dimensions .)
    DIR             reduce using rule 83 (arrayelt -> ID dimensions .)
    QRA             reduce using rule 83 (arrayelt -> ID dimensions .)
    TOL             reduce using rule 83 (arrayelt -> ID dimensions .)
    TA3RIF          reduce using rule 83 (arrayelt -> ID dimensions .)
    RED             reduce using rule 83 (arrayelt -> ID dimensions .)
    $end            reduce using rule 83 (arrayelt -> ID dimensions .)
    )               reduce using rule 83 (arrayelt -> ID dimensions .)
    }               reduce using rule 83 (arrayelt -> ID dimensions .)
    ]               reduce using rule 83 (arrayelt -> ID dimensions .)
    ,               reduce using rule 83 (arrayelt -> ID dimensions .)
    ;               reduce using rule 83 (arrayelt -> ID dimensions .)
    :               reduce using rule 83 (arrayelt -> ID dimensions .)
    SUP             reduce using rule 83 (arrayelt -> ID dimensions .)
    INF             reduce using rule 83 (arrayelt -> ID dimensions .)
    EQUALSCOMP      reduce using rule 83 (arrayelt -> ID dimensions .)
    SUPEQUALS       reduce using rule 83 (arrayelt -> ID dimensions .)
    INFEQUALS       reduce using rule 83 (arrayelt -> ID dimensions .)
    DIFFERENT       reduce using rule 83 (arrayelt -> ID dimensions .)
    WA              reduce using rule 83 (arrayelt -> ID dimensions .)
    AW              reduce using rule 83 (arrayelt -> ID dimensions .)
    [               shift and go to state 103

  ! [               [ reduce using rule 83 (arrayelt -> ID dimensions .) ]


state 62

    (86) arrayslice -> ID [ . expression : expression ]
    (87) arrayslice -> ID [ . : expression ]
    (88) arrayslice -> ID [ . expression : ]
    (89) arrayslice -> ID [ . : ]
    (84) dimensions -> [ . expression ]
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    :               shift and go to state 105
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 104
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 63

    (6) var_assign -> MOJOD var_assign .

    KHREJ           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    KMEL            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    ID              reduce using rule 6 (var_assign -> MOJOD var_assign .)
    MOJOD           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    KTEB            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    (               reduce using rule 6 (var_assign -> MOJOD var_assign .)
    MINUS           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    PLUS            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    INT             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    FLOAT           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    STRING          reduce using rule 6 (var_assign -> MOJOD var_assign .)
    KHATE2          reduce using rule 6 (var_assign -> MOJOD var_assign .)
    S7I7            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    WALO            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    JEREB           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    ILA             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    LKOLA           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    MA7ED           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    DIR             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    QRA             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    TOL             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    TA3RIF          reduce using rule 6 (var_assign -> MOJOD var_assign .)
    RED             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    [               reduce using rule 6 (var_assign -> MOJOD var_assign .)
    $end            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    }               reduce using rule 6 (var_assign -> MOJOD var_assign .)
    ;               reduce using rule 6 (var_assign -> MOJOD var_assign .)


state 64

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input

    EQUALS          shift and go to state 56


state 65

    (7) arrayelt_assign -> arrayelt EQUALS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    arrayelt                       shift and go to state 70
    expression                     shift and go to state 106
    array                          shift and go to state 38
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 66

    (8) arrayelt_assign -> arrayslice EQUALS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    arrayslice                     shift and go to state 71
    expression                     shift and go to state 107
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrfn                          shift and go to state 72

state 67

    (106) printing -> KTEB ( . condition )
    (107) printing -> KTEB ( . incrementation )
    (108) printing -> KTEB ( . decrementation )
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 108
    L3AKSS          shift and go to state 112
    ID              shift and go to state 114
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 109
    incrementation                 shift and go to state 110
    decrementation                 shift and go to state 111
    expression                     shift and go to state 113
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 68

    (61) expression -> ( expression . )
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               shift and go to state 115
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 69

    (64) expression -> ID .
    (83) arrayelt -> ID . dimensions
    (86) arrayslice -> ID . [ expression : expression ]
    (87) arrayslice -> ID . [ : expression ]
    (88) arrayslice -> ID . [ expression : ]
    (89) arrayslice -> ID . [ : ]
    (90) arrfn -> ID . . ZID ( expression )
    (91) arrfn -> ID . . KBER ( array )
    (92) arrfn -> ID . . KHWI ( )
    (93) arrfn -> ID . . DKHEL ( expression , expression )
    (94) arrfn -> ID . . MSSE7 ( expression )
    (95) arrfn -> ID . . MSSE7 ( )
    (84) dimensions -> . [ expression ]
    (85) dimensions -> . dimensions [ expression ]

  ! shift/reduce conflict for [ resolved as shift
    )               reduce using rule 64 (expression -> ID .)
    PLUS            reduce using rule 64 (expression -> ID .)
    MINUS           reduce using rule 64 (expression -> ID .)
    TIMES           reduce using rule 64 (expression -> ID .)
    DIVIDE          reduce using rule 64 (expression -> ID .)
    MODULO          reduce using rule 64 (expression -> ID .)
    POWER           reduce using rule 64 (expression -> ID .)
    KHREJ           reduce using rule 64 (expression -> ID .)
    KMEL            reduce using rule 64 (expression -> ID .)
    ID              reduce using rule 64 (expression -> ID .)
    MOJOD           reduce using rule 64 (expression -> ID .)
    KTEB            reduce using rule 64 (expression -> ID .)
    (               reduce using rule 64 (expression -> ID .)
    INT             reduce using rule 64 (expression -> ID .)
    FLOAT           reduce using rule 64 (expression -> ID .)
    STRING          reduce using rule 64 (expression -> ID .)
    KHATE2          reduce using rule 64 (expression -> ID .)
    S7I7            reduce using rule 64 (expression -> ID .)
    WALO            reduce using rule 64 (expression -> ID .)
    JEREB           reduce using rule 64 (expression -> ID .)
    ILA             reduce using rule 64 (expression -> ID .)
    LKOLA           reduce using rule 64 (expression -> ID .)
    MA7ED           reduce using rule 64 (expression -> ID .)
    DIR             reduce using rule 64 (expression -> ID .)
    QRA             reduce using rule 64 (expression -> ID .)
    TOL             reduce using rule 64 (expression -> ID .)
    TA3RIF          reduce using rule 64 (expression -> ID .)
    RED             reduce using rule 64 (expression -> ID .)
    $end            reduce using rule 64 (expression -> ID .)
    }               reduce using rule 64 (expression -> ID .)
    ]               reduce using rule 64 (expression -> ID .)
    ,               reduce using rule 64 (expression -> ID .)
    ;               reduce using rule 64 (expression -> ID .)
    :               reduce using rule 64 (expression -> ID .)
    SUP             reduce using rule 64 (expression -> ID .)
    INF             reduce using rule 64 (expression -> ID .)
    EQUALSCOMP      reduce using rule 64 (expression -> ID .)
    SUPEQUALS       reduce using rule 64 (expression -> ID .)
    INFEQUALS       reduce using rule 64 (expression -> ID .)
    DIFFERENT       reduce using rule 64 (expression -> ID .)
    WA              reduce using rule 64 (expression -> ID .)
    AW              reduce using rule 64 (expression -> ID .)
    [               shift and go to state 62
    .               shift and go to state 60

  ! [               [ reduce using rule 64 (expression -> ID .) ]

    dimensions                     shift and go to state 61

state 70

    (76) expression -> arrayelt .

    )               reduce using rule 76 (expression -> arrayelt .)
    PLUS            reduce using rule 76 (expression -> arrayelt .)
    MINUS           reduce using rule 76 (expression -> arrayelt .)
    TIMES           reduce using rule 76 (expression -> arrayelt .)
    DIVIDE          reduce using rule 76 (expression -> arrayelt .)
    MODULO          reduce using rule 76 (expression -> arrayelt .)
    POWER           reduce using rule 76 (expression -> arrayelt .)
    KHREJ           reduce using rule 76 (expression -> arrayelt .)
    KMEL            reduce using rule 76 (expression -> arrayelt .)
    ID              reduce using rule 76 (expression -> arrayelt .)
    MOJOD           reduce using rule 76 (expression -> arrayelt .)
    KTEB            reduce using rule 76 (expression -> arrayelt .)
    (               reduce using rule 76 (expression -> arrayelt .)
    INT             reduce using rule 76 (expression -> arrayelt .)
    FLOAT           reduce using rule 76 (expression -> arrayelt .)
    STRING          reduce using rule 76 (expression -> arrayelt .)
    KHATE2          reduce using rule 76 (expression -> arrayelt .)
    S7I7            reduce using rule 76 (expression -> arrayelt .)
    WALO            reduce using rule 76 (expression -> arrayelt .)
    JEREB           reduce using rule 76 (expression -> arrayelt .)
    ILA             reduce using rule 76 (expression -> arrayelt .)
    LKOLA           reduce using rule 76 (expression -> arrayelt .)
    MA7ED           reduce using rule 76 (expression -> arrayelt .)
    DIR             reduce using rule 76 (expression -> arrayelt .)
    QRA             reduce using rule 76 (expression -> arrayelt .)
    TOL             reduce using rule 76 (expression -> arrayelt .)
    TA3RIF          reduce using rule 76 (expression -> arrayelt .)
    RED             reduce using rule 76 (expression -> arrayelt .)
    [               reduce using rule 76 (expression -> arrayelt .)
    $end            reduce using rule 76 (expression -> arrayelt .)
    }               reduce using rule 76 (expression -> arrayelt .)
    ]               reduce using rule 76 (expression -> arrayelt .)
    ,               reduce using rule 76 (expression -> arrayelt .)
    ;               reduce using rule 76 (expression -> arrayelt .)
    :               reduce using rule 76 (expression -> arrayelt .)
    SUP             reduce using rule 76 (expression -> arrayelt .)
    INF             reduce using rule 76 (expression -> arrayelt .)
    EQUALSCOMP      reduce using rule 76 (expression -> arrayelt .)
    SUPEQUALS       reduce using rule 76 (expression -> arrayelt .)
    INFEQUALS       reduce using rule 76 (expression -> arrayelt .)
    DIFFERENT       reduce using rule 76 (expression -> arrayelt .)
    WA              reduce using rule 76 (expression -> arrayelt .)
    AW              reduce using rule 76 (expression -> arrayelt .)


state 71

    (77) expression -> arrayslice .

    )               reduce using rule 77 (expression -> arrayslice .)
    PLUS            reduce using rule 77 (expression -> arrayslice .)
    MINUS           reduce using rule 77 (expression -> arrayslice .)
    TIMES           reduce using rule 77 (expression -> arrayslice .)
    DIVIDE          reduce using rule 77 (expression -> arrayslice .)
    MODULO          reduce using rule 77 (expression -> arrayslice .)
    POWER           reduce using rule 77 (expression -> arrayslice .)
    KHREJ           reduce using rule 77 (expression -> arrayslice .)
    KMEL            reduce using rule 77 (expression -> arrayslice .)
    ID              reduce using rule 77 (expression -> arrayslice .)
    MOJOD           reduce using rule 77 (expression -> arrayslice .)
    KTEB            reduce using rule 77 (expression -> arrayslice .)
    (               reduce using rule 77 (expression -> arrayslice .)
    INT             reduce using rule 77 (expression -> arrayslice .)
    FLOAT           reduce using rule 77 (expression -> arrayslice .)
    STRING          reduce using rule 77 (expression -> arrayslice .)
    KHATE2          reduce using rule 77 (expression -> arrayslice .)
    S7I7            reduce using rule 77 (expression -> arrayslice .)
    WALO            reduce using rule 77 (expression -> arrayslice .)
    JEREB           reduce using rule 77 (expression -> arrayslice .)
    ILA             reduce using rule 77 (expression -> arrayslice .)
    LKOLA           reduce using rule 77 (expression -> arrayslice .)
    MA7ED           reduce using rule 77 (expression -> arrayslice .)
    DIR             reduce using rule 77 (expression -> arrayslice .)
    QRA             reduce using rule 77 (expression -> arrayslice .)
    TOL             reduce using rule 77 (expression -> arrayslice .)
    TA3RIF          reduce using rule 77 (expression -> arrayslice .)
    RED             reduce using rule 77 (expression -> arrayslice .)
    [               reduce using rule 77 (expression -> arrayslice .)
    $end            reduce using rule 77 (expression -> arrayslice .)
    }               reduce using rule 77 (expression -> arrayslice .)
    ]               reduce using rule 77 (expression -> arrayslice .)
    ,               reduce using rule 77 (expression -> arrayslice .)
    ;               reduce using rule 77 (expression -> arrayslice .)
    :               reduce using rule 77 (expression -> arrayslice .)
    SUP             reduce using rule 77 (expression -> arrayslice .)
    INF             reduce using rule 77 (expression -> arrayslice .)
    EQUALSCOMP      reduce using rule 77 (expression -> arrayslice .)
    SUPEQUALS       reduce using rule 77 (expression -> arrayslice .)
    INFEQUALS       reduce using rule 77 (expression -> arrayslice .)
    DIFFERENT       reduce using rule 77 (expression -> arrayslice .)
    WA              reduce using rule 77 (expression -> arrayslice .)
    AW              reduce using rule 77 (expression -> arrayslice .)


state 72

    (78) expression -> arrfn .

    )               reduce using rule 78 (expression -> arrfn .)
    PLUS            reduce using rule 78 (expression -> arrfn .)
    MINUS           reduce using rule 78 (expression -> arrfn .)
    TIMES           reduce using rule 78 (expression -> arrfn .)
    DIVIDE          reduce using rule 78 (expression -> arrfn .)
    MODULO          reduce using rule 78 (expression -> arrfn .)
    POWER           reduce using rule 78 (expression -> arrfn .)
    KHREJ           reduce using rule 78 (expression -> arrfn .)
    KMEL            reduce using rule 78 (expression -> arrfn .)
    ID              reduce using rule 78 (expression -> arrfn .)
    MOJOD           reduce using rule 78 (expression -> arrfn .)
    KTEB            reduce using rule 78 (expression -> arrfn .)
    (               reduce using rule 78 (expression -> arrfn .)
    INT             reduce using rule 78 (expression -> arrfn .)
    FLOAT           reduce using rule 78 (expression -> arrfn .)
    STRING          reduce using rule 78 (expression -> arrfn .)
    KHATE2          reduce using rule 78 (expression -> arrfn .)
    S7I7            reduce using rule 78 (expression -> arrfn .)
    WALO            reduce using rule 78 (expression -> arrfn .)
    JEREB           reduce using rule 78 (expression -> arrfn .)
    ILA             reduce using rule 78 (expression -> arrfn .)
    LKOLA           reduce using rule 78 (expression -> arrfn .)
    MA7ED           reduce using rule 78 (expression -> arrfn .)
    DIR             reduce using rule 78 (expression -> arrfn .)
    QRA             reduce using rule 78 (expression -> arrfn .)
    TOL             reduce using rule 78 (expression -> arrfn .)
    TA3RIF          reduce using rule 78 (expression -> arrfn .)
    RED             reduce using rule 78 (expression -> arrfn .)
    [               reduce using rule 78 (expression -> arrfn .)
    $end            reduce using rule 78 (expression -> arrfn .)
    }               reduce using rule 78 (expression -> arrfn .)
    ]               reduce using rule 78 (expression -> arrfn .)
    ,               reduce using rule 78 (expression -> arrfn .)
    ;               reduce using rule 78 (expression -> arrfn .)
    :               reduce using rule 78 (expression -> arrfn .)
    SUP             reduce using rule 78 (expression -> arrfn .)
    INF             reduce using rule 78 (expression -> arrfn .)
    EQUALSCOMP      reduce using rule 78 (expression -> arrfn .)
    SUPEQUALS       reduce using rule 78 (expression -> arrfn .)
    INFEQUALS       reduce using rule 78 (expression -> arrfn .)
    DIFFERENT       reduce using rule 78 (expression -> arrfn .)
    WA              reduce using rule 78 (expression -> arrfn .)
    AW              reduce using rule 78 (expression -> arrfn .)


state 73

    (63) expression -> PLUS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    PLUS            reduce using rule 63 (expression -> PLUS expression .)
    MINUS           reduce using rule 63 (expression -> PLUS expression .)
    MODULO          reduce using rule 63 (expression -> PLUS expression .)
    POWER           reduce using rule 63 (expression -> PLUS expression .)
    KHREJ           reduce using rule 63 (expression -> PLUS expression .)
    KMEL            reduce using rule 63 (expression -> PLUS expression .)
    ID              reduce using rule 63 (expression -> PLUS expression .)
    MOJOD           reduce using rule 63 (expression -> PLUS expression .)
    KTEB            reduce using rule 63 (expression -> PLUS expression .)
    (               reduce using rule 63 (expression -> PLUS expression .)
    INT             reduce using rule 63 (expression -> PLUS expression .)
    FLOAT           reduce using rule 63 (expression -> PLUS expression .)
    STRING          reduce using rule 63 (expression -> PLUS expression .)
    KHATE2          reduce using rule 63 (expression -> PLUS expression .)
    S7I7            reduce using rule 63 (expression -> PLUS expression .)
    WALO            reduce using rule 63 (expression -> PLUS expression .)
    JEREB           reduce using rule 63 (expression -> PLUS expression .)
    ILA             reduce using rule 63 (expression -> PLUS expression .)
    LKOLA           reduce using rule 63 (expression -> PLUS expression .)
    MA7ED           reduce using rule 63 (expression -> PLUS expression .)
    DIR             reduce using rule 63 (expression -> PLUS expression .)
    QRA             reduce using rule 63 (expression -> PLUS expression .)
    TOL             reduce using rule 63 (expression -> PLUS expression .)
    TA3RIF          reduce using rule 63 (expression -> PLUS expression .)
    RED             reduce using rule 63 (expression -> PLUS expression .)
    [               reduce using rule 63 (expression -> PLUS expression .)
    $end            reduce using rule 63 (expression -> PLUS expression .)
    )               reduce using rule 63 (expression -> PLUS expression .)
    }               reduce using rule 63 (expression -> PLUS expression .)
    ]               reduce using rule 63 (expression -> PLUS expression .)
    ,               reduce using rule 63 (expression -> PLUS expression .)
    ;               reduce using rule 63 (expression -> PLUS expression .)
    :               reduce using rule 63 (expression -> PLUS expression .)
    SUP             reduce using rule 63 (expression -> PLUS expression .)
    INF             reduce using rule 63 (expression -> PLUS expression .)
    EQUALSCOMP      reduce using rule 63 (expression -> PLUS expression .)
    SUPEQUALS       reduce using rule 63 (expression -> PLUS expression .)
    INFEQUALS       reduce using rule 63 (expression -> PLUS expression .)
    DIFFERENT       reduce using rule 63 (expression -> PLUS expression .)
    WA              reduce using rule 63 (expression -> PLUS expression .)
    AW              reduce using rule 63 (expression -> PLUS expression .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53

  ! TIMES           [ reduce using rule 63 (expression -> PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 63 (expression -> PLUS expression .) ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 54 ]
  ! POWER           [ shift and go to state 55 ]


state 74

    (62) expression -> MINUS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    PLUS            reduce using rule 62 (expression -> MINUS expression .)
    MINUS           reduce using rule 62 (expression -> MINUS expression .)
    MODULO          reduce using rule 62 (expression -> MINUS expression .)
    POWER           reduce using rule 62 (expression -> MINUS expression .)
    KHREJ           reduce using rule 62 (expression -> MINUS expression .)
    KMEL            reduce using rule 62 (expression -> MINUS expression .)
    ID              reduce using rule 62 (expression -> MINUS expression .)
    MOJOD           reduce using rule 62 (expression -> MINUS expression .)
    KTEB            reduce using rule 62 (expression -> MINUS expression .)
    (               reduce using rule 62 (expression -> MINUS expression .)
    INT             reduce using rule 62 (expression -> MINUS expression .)
    FLOAT           reduce using rule 62 (expression -> MINUS expression .)
    STRING          reduce using rule 62 (expression -> MINUS expression .)
    KHATE2          reduce using rule 62 (expression -> MINUS expression .)
    S7I7            reduce using rule 62 (expression -> MINUS expression .)
    WALO            reduce using rule 62 (expression -> MINUS expression .)
    JEREB           reduce using rule 62 (expression -> MINUS expression .)
    ILA             reduce using rule 62 (expression -> MINUS expression .)
    LKOLA           reduce using rule 62 (expression -> MINUS expression .)
    MA7ED           reduce using rule 62 (expression -> MINUS expression .)
    DIR             reduce using rule 62 (expression -> MINUS expression .)
    QRA             reduce using rule 62 (expression -> MINUS expression .)
    TOL             reduce using rule 62 (expression -> MINUS expression .)
    TA3RIF          reduce using rule 62 (expression -> MINUS expression .)
    RED             reduce using rule 62 (expression -> MINUS expression .)
    [               reduce using rule 62 (expression -> MINUS expression .)
    $end            reduce using rule 62 (expression -> MINUS expression .)
    )               reduce using rule 62 (expression -> MINUS expression .)
    }               reduce using rule 62 (expression -> MINUS expression .)
    ]               reduce using rule 62 (expression -> MINUS expression .)
    ,               reduce using rule 62 (expression -> MINUS expression .)
    ;               reduce using rule 62 (expression -> MINUS expression .)
    :               reduce using rule 62 (expression -> MINUS expression .)
    SUP             reduce using rule 62 (expression -> MINUS expression .)
    INF             reduce using rule 62 (expression -> MINUS expression .)
    EQUALSCOMP      reduce using rule 62 (expression -> MINUS expression .)
    SUPEQUALS       reduce using rule 62 (expression -> MINUS expression .)
    INFEQUALS       reduce using rule 62 (expression -> MINUS expression .)
    DIFFERENT       reduce using rule 62 (expression -> MINUS expression .)
    WA              reduce using rule 62 (expression -> MINUS expression .)
    AW              reduce using rule 62 (expression -> MINUS expression .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53

  ! TIMES           [ reduce using rule 62 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 62 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 54 ]
  ! POWER           [ shift and go to state 55 ]


state 75

    (67) try -> JEREB { . instruction_list } MASD9CH { instruction_list }
    (68) try -> JEREB { . instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction_list               shift and go to state 116
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 76

    (9) if -> ILA ( . condition ) { instruction_list }
    (10) if -> ILA ( . condition ) { instruction_list } WLA { instruction_list }
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 108
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 117
    expression                     shift and go to state 113
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 77

    (11) for -> LKOLA ( . var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> LKOLA ( . var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> LKOLA ( . expression ; condition ; incrementation ) { instruction_list }
    (14) for -> LKOLA ( . expression ; condition ; decrementation ) { instruction_list }
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    ID              shift and go to state 120
    MOJOD           shift and go to state 25
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    var_assign                     shift and go to state 118
    expression                     shift and go to state 119
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 78

    (15) while -> MA7ED ( . condition ) { instruction_list }
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 108
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 121
    expression                     shift and go to state 113
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 79

    (16) doWhile -> DIR { . instruction_list } MA7ED ( condition )
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction_list               shift and go to state 122
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 80

    (65) input -> QRA ( . expression )
    (66) input -> QRA ( . )
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    )               shift and go to state 124
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 123
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 81

    (109) len -> TOL ( . expression )
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 125
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 82

    (101) func -> TA3RIF ID . ( parameter_list ) { instruction_list }
    (102) func -> TA3RIF ID . ( ) { instruction_list }

    (               shift and go to state 126


state 83

    (105) return -> RED expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 105 (return -> RED expression .)
    KMEL            reduce using rule 105 (return -> RED expression .)
    ID              reduce using rule 105 (return -> RED expression .)
    MOJOD           reduce using rule 105 (return -> RED expression .)
    KTEB            reduce using rule 105 (return -> RED expression .)
    (               reduce using rule 105 (return -> RED expression .)
    INT             reduce using rule 105 (return -> RED expression .)
    FLOAT           reduce using rule 105 (return -> RED expression .)
    STRING          reduce using rule 105 (return -> RED expression .)
    KHATE2          reduce using rule 105 (return -> RED expression .)
    S7I7            reduce using rule 105 (return -> RED expression .)
    WALO            reduce using rule 105 (return -> RED expression .)
    JEREB           reduce using rule 105 (return -> RED expression .)
    ILA             reduce using rule 105 (return -> RED expression .)
    LKOLA           reduce using rule 105 (return -> RED expression .)
    MA7ED           reduce using rule 105 (return -> RED expression .)
    DIR             reduce using rule 105 (return -> RED expression .)
    QRA             reduce using rule 105 (return -> RED expression .)
    TOL             reduce using rule 105 (return -> RED expression .)
    TA3RIF          reduce using rule 105 (return -> RED expression .)
    RED             reduce using rule 105 (return -> RED expression .)
    [               reduce using rule 105 (return -> RED expression .)
    $end            reduce using rule 105 (return -> RED expression .)
    }               reduce using rule 105 (return -> RED expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! MINUS           [ reduce using rule 105 (return -> RED expression .) ]
  ! PLUS            [ reduce using rule 105 (return -> RED expression .) ]


state 84

    (81) array -> [ arraylist . ]
    (80) arraylist -> arraylist . , expression

    ]               shift and go to state 127
    ,               shift and go to state 128


state 85

    (82) array -> [ ] .

    PLUS            reduce using rule 82 (array -> [ ] .)
    MINUS           reduce using rule 82 (array -> [ ] .)
    TIMES           reduce using rule 82 (array -> [ ] .)
    DIVIDE          reduce using rule 82 (array -> [ ] .)
    MODULO          reduce using rule 82 (array -> [ ] .)
    POWER           reduce using rule 82 (array -> [ ] .)
    KHREJ           reduce using rule 82 (array -> [ ] .)
    KMEL            reduce using rule 82 (array -> [ ] .)
    ID              reduce using rule 82 (array -> [ ] .)
    MOJOD           reduce using rule 82 (array -> [ ] .)
    KTEB            reduce using rule 82 (array -> [ ] .)
    (               reduce using rule 82 (array -> [ ] .)
    INT             reduce using rule 82 (array -> [ ] .)
    FLOAT           reduce using rule 82 (array -> [ ] .)
    STRING          reduce using rule 82 (array -> [ ] .)
    KHATE2          reduce using rule 82 (array -> [ ] .)
    S7I7            reduce using rule 82 (array -> [ ] .)
    WALO            reduce using rule 82 (array -> [ ] .)
    JEREB           reduce using rule 82 (array -> [ ] .)
    ILA             reduce using rule 82 (array -> [ ] .)
    LKOLA           reduce using rule 82 (array -> [ ] .)
    MA7ED           reduce using rule 82 (array -> [ ] .)
    DIR             reduce using rule 82 (array -> [ ] .)
    QRA             reduce using rule 82 (array -> [ ] .)
    TOL             reduce using rule 82 (array -> [ ] .)
    TA3RIF          reduce using rule 82 (array -> [ ] .)
    RED             reduce using rule 82 (array -> [ ] .)
    [               reduce using rule 82 (array -> [ ] .)
    $end            reduce using rule 82 (array -> [ ] .)
    )               reduce using rule 82 (array -> [ ] .)
    }               reduce using rule 82 (array -> [ ] .)
    ]               reduce using rule 82 (array -> [ ] .)
    ,               reduce using rule 82 (array -> [ ] .)
    ;               reduce using rule 82 (array -> [ ] .)
    :               reduce using rule 82 (array -> [ ] .)
    SUP             reduce using rule 82 (array -> [ ] .)
    INF             reduce using rule 82 (array -> [ ] .)
    EQUALSCOMP      reduce using rule 82 (array -> [ ] .)
    SUPEQUALS       reduce using rule 82 (array -> [ ] .)
    INFEQUALS       reduce using rule 82 (array -> [ ] .)
    DIFFERENT       reduce using rule 82 (array -> [ ] .)
    WA              reduce using rule 82 (array -> [ ] .)
    AW              reduce using rule 82 (array -> [ ] .)


state 86

    (79) arraylist -> expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    ]               reduce using rule 79 (arraylist -> expression .)
    ,               reduce using rule 79 (arraylist -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 87

    (55) expression -> expression PLUS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    PLUS            reduce using rule 55 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 55 (expression -> expression PLUS expression .)
    MODULO          reduce using rule 55 (expression -> expression PLUS expression .)
    POWER           reduce using rule 55 (expression -> expression PLUS expression .)
    KHREJ           reduce using rule 55 (expression -> expression PLUS expression .)
    KMEL            reduce using rule 55 (expression -> expression PLUS expression .)
    ID              reduce using rule 55 (expression -> expression PLUS expression .)
    MOJOD           reduce using rule 55 (expression -> expression PLUS expression .)
    KTEB            reduce using rule 55 (expression -> expression PLUS expression .)
    (               reduce using rule 55 (expression -> expression PLUS expression .)
    INT             reduce using rule 55 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 55 (expression -> expression PLUS expression .)
    STRING          reduce using rule 55 (expression -> expression PLUS expression .)
    KHATE2          reduce using rule 55 (expression -> expression PLUS expression .)
    S7I7            reduce using rule 55 (expression -> expression PLUS expression .)
    WALO            reduce using rule 55 (expression -> expression PLUS expression .)
    JEREB           reduce using rule 55 (expression -> expression PLUS expression .)
    ILA             reduce using rule 55 (expression -> expression PLUS expression .)
    LKOLA           reduce using rule 55 (expression -> expression PLUS expression .)
    MA7ED           reduce using rule 55 (expression -> expression PLUS expression .)
    DIR             reduce using rule 55 (expression -> expression PLUS expression .)
    QRA             reduce using rule 55 (expression -> expression PLUS expression .)
    TOL             reduce using rule 55 (expression -> expression PLUS expression .)
    TA3RIF          reduce using rule 55 (expression -> expression PLUS expression .)
    RED             reduce using rule 55 (expression -> expression PLUS expression .)
    [               reduce using rule 55 (expression -> expression PLUS expression .)
    $end            reduce using rule 55 (expression -> expression PLUS expression .)
    )               reduce using rule 55 (expression -> expression PLUS expression .)
    }               reduce using rule 55 (expression -> expression PLUS expression .)
    ]               reduce using rule 55 (expression -> expression PLUS expression .)
    ,               reduce using rule 55 (expression -> expression PLUS expression .)
    ;               reduce using rule 55 (expression -> expression PLUS expression .)
    :               reduce using rule 55 (expression -> expression PLUS expression .)
    SUP             reduce using rule 55 (expression -> expression PLUS expression .)
    INF             reduce using rule 55 (expression -> expression PLUS expression .)
    EQUALSCOMP      reduce using rule 55 (expression -> expression PLUS expression .)
    SUPEQUALS       reduce using rule 55 (expression -> expression PLUS expression .)
    INFEQUALS       reduce using rule 55 (expression -> expression PLUS expression .)
    DIFFERENT       reduce using rule 55 (expression -> expression PLUS expression .)
    WA              reduce using rule 55 (expression -> expression PLUS expression .)
    AW              reduce using rule 55 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53

  ! TIMES           [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 54 ]
  ! POWER           [ shift and go to state 55 ]


state 88

    (56) expression -> expression MINUS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    PLUS            reduce using rule 56 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 56 (expression -> expression MINUS expression .)
    MODULO          reduce using rule 56 (expression -> expression MINUS expression .)
    POWER           reduce using rule 56 (expression -> expression MINUS expression .)
    KHREJ           reduce using rule 56 (expression -> expression MINUS expression .)
    KMEL            reduce using rule 56 (expression -> expression MINUS expression .)
    ID              reduce using rule 56 (expression -> expression MINUS expression .)
    MOJOD           reduce using rule 56 (expression -> expression MINUS expression .)
    KTEB            reduce using rule 56 (expression -> expression MINUS expression .)
    (               reduce using rule 56 (expression -> expression MINUS expression .)
    INT             reduce using rule 56 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 56 (expression -> expression MINUS expression .)
    STRING          reduce using rule 56 (expression -> expression MINUS expression .)
    KHATE2          reduce using rule 56 (expression -> expression MINUS expression .)
    S7I7            reduce using rule 56 (expression -> expression MINUS expression .)
    WALO            reduce using rule 56 (expression -> expression MINUS expression .)
    JEREB           reduce using rule 56 (expression -> expression MINUS expression .)
    ILA             reduce using rule 56 (expression -> expression MINUS expression .)
    LKOLA           reduce using rule 56 (expression -> expression MINUS expression .)
    MA7ED           reduce using rule 56 (expression -> expression MINUS expression .)
    DIR             reduce using rule 56 (expression -> expression MINUS expression .)
    QRA             reduce using rule 56 (expression -> expression MINUS expression .)
    TOL             reduce using rule 56 (expression -> expression MINUS expression .)
    TA3RIF          reduce using rule 56 (expression -> expression MINUS expression .)
    RED             reduce using rule 56 (expression -> expression MINUS expression .)
    [               reduce using rule 56 (expression -> expression MINUS expression .)
    $end            reduce using rule 56 (expression -> expression MINUS expression .)
    )               reduce using rule 56 (expression -> expression MINUS expression .)
    }               reduce using rule 56 (expression -> expression MINUS expression .)
    ]               reduce using rule 56 (expression -> expression MINUS expression .)
    ,               reduce using rule 56 (expression -> expression MINUS expression .)
    ;               reduce using rule 56 (expression -> expression MINUS expression .)
    :               reduce using rule 56 (expression -> expression MINUS expression .)
    SUP             reduce using rule 56 (expression -> expression MINUS expression .)
    INF             reduce using rule 56 (expression -> expression MINUS expression .)
    EQUALSCOMP      reduce using rule 56 (expression -> expression MINUS expression .)
    SUPEQUALS       reduce using rule 56 (expression -> expression MINUS expression .)
    INFEQUALS       reduce using rule 56 (expression -> expression MINUS expression .)
    DIFFERENT       reduce using rule 56 (expression -> expression MINUS expression .)
    WA              reduce using rule 56 (expression -> expression MINUS expression .)
    AW              reduce using rule 56 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53

  ! TIMES           [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 54 ]
  ! POWER           [ shift and go to state 55 ]


state 89

    (57) expression -> expression TIMES expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    PLUS            reduce using rule 57 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 57 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 57 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 57 (expression -> expression TIMES expression .)
    MODULO          reduce using rule 57 (expression -> expression TIMES expression .)
    POWER           reduce using rule 57 (expression -> expression TIMES expression .)
    KHREJ           reduce using rule 57 (expression -> expression TIMES expression .)
    KMEL            reduce using rule 57 (expression -> expression TIMES expression .)
    ID              reduce using rule 57 (expression -> expression TIMES expression .)
    MOJOD           reduce using rule 57 (expression -> expression TIMES expression .)
    KTEB            reduce using rule 57 (expression -> expression TIMES expression .)
    (               reduce using rule 57 (expression -> expression TIMES expression .)
    INT             reduce using rule 57 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 57 (expression -> expression TIMES expression .)
    STRING          reduce using rule 57 (expression -> expression TIMES expression .)
    KHATE2          reduce using rule 57 (expression -> expression TIMES expression .)
    S7I7            reduce using rule 57 (expression -> expression TIMES expression .)
    WALO            reduce using rule 57 (expression -> expression TIMES expression .)
    JEREB           reduce using rule 57 (expression -> expression TIMES expression .)
    ILA             reduce using rule 57 (expression -> expression TIMES expression .)
    LKOLA           reduce using rule 57 (expression -> expression TIMES expression .)
    MA7ED           reduce using rule 57 (expression -> expression TIMES expression .)
    DIR             reduce using rule 57 (expression -> expression TIMES expression .)
    QRA             reduce using rule 57 (expression -> expression TIMES expression .)
    TOL             reduce using rule 57 (expression -> expression TIMES expression .)
    TA3RIF          reduce using rule 57 (expression -> expression TIMES expression .)
    RED             reduce using rule 57 (expression -> expression TIMES expression .)
    [               reduce using rule 57 (expression -> expression TIMES expression .)
    $end            reduce using rule 57 (expression -> expression TIMES expression .)
    )               reduce using rule 57 (expression -> expression TIMES expression .)
    }               reduce using rule 57 (expression -> expression TIMES expression .)
    ]               reduce using rule 57 (expression -> expression TIMES expression .)
    ,               reduce using rule 57 (expression -> expression TIMES expression .)
    ;               reduce using rule 57 (expression -> expression TIMES expression .)
    :               reduce using rule 57 (expression -> expression TIMES expression .)
    SUP             reduce using rule 57 (expression -> expression TIMES expression .)
    INF             reduce using rule 57 (expression -> expression TIMES expression .)
    EQUALSCOMP      reduce using rule 57 (expression -> expression TIMES expression .)
    SUPEQUALS       reduce using rule 57 (expression -> expression TIMES expression .)
    INFEQUALS       reduce using rule 57 (expression -> expression TIMES expression .)
    DIFFERENT       reduce using rule 57 (expression -> expression TIMES expression .)
    WA              reduce using rule 57 (expression -> expression TIMES expression .)
    AW              reduce using rule 57 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! TIMES           [ shift and go to state 52 ]
  ! DIVIDE          [ shift and go to state 53 ]
  ! MODULO          [ shift and go to state 54 ]
  ! POWER           [ shift and go to state 55 ]


state 90

    (58) expression -> expression DIVIDE expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    PLUS            reduce using rule 58 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 58 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 58 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 58 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 58 (expression -> expression DIVIDE expression .)
    POWER           reduce using rule 58 (expression -> expression DIVIDE expression .)
    KHREJ           reduce using rule 58 (expression -> expression DIVIDE expression .)
    KMEL            reduce using rule 58 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 58 (expression -> expression DIVIDE expression .)
    MOJOD           reduce using rule 58 (expression -> expression DIVIDE expression .)
    KTEB            reduce using rule 58 (expression -> expression DIVIDE expression .)
    (               reduce using rule 58 (expression -> expression DIVIDE expression .)
    INT             reduce using rule 58 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 58 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 58 (expression -> expression DIVIDE expression .)
    KHATE2          reduce using rule 58 (expression -> expression DIVIDE expression .)
    S7I7            reduce using rule 58 (expression -> expression DIVIDE expression .)
    WALO            reduce using rule 58 (expression -> expression DIVIDE expression .)
    JEREB           reduce using rule 58 (expression -> expression DIVIDE expression .)
    ILA             reduce using rule 58 (expression -> expression DIVIDE expression .)
    LKOLA           reduce using rule 58 (expression -> expression DIVIDE expression .)
    MA7ED           reduce using rule 58 (expression -> expression DIVIDE expression .)
    DIR             reduce using rule 58 (expression -> expression DIVIDE expression .)
    QRA             reduce using rule 58 (expression -> expression DIVIDE expression .)
    TOL             reduce using rule 58 (expression -> expression DIVIDE expression .)
    TA3RIF          reduce using rule 58 (expression -> expression DIVIDE expression .)
    RED             reduce using rule 58 (expression -> expression DIVIDE expression .)
    [               reduce using rule 58 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 58 (expression -> expression DIVIDE expression .)
    )               reduce using rule 58 (expression -> expression DIVIDE expression .)
    }               reduce using rule 58 (expression -> expression DIVIDE expression .)
    ]               reduce using rule 58 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 58 (expression -> expression DIVIDE expression .)
    ;               reduce using rule 58 (expression -> expression DIVIDE expression .)
    :               reduce using rule 58 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 58 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 58 (expression -> expression DIVIDE expression .)
    EQUALSCOMP      reduce using rule 58 (expression -> expression DIVIDE expression .)
    SUPEQUALS       reduce using rule 58 (expression -> expression DIVIDE expression .)
    INFEQUALS       reduce using rule 58 (expression -> expression DIVIDE expression .)
    DIFFERENT       reduce using rule 58 (expression -> expression DIVIDE expression .)
    WA              reduce using rule 58 (expression -> expression DIVIDE expression .)
    AW              reduce using rule 58 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! TIMES           [ shift and go to state 52 ]
  ! DIVIDE          [ shift and go to state 53 ]
  ! MODULO          [ shift and go to state 54 ]
  ! POWER           [ shift and go to state 55 ]


state 91

    (59) expression -> expression MODULO expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    KHREJ           reduce using rule 59 (expression -> expression MODULO expression .)
    KMEL            reduce using rule 59 (expression -> expression MODULO expression .)
    ID              reduce using rule 59 (expression -> expression MODULO expression .)
    MOJOD           reduce using rule 59 (expression -> expression MODULO expression .)
    KTEB            reduce using rule 59 (expression -> expression MODULO expression .)
    (               reduce using rule 59 (expression -> expression MODULO expression .)
    INT             reduce using rule 59 (expression -> expression MODULO expression .)
    FLOAT           reduce using rule 59 (expression -> expression MODULO expression .)
    STRING          reduce using rule 59 (expression -> expression MODULO expression .)
    KHATE2          reduce using rule 59 (expression -> expression MODULO expression .)
    S7I7            reduce using rule 59 (expression -> expression MODULO expression .)
    WALO            reduce using rule 59 (expression -> expression MODULO expression .)
    JEREB           reduce using rule 59 (expression -> expression MODULO expression .)
    ILA             reduce using rule 59 (expression -> expression MODULO expression .)
    LKOLA           reduce using rule 59 (expression -> expression MODULO expression .)
    MA7ED           reduce using rule 59 (expression -> expression MODULO expression .)
    DIR             reduce using rule 59 (expression -> expression MODULO expression .)
    QRA             reduce using rule 59 (expression -> expression MODULO expression .)
    TOL             reduce using rule 59 (expression -> expression MODULO expression .)
    TA3RIF          reduce using rule 59 (expression -> expression MODULO expression .)
    RED             reduce using rule 59 (expression -> expression MODULO expression .)
    [               reduce using rule 59 (expression -> expression MODULO expression .)
    $end            reduce using rule 59 (expression -> expression MODULO expression .)
    )               reduce using rule 59 (expression -> expression MODULO expression .)
    }               reduce using rule 59 (expression -> expression MODULO expression .)
    ]               reduce using rule 59 (expression -> expression MODULO expression .)
    ,               reduce using rule 59 (expression -> expression MODULO expression .)
    ;               reduce using rule 59 (expression -> expression MODULO expression .)
    :               reduce using rule 59 (expression -> expression MODULO expression .)
    SUP             reduce using rule 59 (expression -> expression MODULO expression .)
    INF             reduce using rule 59 (expression -> expression MODULO expression .)
    EQUALSCOMP      reduce using rule 59 (expression -> expression MODULO expression .)
    SUPEQUALS       reduce using rule 59 (expression -> expression MODULO expression .)
    INFEQUALS       reduce using rule 59 (expression -> expression MODULO expression .)
    DIFFERENT       reduce using rule 59 (expression -> expression MODULO expression .)
    WA              reduce using rule 59 (expression -> expression MODULO expression .)
    AW              reduce using rule 59 (expression -> expression MODULO expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! PLUS            [ reduce using rule 59 (expression -> expression MODULO expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression MODULO expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression MODULO expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression MODULO expression .) ]
  ! MODULO          [ reduce using rule 59 (expression -> expression MODULO expression .) ]
  ! POWER           [ reduce using rule 59 (expression -> expression MODULO expression .) ]


state 92

    (60) expression -> expression POWER expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    KHREJ           reduce using rule 60 (expression -> expression POWER expression .)
    KMEL            reduce using rule 60 (expression -> expression POWER expression .)
    ID              reduce using rule 60 (expression -> expression POWER expression .)
    MOJOD           reduce using rule 60 (expression -> expression POWER expression .)
    KTEB            reduce using rule 60 (expression -> expression POWER expression .)
    (               reduce using rule 60 (expression -> expression POWER expression .)
    INT             reduce using rule 60 (expression -> expression POWER expression .)
    FLOAT           reduce using rule 60 (expression -> expression POWER expression .)
    STRING          reduce using rule 60 (expression -> expression POWER expression .)
    KHATE2          reduce using rule 60 (expression -> expression POWER expression .)
    S7I7            reduce using rule 60 (expression -> expression POWER expression .)
    WALO            reduce using rule 60 (expression -> expression POWER expression .)
    JEREB           reduce using rule 60 (expression -> expression POWER expression .)
    ILA             reduce using rule 60 (expression -> expression POWER expression .)
    LKOLA           reduce using rule 60 (expression -> expression POWER expression .)
    MA7ED           reduce using rule 60 (expression -> expression POWER expression .)
    DIR             reduce using rule 60 (expression -> expression POWER expression .)
    QRA             reduce using rule 60 (expression -> expression POWER expression .)
    TOL             reduce using rule 60 (expression -> expression POWER expression .)
    TA3RIF          reduce using rule 60 (expression -> expression POWER expression .)
    RED             reduce using rule 60 (expression -> expression POWER expression .)
    [               reduce using rule 60 (expression -> expression POWER expression .)
    $end            reduce using rule 60 (expression -> expression POWER expression .)
    )               reduce using rule 60 (expression -> expression POWER expression .)
    }               reduce using rule 60 (expression -> expression POWER expression .)
    ]               reduce using rule 60 (expression -> expression POWER expression .)
    ,               reduce using rule 60 (expression -> expression POWER expression .)
    ;               reduce using rule 60 (expression -> expression POWER expression .)
    :               reduce using rule 60 (expression -> expression POWER expression .)
    SUP             reduce using rule 60 (expression -> expression POWER expression .)
    INF             reduce using rule 60 (expression -> expression POWER expression .)
    EQUALSCOMP      reduce using rule 60 (expression -> expression POWER expression .)
    SUPEQUALS       reduce using rule 60 (expression -> expression POWER expression .)
    INFEQUALS       reduce using rule 60 (expression -> expression POWER expression .)
    DIFFERENT       reduce using rule 60 (expression -> expression POWER expression .)
    WA              reduce using rule 60 (expression -> expression POWER expression .)
    AW              reduce using rule 60 (expression -> expression POWER expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! PLUS            [ reduce using rule 60 (expression -> expression POWER expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> expression POWER expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> expression POWER expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression POWER expression .) ]
  ! MODULO          [ reduce using rule 60 (expression -> expression POWER expression .) ]
  ! POWER           [ reduce using rule 60 (expression -> expression POWER expression .) ]


state 93

    (4) var_assign -> ID EQUALS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KMEL            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ID              reduce using rule 4 (var_assign -> ID EQUALS expression .)
    MOJOD           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KTEB            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    (               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    INT             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    FLOAT           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    STRING          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KHATE2          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    S7I7            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    WALO            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    JEREB           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ILA             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    LKOLA           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    MA7ED           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    DIR             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    QRA             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    TOL             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    TA3RIF          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    RED             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    [               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    $end            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    }               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ;               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! MINUS           [ reduce using rule 4 (var_assign -> ID EQUALS expression .) ]
  ! PLUS            [ reduce using rule 4 (var_assign -> ID EQUALS expression .) ]


state 94

    (5) var_assign -> ID EQUALS input .

    KHREJ           reduce using rule 5 (var_assign -> ID EQUALS input .)
    KMEL            reduce using rule 5 (var_assign -> ID EQUALS input .)
    ID              reduce using rule 5 (var_assign -> ID EQUALS input .)
    MOJOD           reduce using rule 5 (var_assign -> ID EQUALS input .)
    KTEB            reduce using rule 5 (var_assign -> ID EQUALS input .)
    (               reduce using rule 5 (var_assign -> ID EQUALS input .)
    MINUS           reduce using rule 5 (var_assign -> ID EQUALS input .)
    PLUS            reduce using rule 5 (var_assign -> ID EQUALS input .)
    INT             reduce using rule 5 (var_assign -> ID EQUALS input .)
    FLOAT           reduce using rule 5 (var_assign -> ID EQUALS input .)
    STRING          reduce using rule 5 (var_assign -> ID EQUALS input .)
    KHATE2          reduce using rule 5 (var_assign -> ID EQUALS input .)
    S7I7            reduce using rule 5 (var_assign -> ID EQUALS input .)
    WALO            reduce using rule 5 (var_assign -> ID EQUALS input .)
    JEREB           reduce using rule 5 (var_assign -> ID EQUALS input .)
    ILA             reduce using rule 5 (var_assign -> ID EQUALS input .)
    LKOLA           reduce using rule 5 (var_assign -> ID EQUALS input .)
    MA7ED           reduce using rule 5 (var_assign -> ID EQUALS input .)
    DIR             reduce using rule 5 (var_assign -> ID EQUALS input .)
    QRA             reduce using rule 5 (var_assign -> ID EQUALS input .)
    TOL             reduce using rule 5 (var_assign -> ID EQUALS input .)
    TA3RIF          reduce using rule 5 (var_assign -> ID EQUALS input .)
    RED             reduce using rule 5 (var_assign -> ID EQUALS input .)
    [               reduce using rule 5 (var_assign -> ID EQUALS input .)
    $end            reduce using rule 5 (var_assign -> ID EQUALS input .)
    }               reduce using rule 5 (var_assign -> ID EQUALS input .)
    ;               reduce using rule 5 (var_assign -> ID EQUALS input .)


state 95

    (103) appel_func -> ID ( argument_list . )
    (97) argument_list -> argument_list . , expression

    )               shift and go to state 129
    ,               shift and go to state 130


state 96

    (104) appel_func -> ID ( ) .

    KHREJ           reduce using rule 104 (appel_func -> ID ( ) .)
    KMEL            reduce using rule 104 (appel_func -> ID ( ) .)
    ID              reduce using rule 104 (appel_func -> ID ( ) .)
    MOJOD           reduce using rule 104 (appel_func -> ID ( ) .)
    KTEB            reduce using rule 104 (appel_func -> ID ( ) .)
    (               reduce using rule 104 (appel_func -> ID ( ) .)
    MINUS           reduce using rule 104 (appel_func -> ID ( ) .)
    PLUS            reduce using rule 104 (appel_func -> ID ( ) .)
    INT             reduce using rule 104 (appel_func -> ID ( ) .)
    FLOAT           reduce using rule 104 (appel_func -> ID ( ) .)
    STRING          reduce using rule 104 (appel_func -> ID ( ) .)
    KHATE2          reduce using rule 104 (appel_func -> ID ( ) .)
    S7I7            reduce using rule 104 (appel_func -> ID ( ) .)
    WALO            reduce using rule 104 (appel_func -> ID ( ) .)
    JEREB           reduce using rule 104 (appel_func -> ID ( ) .)
    ILA             reduce using rule 104 (appel_func -> ID ( ) .)
    LKOLA           reduce using rule 104 (appel_func -> ID ( ) .)
    MA7ED           reduce using rule 104 (appel_func -> ID ( ) .)
    DIR             reduce using rule 104 (appel_func -> ID ( ) .)
    QRA             reduce using rule 104 (appel_func -> ID ( ) .)
    TOL             reduce using rule 104 (appel_func -> ID ( ) .)
    TA3RIF          reduce using rule 104 (appel_func -> ID ( ) .)
    RED             reduce using rule 104 (appel_func -> ID ( ) .)
    [               reduce using rule 104 (appel_func -> ID ( ) .)
    $end            reduce using rule 104 (appel_func -> ID ( ) .)
    }               reduce using rule 104 (appel_func -> ID ( ) .)


state 97

    (96) argument_list -> expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               reduce using rule 96 (argument_list -> expression .)
    ,               reduce using rule 96 (argument_list -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 98

    (90) arrfn -> ID . ZID . ( expression )

    (               shift and go to state 131


state 99

    (91) arrfn -> ID . KBER . ( array )

    (               shift and go to state 132


state 100

    (92) arrfn -> ID . KHWI . ( )

    (               shift and go to state 133


state 101

    (93) arrfn -> ID . DKHEL . ( expression , expression )

    (               shift and go to state 134


state 102

    (94) arrfn -> ID . MSSE7 . ( expression )
    (95) arrfn -> ID . MSSE7 . ( )

    (               shift and go to state 135


state 103

    (85) dimensions -> dimensions [ . expression ]
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 136
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 104

    (86) arrayslice -> ID [ expression . : expression ]
    (88) arrayslice -> ID [ expression . : ]
    (84) dimensions -> [ expression . ]
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    :               shift and go to state 137
    ]               shift and go to state 138
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 105

    (87) arrayslice -> ID [ : . expression ]
    (89) arrayslice -> ID [ : . ]
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    ]               shift and go to state 140
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 139
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 106

    (7) arrayelt_assign -> arrayelt EQUALS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    KMEL            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    ID              reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    MOJOD           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    KTEB            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    (               reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    INT             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    FLOAT           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    STRING          reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    KHATE2          reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    S7I7            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    WALO            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    JEREB           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    ILA             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    LKOLA           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    MA7ED           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    DIR             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    QRA             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    TOL             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    TA3RIF          reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    RED             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    [               reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    $end            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    }               reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! MINUS           [ reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .) ]
  ! PLUS            [ reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .) ]


state 107

    (8) arrayelt_assign -> arrayslice EQUALS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    KMEL            reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    ID              reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    MOJOD           reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    KTEB            reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    (               reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    INT             reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    FLOAT           reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    STRING          reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    KHATE2          reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    S7I7            reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    WALO            reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    JEREB           reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    ILA             reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    LKOLA           reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    MA7ED           reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    DIR             reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    QRA             reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    TOL             reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    TA3RIF          reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    RED             reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    [               reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    $end            reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    }               reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! MINUS           [ reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .) ]
  ! PLUS            [ reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .) ]


state 108

    (39) condition -> ( . condition ) AW ( condition )
    (40) condition -> ( . condition ) WA ( condition )
    (43) condition -> ( . condition ) WA condition
    (44) condition -> ( . condition ) AW condition
    (61) expression -> ( . expression )
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 108
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 141
    expression                     shift and go to state 142
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 109

    (106) printing -> KTEB ( condition . )
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

    )               shift and go to state 143
    WA              shift and go to state 144
    AW              shift and go to state 145


state 110

    (107) printing -> KTEB ( incrementation . )

    )               shift and go to state 146


state 111

    (108) printing -> KTEB ( decrementation . )

    )               shift and go to state 147


state 112

    (47) condition -> L3AKSS . ( condition )

    (               shift and go to state 148


state 113

    (48) condition -> expression . SUP expression
    (49) condition -> expression . INF expression
    (50) condition -> expression . EQUALSCOMP expression
    (51) condition -> expression . SUPEQUALS expression
    (52) condition -> expression . INFEQUALS expression
    (53) condition -> expression . DIFFERENT expression
    (54) condition -> expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    SUP             shift and go to state 149
    INF             shift and go to state 150
    EQUALSCOMP      shift and go to state 151
    SUPEQUALS       shift and go to state 152
    INFEQUALS       shift and go to state 153
    DIFFERENT       shift and go to state 154
    )               reduce using rule 54 (condition -> expression .)
    WA              reduce using rule 54 (condition -> expression .)
    AW              reduce using rule 54 (condition -> expression .)
    ;               reduce using rule 54 (condition -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 114

    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION
    (64) expression -> ID .
    (83) arrayelt -> ID . dimensions
    (86) arrayslice -> ID . [ expression : expression ]
    (87) arrayslice -> ID . [ : expression ]
    (88) arrayslice -> ID . [ expression : ]
    (89) arrayslice -> ID . [ : ]
    (90) arrfn -> ID . . ZID ( expression )
    (91) arrfn -> ID . . KBER ( array )
    (92) arrfn -> ID . . KHWI ( )
    (93) arrfn -> ID . . DKHEL ( expression , expression )
    (94) arrfn -> ID . . MSSE7 ( expression )
    (95) arrfn -> ID . . MSSE7 ( )
    (84) dimensions -> . [ expression ]
    (85) dimensions -> . dimensions [ expression ]

    INCREMENTATION  shift and go to state 57
    DECREMENTATION  shift and go to state 58
    SUP             reduce using rule 64 (expression -> ID .)
    INF             reduce using rule 64 (expression -> ID .)
    EQUALSCOMP      reduce using rule 64 (expression -> ID .)
    SUPEQUALS       reduce using rule 64 (expression -> ID .)
    INFEQUALS       reduce using rule 64 (expression -> ID .)
    DIFFERENT       reduce using rule 64 (expression -> ID .)
    PLUS            reduce using rule 64 (expression -> ID .)
    MINUS           reduce using rule 64 (expression -> ID .)
    TIMES           reduce using rule 64 (expression -> ID .)
    DIVIDE          reduce using rule 64 (expression -> ID .)
    MODULO          reduce using rule 64 (expression -> ID .)
    POWER           reduce using rule 64 (expression -> ID .)
    )               reduce using rule 64 (expression -> ID .)
    WA              reduce using rule 64 (expression -> ID .)
    AW              reduce using rule 64 (expression -> ID .)
    [               shift and go to state 62
    .               shift and go to state 60

    dimensions                     shift and go to state 61

state 115

    (61) expression -> ( expression ) .

    PLUS            reduce using rule 61 (expression -> ( expression ) .)
    MINUS           reduce using rule 61 (expression -> ( expression ) .)
    TIMES           reduce using rule 61 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 61 (expression -> ( expression ) .)
    MODULO          reduce using rule 61 (expression -> ( expression ) .)
    POWER           reduce using rule 61 (expression -> ( expression ) .)
    KHREJ           reduce using rule 61 (expression -> ( expression ) .)
    KMEL            reduce using rule 61 (expression -> ( expression ) .)
    ID              reduce using rule 61 (expression -> ( expression ) .)
    MOJOD           reduce using rule 61 (expression -> ( expression ) .)
    KTEB            reduce using rule 61 (expression -> ( expression ) .)
    (               reduce using rule 61 (expression -> ( expression ) .)
    INT             reduce using rule 61 (expression -> ( expression ) .)
    FLOAT           reduce using rule 61 (expression -> ( expression ) .)
    STRING          reduce using rule 61 (expression -> ( expression ) .)
    KHATE2          reduce using rule 61 (expression -> ( expression ) .)
    S7I7            reduce using rule 61 (expression -> ( expression ) .)
    WALO            reduce using rule 61 (expression -> ( expression ) .)
    JEREB           reduce using rule 61 (expression -> ( expression ) .)
    ILA             reduce using rule 61 (expression -> ( expression ) .)
    LKOLA           reduce using rule 61 (expression -> ( expression ) .)
    MA7ED           reduce using rule 61 (expression -> ( expression ) .)
    DIR             reduce using rule 61 (expression -> ( expression ) .)
    QRA             reduce using rule 61 (expression -> ( expression ) .)
    TOL             reduce using rule 61 (expression -> ( expression ) .)
    TA3RIF          reduce using rule 61 (expression -> ( expression ) .)
    RED             reduce using rule 61 (expression -> ( expression ) .)
    [               reduce using rule 61 (expression -> ( expression ) .)
    $end            reduce using rule 61 (expression -> ( expression ) .)
    )               reduce using rule 61 (expression -> ( expression ) .)
    }               reduce using rule 61 (expression -> ( expression ) .)
    ]               reduce using rule 61 (expression -> ( expression ) .)
    ,               reduce using rule 61 (expression -> ( expression ) .)
    ;               reduce using rule 61 (expression -> ( expression ) .)
    :               reduce using rule 61 (expression -> ( expression ) .)
    SUP             reduce using rule 61 (expression -> ( expression ) .)
    INF             reduce using rule 61 (expression -> ( expression ) .)
    EQUALSCOMP      reduce using rule 61 (expression -> ( expression ) .)
    SUPEQUALS       reduce using rule 61 (expression -> ( expression ) .)
    INFEQUALS       reduce using rule 61 (expression -> ( expression ) .)
    DIFFERENT       reduce using rule 61 (expression -> ( expression ) .)
    WA              reduce using rule 61 (expression -> ( expression ) .)
    AW              reduce using rule 61 (expression -> ( expression ) .)


state 116

    (67) try -> JEREB { instruction_list . } MASD9CH { instruction_list }
    (68) try -> JEREB { instruction_list . } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 155
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 117

    (9) if -> ILA ( condition . ) { instruction_list }
    (10) if -> ILA ( condition . ) { instruction_list } WLA { instruction_list }
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

    )               shift and go to state 156
    WA              shift and go to state 144
    AW              shift and go to state 145


state 118

    (11) for -> LKOLA ( var_assign . ; condition ; incrementation ) { instruction_list }
    (12) for -> LKOLA ( var_assign . ; condition ; decrementation ) { instruction_list }

    ;               shift and go to state 157


state 119

    (13) for -> LKOLA ( expression . ; condition ; incrementation ) { instruction_list }
    (14) for -> LKOLA ( expression . ; condition ; decrementation ) { instruction_list }
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    ;               shift and go to state 158
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 120

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input
    (64) expression -> ID .
    (83) arrayelt -> ID . dimensions
    (86) arrayslice -> ID . [ expression : expression ]
    (87) arrayslice -> ID . [ : expression ]
    (88) arrayslice -> ID . [ expression : ]
    (89) arrayslice -> ID . [ : ]
    (90) arrfn -> ID . . ZID ( expression )
    (91) arrfn -> ID . . KBER ( array )
    (92) arrfn -> ID . . KHWI ( )
    (93) arrfn -> ID . . DKHEL ( expression , expression )
    (94) arrfn -> ID . . MSSE7 ( expression )
    (95) arrfn -> ID . . MSSE7 ( )
    (84) dimensions -> . [ expression ]
    (85) dimensions -> . dimensions [ expression ]

    EQUALS          shift and go to state 56
    ;               reduce using rule 64 (expression -> ID .)
    PLUS            reduce using rule 64 (expression -> ID .)
    MINUS           reduce using rule 64 (expression -> ID .)
    TIMES           reduce using rule 64 (expression -> ID .)
    DIVIDE          reduce using rule 64 (expression -> ID .)
    MODULO          reduce using rule 64 (expression -> ID .)
    POWER           reduce using rule 64 (expression -> ID .)
    [               shift and go to state 62
    .               shift and go to state 60

    dimensions                     shift and go to state 61

state 121

    (15) while -> MA7ED ( condition . ) { instruction_list }
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

    )               shift and go to state 159
    WA              shift and go to state 144
    AW              shift and go to state 145


state 122

    (16) doWhile -> DIR { instruction_list . } MA7ED ( condition )
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 160
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 123

    (65) input -> QRA ( expression . )
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               shift and go to state 161
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 124

    (66) input -> QRA ( ) .

    KHREJ           reduce using rule 66 (input -> QRA ( ) .)
    KMEL            reduce using rule 66 (input -> QRA ( ) .)
    ID              reduce using rule 66 (input -> QRA ( ) .)
    MOJOD           reduce using rule 66 (input -> QRA ( ) .)
    KTEB            reduce using rule 66 (input -> QRA ( ) .)
    (               reduce using rule 66 (input -> QRA ( ) .)
    MINUS           reduce using rule 66 (input -> QRA ( ) .)
    PLUS            reduce using rule 66 (input -> QRA ( ) .)
    INT             reduce using rule 66 (input -> QRA ( ) .)
    FLOAT           reduce using rule 66 (input -> QRA ( ) .)
    STRING          reduce using rule 66 (input -> QRA ( ) .)
    KHATE2          reduce using rule 66 (input -> QRA ( ) .)
    S7I7            reduce using rule 66 (input -> QRA ( ) .)
    WALO            reduce using rule 66 (input -> QRA ( ) .)
    JEREB           reduce using rule 66 (input -> QRA ( ) .)
    ILA             reduce using rule 66 (input -> QRA ( ) .)
    LKOLA           reduce using rule 66 (input -> QRA ( ) .)
    MA7ED           reduce using rule 66 (input -> QRA ( ) .)
    DIR             reduce using rule 66 (input -> QRA ( ) .)
    QRA             reduce using rule 66 (input -> QRA ( ) .)
    TOL             reduce using rule 66 (input -> QRA ( ) .)
    TA3RIF          reduce using rule 66 (input -> QRA ( ) .)
    RED             reduce using rule 66 (input -> QRA ( ) .)
    [               reduce using rule 66 (input -> QRA ( ) .)
    $end            reduce using rule 66 (input -> QRA ( ) .)
    }               reduce using rule 66 (input -> QRA ( ) .)
    ;               reduce using rule 66 (input -> QRA ( ) .)


state 125

    (109) len -> TOL ( expression . )
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               shift and go to state 162
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 126

    (101) func -> TA3RIF ID ( . parameter_list ) { instruction_list }
    (102) func -> TA3RIF ID ( . ) { instruction_list }
    (99) parameter_list -> . parameter
    (100) parameter_list -> . parameter_list , parameter
    (98) parameter -> . ID

    )               shift and go to state 165
    ID              shift and go to state 163

    parameter_list                 shift and go to state 164
    parameter                      shift and go to state 166

state 127

    (81) array -> [ arraylist ] .

    PLUS            reduce using rule 81 (array -> [ arraylist ] .)
    MINUS           reduce using rule 81 (array -> [ arraylist ] .)
    TIMES           reduce using rule 81 (array -> [ arraylist ] .)
    DIVIDE          reduce using rule 81 (array -> [ arraylist ] .)
    MODULO          reduce using rule 81 (array -> [ arraylist ] .)
    POWER           reduce using rule 81 (array -> [ arraylist ] .)
    KHREJ           reduce using rule 81 (array -> [ arraylist ] .)
    KMEL            reduce using rule 81 (array -> [ arraylist ] .)
    ID              reduce using rule 81 (array -> [ arraylist ] .)
    MOJOD           reduce using rule 81 (array -> [ arraylist ] .)
    KTEB            reduce using rule 81 (array -> [ arraylist ] .)
    (               reduce using rule 81 (array -> [ arraylist ] .)
    INT             reduce using rule 81 (array -> [ arraylist ] .)
    FLOAT           reduce using rule 81 (array -> [ arraylist ] .)
    STRING          reduce using rule 81 (array -> [ arraylist ] .)
    KHATE2          reduce using rule 81 (array -> [ arraylist ] .)
    S7I7            reduce using rule 81 (array -> [ arraylist ] .)
    WALO            reduce using rule 81 (array -> [ arraylist ] .)
    JEREB           reduce using rule 81 (array -> [ arraylist ] .)
    ILA             reduce using rule 81 (array -> [ arraylist ] .)
    LKOLA           reduce using rule 81 (array -> [ arraylist ] .)
    MA7ED           reduce using rule 81 (array -> [ arraylist ] .)
    DIR             reduce using rule 81 (array -> [ arraylist ] .)
    QRA             reduce using rule 81 (array -> [ arraylist ] .)
    TOL             reduce using rule 81 (array -> [ arraylist ] .)
    TA3RIF          reduce using rule 81 (array -> [ arraylist ] .)
    RED             reduce using rule 81 (array -> [ arraylist ] .)
    [               reduce using rule 81 (array -> [ arraylist ] .)
    $end            reduce using rule 81 (array -> [ arraylist ] .)
    )               reduce using rule 81 (array -> [ arraylist ] .)
    }               reduce using rule 81 (array -> [ arraylist ] .)
    ]               reduce using rule 81 (array -> [ arraylist ] .)
    ,               reduce using rule 81 (array -> [ arraylist ] .)
    ;               reduce using rule 81 (array -> [ arraylist ] .)
    :               reduce using rule 81 (array -> [ arraylist ] .)
    SUP             reduce using rule 81 (array -> [ arraylist ] .)
    INF             reduce using rule 81 (array -> [ arraylist ] .)
    EQUALSCOMP      reduce using rule 81 (array -> [ arraylist ] .)
    SUPEQUALS       reduce using rule 81 (array -> [ arraylist ] .)
    INFEQUALS       reduce using rule 81 (array -> [ arraylist ] .)
    DIFFERENT       reduce using rule 81 (array -> [ arraylist ] .)
    WA              reduce using rule 81 (array -> [ arraylist ] .)
    AW              reduce using rule 81 (array -> [ arraylist ] .)


state 128

    (80) arraylist -> arraylist , . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 167
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 129

    (103) appel_func -> ID ( argument_list ) .

    KHREJ           reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    KMEL            reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    ID              reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    MOJOD           reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    KTEB            reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    (               reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    MINUS           reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    PLUS            reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    INT             reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    FLOAT           reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    STRING          reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    KHATE2          reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    S7I7            reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    WALO            reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    JEREB           reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    ILA             reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    LKOLA           reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    MA7ED           reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    DIR             reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    QRA             reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    TOL             reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    TA3RIF          reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    RED             reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    [               reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    $end            reduce using rule 103 (appel_func -> ID ( argument_list ) .)
    }               reduce using rule 103 (appel_func -> ID ( argument_list ) .)


state 130

    (97) argument_list -> argument_list , . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 168
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 131

    (90) arrfn -> ID . ZID ( . expression )
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 169
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 132

    (91) arrfn -> ID . KBER ( . array )
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

    [               shift and go to state 48

    array                          shift and go to state 170

state 133

    (92) arrfn -> ID . KHWI ( . )

    )               shift and go to state 171


state 134

    (93) arrfn -> ID . DKHEL ( . expression , expression )
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 172
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 135

    (94) arrfn -> ID . MSSE7 ( . expression )
    (95) arrfn -> ID . MSSE7 ( . )
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    )               shift and go to state 174
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 173
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 136

    (85) dimensions -> dimensions [ expression . ]
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    ]               shift and go to state 175
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 137

    (86) arrayslice -> ID [ expression : . expression ]
    (88) arrayslice -> ID [ expression : . ]
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    ]               shift and go to state 177
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 176
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 138

    (84) dimensions -> [ expression ] .

    [               reduce using rule 84 (dimensions -> [ expression ] .)
    EQUALS          reduce using rule 84 (dimensions -> [ expression ] .)
    PLUS            reduce using rule 84 (dimensions -> [ expression ] .)
    MINUS           reduce using rule 84 (dimensions -> [ expression ] .)
    TIMES           reduce using rule 84 (dimensions -> [ expression ] .)
    DIVIDE          reduce using rule 84 (dimensions -> [ expression ] .)
    MODULO          reduce using rule 84 (dimensions -> [ expression ] .)
    POWER           reduce using rule 84 (dimensions -> [ expression ] .)
    KHREJ           reduce using rule 84 (dimensions -> [ expression ] .)
    KMEL            reduce using rule 84 (dimensions -> [ expression ] .)
    ID              reduce using rule 84 (dimensions -> [ expression ] .)
    MOJOD           reduce using rule 84 (dimensions -> [ expression ] .)
    KTEB            reduce using rule 84 (dimensions -> [ expression ] .)
    (               reduce using rule 84 (dimensions -> [ expression ] .)
    INT             reduce using rule 84 (dimensions -> [ expression ] .)
    FLOAT           reduce using rule 84 (dimensions -> [ expression ] .)
    STRING          reduce using rule 84 (dimensions -> [ expression ] .)
    KHATE2          reduce using rule 84 (dimensions -> [ expression ] .)
    S7I7            reduce using rule 84 (dimensions -> [ expression ] .)
    WALO            reduce using rule 84 (dimensions -> [ expression ] .)
    JEREB           reduce using rule 84 (dimensions -> [ expression ] .)
    ILA             reduce using rule 84 (dimensions -> [ expression ] .)
    LKOLA           reduce using rule 84 (dimensions -> [ expression ] .)
    MA7ED           reduce using rule 84 (dimensions -> [ expression ] .)
    DIR             reduce using rule 84 (dimensions -> [ expression ] .)
    QRA             reduce using rule 84 (dimensions -> [ expression ] .)
    TOL             reduce using rule 84 (dimensions -> [ expression ] .)
    TA3RIF          reduce using rule 84 (dimensions -> [ expression ] .)
    RED             reduce using rule 84 (dimensions -> [ expression ] .)
    $end            reduce using rule 84 (dimensions -> [ expression ] .)
    }               reduce using rule 84 (dimensions -> [ expression ] .)
    )               reduce using rule 84 (dimensions -> [ expression ] .)
    ]               reduce using rule 84 (dimensions -> [ expression ] .)
    ,               reduce using rule 84 (dimensions -> [ expression ] .)
    ;               reduce using rule 84 (dimensions -> [ expression ] .)
    :               reduce using rule 84 (dimensions -> [ expression ] .)
    SUP             reduce using rule 84 (dimensions -> [ expression ] .)
    INF             reduce using rule 84 (dimensions -> [ expression ] .)
    EQUALSCOMP      reduce using rule 84 (dimensions -> [ expression ] .)
    SUPEQUALS       reduce using rule 84 (dimensions -> [ expression ] .)
    INFEQUALS       reduce using rule 84 (dimensions -> [ expression ] .)
    DIFFERENT       reduce using rule 84 (dimensions -> [ expression ] .)
    WA              reduce using rule 84 (dimensions -> [ expression ] .)
    AW              reduce using rule 84 (dimensions -> [ expression ] .)


state 139

    (87) arrayslice -> ID [ : expression . ]
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    ]               shift and go to state 178
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 140

    (89) arrayslice -> ID [ : ] .

    EQUALS          reduce using rule 89 (arrayslice -> ID [ : ] .)
    PLUS            reduce using rule 89 (arrayslice -> ID [ : ] .)
    MINUS           reduce using rule 89 (arrayslice -> ID [ : ] .)
    TIMES           reduce using rule 89 (arrayslice -> ID [ : ] .)
    DIVIDE          reduce using rule 89 (arrayslice -> ID [ : ] .)
    MODULO          reduce using rule 89 (arrayslice -> ID [ : ] .)
    POWER           reduce using rule 89 (arrayslice -> ID [ : ] .)
    KHREJ           reduce using rule 89 (arrayslice -> ID [ : ] .)
    KMEL            reduce using rule 89 (arrayslice -> ID [ : ] .)
    ID              reduce using rule 89 (arrayslice -> ID [ : ] .)
    MOJOD           reduce using rule 89 (arrayslice -> ID [ : ] .)
    KTEB            reduce using rule 89 (arrayslice -> ID [ : ] .)
    (               reduce using rule 89 (arrayslice -> ID [ : ] .)
    INT             reduce using rule 89 (arrayslice -> ID [ : ] .)
    FLOAT           reduce using rule 89 (arrayslice -> ID [ : ] .)
    STRING          reduce using rule 89 (arrayslice -> ID [ : ] .)
    KHATE2          reduce using rule 89 (arrayslice -> ID [ : ] .)
    S7I7            reduce using rule 89 (arrayslice -> ID [ : ] .)
    WALO            reduce using rule 89 (arrayslice -> ID [ : ] .)
    JEREB           reduce using rule 89 (arrayslice -> ID [ : ] .)
    ILA             reduce using rule 89 (arrayslice -> ID [ : ] .)
    LKOLA           reduce using rule 89 (arrayslice -> ID [ : ] .)
    MA7ED           reduce using rule 89 (arrayslice -> ID [ : ] .)
    DIR             reduce using rule 89 (arrayslice -> ID [ : ] .)
    QRA             reduce using rule 89 (arrayslice -> ID [ : ] .)
    TOL             reduce using rule 89 (arrayslice -> ID [ : ] .)
    TA3RIF          reduce using rule 89 (arrayslice -> ID [ : ] .)
    RED             reduce using rule 89 (arrayslice -> ID [ : ] .)
    [               reduce using rule 89 (arrayslice -> ID [ : ] .)
    $end            reduce using rule 89 (arrayslice -> ID [ : ] .)
    )               reduce using rule 89 (arrayslice -> ID [ : ] .)
    }               reduce using rule 89 (arrayslice -> ID [ : ] .)
    ]               reduce using rule 89 (arrayslice -> ID [ : ] .)
    ,               reduce using rule 89 (arrayslice -> ID [ : ] .)
    ;               reduce using rule 89 (arrayslice -> ID [ : ] .)
    :               reduce using rule 89 (arrayslice -> ID [ : ] .)
    SUP             reduce using rule 89 (arrayslice -> ID [ : ] .)
    INF             reduce using rule 89 (arrayslice -> ID [ : ] .)
    EQUALSCOMP      reduce using rule 89 (arrayslice -> ID [ : ] .)
    SUPEQUALS       reduce using rule 89 (arrayslice -> ID [ : ] .)
    INFEQUALS       reduce using rule 89 (arrayslice -> ID [ : ] .)
    DIFFERENT       reduce using rule 89 (arrayslice -> ID [ : ] .)
    WA              reduce using rule 89 (arrayslice -> ID [ : ] .)
    AW              reduce using rule 89 (arrayslice -> ID [ : ] .)


state 141

    (39) condition -> ( condition . ) AW ( condition )
    (40) condition -> ( condition . ) WA ( condition )
    (43) condition -> ( condition . ) WA condition
    (44) condition -> ( condition . ) AW condition
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

    )               shift and go to state 179
    WA              shift and go to state 144
    AW              shift and go to state 145


state 142

    (61) expression -> ( expression . )
    (48) condition -> expression . SUP expression
    (49) condition -> expression . INF expression
    (50) condition -> expression . EQUALSCOMP expression
    (51) condition -> expression . SUPEQUALS expression
    (52) condition -> expression . INFEQUALS expression
    (53) condition -> expression . DIFFERENT expression
    (54) condition -> expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 115
    SUP             shift and go to state 149
    INF             shift and go to state 150
    EQUALSCOMP      shift and go to state 151
    SUPEQUALS       shift and go to state 152
    INFEQUALS       shift and go to state 153
    DIFFERENT       shift and go to state 154
    WA              reduce using rule 54 (condition -> expression .)
    AW              reduce using rule 54 (condition -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! )               [ reduce using rule 54 (condition -> expression .) ]


state 143

    (106) printing -> KTEB ( condition ) .

    KHREJ           reduce using rule 106 (printing -> KTEB ( condition ) .)
    KMEL            reduce using rule 106 (printing -> KTEB ( condition ) .)
    ID              reduce using rule 106 (printing -> KTEB ( condition ) .)
    MOJOD           reduce using rule 106 (printing -> KTEB ( condition ) .)
    KTEB            reduce using rule 106 (printing -> KTEB ( condition ) .)
    (               reduce using rule 106 (printing -> KTEB ( condition ) .)
    MINUS           reduce using rule 106 (printing -> KTEB ( condition ) .)
    PLUS            reduce using rule 106 (printing -> KTEB ( condition ) .)
    INT             reduce using rule 106 (printing -> KTEB ( condition ) .)
    FLOAT           reduce using rule 106 (printing -> KTEB ( condition ) .)
    STRING          reduce using rule 106 (printing -> KTEB ( condition ) .)
    KHATE2          reduce using rule 106 (printing -> KTEB ( condition ) .)
    S7I7            reduce using rule 106 (printing -> KTEB ( condition ) .)
    WALO            reduce using rule 106 (printing -> KTEB ( condition ) .)
    JEREB           reduce using rule 106 (printing -> KTEB ( condition ) .)
    ILA             reduce using rule 106 (printing -> KTEB ( condition ) .)
    LKOLA           reduce using rule 106 (printing -> KTEB ( condition ) .)
    MA7ED           reduce using rule 106 (printing -> KTEB ( condition ) .)
    DIR             reduce using rule 106 (printing -> KTEB ( condition ) .)
    QRA             reduce using rule 106 (printing -> KTEB ( condition ) .)
    TOL             reduce using rule 106 (printing -> KTEB ( condition ) .)
    TA3RIF          reduce using rule 106 (printing -> KTEB ( condition ) .)
    RED             reduce using rule 106 (printing -> KTEB ( condition ) .)
    [               reduce using rule 106 (printing -> KTEB ( condition ) .)
    $end            reduce using rule 106 (printing -> KTEB ( condition ) .)
    }               reduce using rule 106 (printing -> KTEB ( condition ) .)


state 144

    (41) condition -> condition WA . ( condition )
    (45) condition -> condition WA . condition
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 181
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 180
    expression                     shift and go to state 113
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 145

    (42) condition -> condition AW . ( condition )
    (46) condition -> condition AW . condition
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 183
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 182
    expression                     shift and go to state 113
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 146

    (107) printing -> KTEB ( incrementation ) .

    KHREJ           reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    KMEL            reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    ID              reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    MOJOD           reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    KTEB            reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    (               reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    MINUS           reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    PLUS            reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    INT             reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    FLOAT           reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    STRING          reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    KHATE2          reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    S7I7            reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    WALO            reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    JEREB           reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    ILA             reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    LKOLA           reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    MA7ED           reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    DIR             reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    QRA             reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    TOL             reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    TA3RIF          reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    RED             reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    [               reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    $end            reduce using rule 107 (printing -> KTEB ( incrementation ) .)
    }               reduce using rule 107 (printing -> KTEB ( incrementation ) .)


state 147

    (108) printing -> KTEB ( decrementation ) .

    KHREJ           reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    KMEL            reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    ID              reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    MOJOD           reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    KTEB            reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    (               reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    MINUS           reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    PLUS            reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    INT             reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    FLOAT           reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    STRING          reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    KHATE2          reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    S7I7            reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    WALO            reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    JEREB           reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    ILA             reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    LKOLA           reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    MA7ED           reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    DIR             reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    QRA             reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    TOL             reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    TA3RIF          reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    RED             reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    [               reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    $end            reduce using rule 108 (printing -> KTEB ( decrementation ) .)
    }               reduce using rule 108 (printing -> KTEB ( decrementation ) .)


state 148

    (47) condition -> L3AKSS ( . condition )
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 108
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 184
    expression                     shift and go to state 113
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 149

    (48) condition -> expression SUP . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 185
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 150

    (49) condition -> expression INF . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 186
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 151

    (50) condition -> expression EQUALSCOMP . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 187
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 152

    (51) condition -> expression SUPEQUALS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 188
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 153

    (52) condition -> expression INFEQUALS . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 189
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 154

    (53) condition -> expression DIFFERENT . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 190
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 155

    (67) try -> JEREB { instruction_list } . MASD9CH { instruction_list }
    (68) try -> JEREB { instruction_list } . MASD9CH { instruction_list } AKHIRAN { instruction_list }

    MASD9CH         shift and go to state 191


state 156

    (9) if -> ILA ( condition ) . { instruction_list }
    (10) if -> ILA ( condition ) . { instruction_list } WLA { instruction_list }

    {               shift and go to state 192


state 157

    (11) for -> LKOLA ( var_assign ; . condition ; incrementation ) { instruction_list }
    (12) for -> LKOLA ( var_assign ; . condition ; decrementation ) { instruction_list }
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 108
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 193
    expression                     shift and go to state 113
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 158

    (13) for -> LKOLA ( expression ; . condition ; incrementation ) { instruction_list }
    (14) for -> LKOLA ( expression ; . condition ; decrementation ) { instruction_list }
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 108
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 113
    condition                      shift and go to state 194
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 159

    (15) while -> MA7ED ( condition ) . { instruction_list }

    {               shift and go to state 195


state 160

    (16) doWhile -> DIR { instruction_list } . MA7ED ( condition )

    MA7ED           shift and go to state 196


state 161

    (65) input -> QRA ( expression ) .

    KHREJ           reduce using rule 65 (input -> QRA ( expression ) .)
    KMEL            reduce using rule 65 (input -> QRA ( expression ) .)
    ID              reduce using rule 65 (input -> QRA ( expression ) .)
    MOJOD           reduce using rule 65 (input -> QRA ( expression ) .)
    KTEB            reduce using rule 65 (input -> QRA ( expression ) .)
    (               reduce using rule 65 (input -> QRA ( expression ) .)
    MINUS           reduce using rule 65 (input -> QRA ( expression ) .)
    PLUS            reduce using rule 65 (input -> QRA ( expression ) .)
    INT             reduce using rule 65 (input -> QRA ( expression ) .)
    FLOAT           reduce using rule 65 (input -> QRA ( expression ) .)
    STRING          reduce using rule 65 (input -> QRA ( expression ) .)
    KHATE2          reduce using rule 65 (input -> QRA ( expression ) .)
    S7I7            reduce using rule 65 (input -> QRA ( expression ) .)
    WALO            reduce using rule 65 (input -> QRA ( expression ) .)
    JEREB           reduce using rule 65 (input -> QRA ( expression ) .)
    ILA             reduce using rule 65 (input -> QRA ( expression ) .)
    LKOLA           reduce using rule 65 (input -> QRA ( expression ) .)
    MA7ED           reduce using rule 65 (input -> QRA ( expression ) .)
    DIR             reduce using rule 65 (input -> QRA ( expression ) .)
    QRA             reduce using rule 65 (input -> QRA ( expression ) .)
    TOL             reduce using rule 65 (input -> QRA ( expression ) .)
    TA3RIF          reduce using rule 65 (input -> QRA ( expression ) .)
    RED             reduce using rule 65 (input -> QRA ( expression ) .)
    [               reduce using rule 65 (input -> QRA ( expression ) .)
    $end            reduce using rule 65 (input -> QRA ( expression ) .)
    }               reduce using rule 65 (input -> QRA ( expression ) .)
    ;               reduce using rule 65 (input -> QRA ( expression ) .)


state 162

    (109) len -> TOL ( expression ) .

    KHREJ           reduce using rule 109 (len -> TOL ( expression ) .)
    KMEL            reduce using rule 109 (len -> TOL ( expression ) .)
    ID              reduce using rule 109 (len -> TOL ( expression ) .)
    MOJOD           reduce using rule 109 (len -> TOL ( expression ) .)
    KTEB            reduce using rule 109 (len -> TOL ( expression ) .)
    (               reduce using rule 109 (len -> TOL ( expression ) .)
    MINUS           reduce using rule 109 (len -> TOL ( expression ) .)
    PLUS            reduce using rule 109 (len -> TOL ( expression ) .)
    INT             reduce using rule 109 (len -> TOL ( expression ) .)
    FLOAT           reduce using rule 109 (len -> TOL ( expression ) .)
    STRING          reduce using rule 109 (len -> TOL ( expression ) .)
    KHATE2          reduce using rule 109 (len -> TOL ( expression ) .)
    S7I7            reduce using rule 109 (len -> TOL ( expression ) .)
    WALO            reduce using rule 109 (len -> TOL ( expression ) .)
    JEREB           reduce using rule 109 (len -> TOL ( expression ) .)
    ILA             reduce using rule 109 (len -> TOL ( expression ) .)
    LKOLA           reduce using rule 109 (len -> TOL ( expression ) .)
    MA7ED           reduce using rule 109 (len -> TOL ( expression ) .)
    DIR             reduce using rule 109 (len -> TOL ( expression ) .)
    QRA             reduce using rule 109 (len -> TOL ( expression ) .)
    TOL             reduce using rule 109 (len -> TOL ( expression ) .)
    TA3RIF          reduce using rule 109 (len -> TOL ( expression ) .)
    RED             reduce using rule 109 (len -> TOL ( expression ) .)
    [               reduce using rule 109 (len -> TOL ( expression ) .)
    $end            reduce using rule 109 (len -> TOL ( expression ) .)
    }               reduce using rule 109 (len -> TOL ( expression ) .)


state 163

    (98) parameter -> ID .

    )               reduce using rule 98 (parameter -> ID .)
    ,               reduce using rule 98 (parameter -> ID .)


state 164

    (101) func -> TA3RIF ID ( parameter_list . ) { instruction_list }
    (100) parameter_list -> parameter_list . , parameter

    )               shift and go to state 197
    ,               shift and go to state 198


state 165

    (102) func -> TA3RIF ID ( ) . { instruction_list }

    {               shift and go to state 199


state 166

    (99) parameter_list -> parameter .

    )               reduce using rule 99 (parameter_list -> parameter .)
    ,               reduce using rule 99 (parameter_list -> parameter .)


state 167

    (80) arraylist -> arraylist , expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    ]               reduce using rule 80 (arraylist -> arraylist , expression .)
    ,               reduce using rule 80 (arraylist -> arraylist , expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 168

    (97) argument_list -> argument_list , expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               reduce using rule 97 (argument_list -> argument_list , expression .)
    ,               reduce using rule 97 (argument_list -> argument_list , expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 169

    (90) arrfn -> ID . ZID ( expression . )
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               shift and go to state 200
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 170

    (91) arrfn -> ID . KBER ( array . )

    )               shift and go to state 201


state 171

    (92) arrfn -> ID . KHWI ( ) .

    KHREJ           reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    KMEL            reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    ID              reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    MOJOD           reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    KTEB            reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    (               reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    MINUS           reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    PLUS            reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    INT             reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    FLOAT           reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    STRING          reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    KHATE2          reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    S7I7            reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    WALO            reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    JEREB           reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    ILA             reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    LKOLA           reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    MA7ED           reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    DIR             reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    QRA             reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    TOL             reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    TA3RIF          reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    RED             reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    [               reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    $end            reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    TIMES           reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    DIVIDE          reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    MODULO          reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    POWER           reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    )               reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    }               reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    ]               reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    ,               reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    ;               reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    :               reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    SUP             reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    INF             reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    EQUALSCOMP      reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    SUPEQUALS       reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    INFEQUALS       reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    DIFFERENT       reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    WA              reduce using rule 92 (arrfn -> ID . KHWI ( ) .)
    AW              reduce using rule 92 (arrfn -> ID . KHWI ( ) .)


state 172

    (93) arrfn -> ID . DKHEL ( expression . , expression )
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    ,               shift and go to state 202
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 173

    (94) arrfn -> ID . MSSE7 ( expression . )
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               shift and go to state 203
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 174

    (95) arrfn -> ID . MSSE7 ( ) .

    KHREJ           reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    KMEL            reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    ID              reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    MOJOD           reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    KTEB            reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    (               reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    MINUS           reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    PLUS            reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    INT             reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    FLOAT           reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    STRING          reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    KHATE2          reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    S7I7            reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    WALO            reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    JEREB           reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    ILA             reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    LKOLA           reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    MA7ED           reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    DIR             reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    QRA             reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    TOL             reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    TA3RIF          reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    RED             reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    [               reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    $end            reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    TIMES           reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    DIVIDE          reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    MODULO          reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    POWER           reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    )               reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    }               reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    ]               reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    ,               reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    ;               reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    :               reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    SUP             reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    INF             reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    EQUALSCOMP      reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    SUPEQUALS       reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    INFEQUALS       reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    DIFFERENT       reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    WA              reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)
    AW              reduce using rule 95 (arrfn -> ID . MSSE7 ( ) .)


state 175

    (85) dimensions -> dimensions [ expression ] .

    [               reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    EQUALS          reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    PLUS            reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    MINUS           reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    TIMES           reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    DIVIDE          reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    MODULO          reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    POWER           reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    KHREJ           reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    KMEL            reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    ID              reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    MOJOD           reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    KTEB            reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    (               reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    INT             reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    FLOAT           reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    STRING          reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    KHATE2          reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    S7I7            reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    WALO            reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    JEREB           reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    ILA             reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    LKOLA           reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    MA7ED           reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    DIR             reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    QRA             reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    TOL             reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    TA3RIF          reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    RED             reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    $end            reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    }               reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    )               reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    ]               reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    ,               reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    ;               reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    :               reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    SUP             reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    INF             reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    EQUALSCOMP      reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    SUPEQUALS       reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    INFEQUALS       reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    DIFFERENT       reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    WA              reduce using rule 85 (dimensions -> dimensions [ expression ] .)
    AW              reduce using rule 85 (dimensions -> dimensions [ expression ] .)


state 176

    (86) arrayslice -> ID [ expression : expression . ]
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    ]               shift and go to state 204
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 177

    (88) arrayslice -> ID [ expression : ] .

    EQUALS          reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    PLUS            reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    MINUS           reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    TIMES           reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    DIVIDE          reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    MODULO          reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    POWER           reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    KHREJ           reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    KMEL            reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    ID              reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    MOJOD           reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    KTEB            reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    (               reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    INT             reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    FLOAT           reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    STRING          reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    KHATE2          reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    S7I7            reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    WALO            reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    JEREB           reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    ILA             reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    LKOLA           reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    MA7ED           reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    DIR             reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    QRA             reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    TOL             reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    TA3RIF          reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    RED             reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    [               reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    $end            reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    )               reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    }               reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    ]               reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    ,               reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    ;               reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    :               reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    SUP             reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    INF             reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    EQUALSCOMP      reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    SUPEQUALS       reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    INFEQUALS       reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    DIFFERENT       reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    WA              reduce using rule 88 (arrayslice -> ID [ expression : ] .)
    AW              reduce using rule 88 (arrayslice -> ID [ expression : ] .)


state 178

    (87) arrayslice -> ID [ : expression ] .

    EQUALS          reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    PLUS            reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    MINUS           reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    TIMES           reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    DIVIDE          reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    MODULO          reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    POWER           reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    KHREJ           reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    KMEL            reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    ID              reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    MOJOD           reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    KTEB            reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    (               reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    INT             reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    FLOAT           reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    STRING          reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    KHATE2          reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    S7I7            reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    WALO            reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    JEREB           reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    ILA             reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    LKOLA           reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    MA7ED           reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    DIR             reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    QRA             reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    TOL             reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    TA3RIF          reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    RED             reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    [               reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    $end            reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    )               reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    }               reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    ]               reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    ,               reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    ;               reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    :               reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    SUP             reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    INF             reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    EQUALSCOMP      reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    SUPEQUALS       reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    INFEQUALS       reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    DIFFERENT       reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    WA              reduce using rule 87 (arrayslice -> ID [ : expression ] .)
    AW              reduce using rule 87 (arrayslice -> ID [ : expression ] .)


state 179

    (39) condition -> ( condition ) . AW ( condition )
    (40) condition -> ( condition ) . WA ( condition )
    (43) condition -> ( condition ) . WA condition
    (44) condition -> ( condition ) . AW condition

    AW              shift and go to state 205
    WA              shift and go to state 206


state 180

    (45) condition -> condition WA condition .
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

  ! shift/reduce conflict for WA resolved as shift
  ! shift/reduce conflict for AW resolved as shift
    )               reduce using rule 45 (condition -> condition WA condition .)
    ;               reduce using rule 45 (condition -> condition WA condition .)
    WA              shift and go to state 144
    AW              shift and go to state 145

  ! WA              [ reduce using rule 45 (condition -> condition WA condition .) ]
  ! AW              [ reduce using rule 45 (condition -> condition WA condition .) ]


state 181

    (41) condition -> condition WA ( . condition )
    (39) condition -> ( . condition ) AW ( condition )
    (40) condition -> ( . condition ) WA ( condition )
    (43) condition -> ( . condition ) WA condition
    (44) condition -> ( . condition ) AW condition
    (61) expression -> ( . expression )
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 108
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 207
    expression                     shift and go to state 142
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 182

    (46) condition -> condition AW condition .
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

  ! shift/reduce conflict for WA resolved as shift
  ! shift/reduce conflict for AW resolved as shift
    )               reduce using rule 46 (condition -> condition AW condition .)
    ;               reduce using rule 46 (condition -> condition AW condition .)
    WA              shift and go to state 144
    AW              shift and go to state 145

  ! WA              [ reduce using rule 46 (condition -> condition AW condition .) ]
  ! AW              [ reduce using rule 46 (condition -> condition AW condition .) ]


state 183

    (42) condition -> condition AW ( . condition )
    (39) condition -> ( . condition ) AW ( condition )
    (40) condition -> ( . condition ) WA ( condition )
    (43) condition -> ( . condition ) WA condition
    (44) condition -> ( . condition ) AW condition
    (61) expression -> ( . expression )
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 108
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 208
    expression                     shift and go to state 142
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 184

    (47) condition -> L3AKSS ( condition . )
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

    )               shift and go to state 209
    WA              shift and go to state 144
    AW              shift and go to state 145


state 185

    (48) condition -> expression SUP expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               reduce using rule 48 (condition -> expression SUP expression .)
    WA              reduce using rule 48 (condition -> expression SUP expression .)
    AW              reduce using rule 48 (condition -> expression SUP expression .)
    ;               reduce using rule 48 (condition -> expression SUP expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 186

    (49) condition -> expression INF expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               reduce using rule 49 (condition -> expression INF expression .)
    WA              reduce using rule 49 (condition -> expression INF expression .)
    AW              reduce using rule 49 (condition -> expression INF expression .)
    ;               reduce using rule 49 (condition -> expression INF expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 187

    (50) condition -> expression EQUALSCOMP expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               reduce using rule 50 (condition -> expression EQUALSCOMP expression .)
    WA              reduce using rule 50 (condition -> expression EQUALSCOMP expression .)
    AW              reduce using rule 50 (condition -> expression EQUALSCOMP expression .)
    ;               reduce using rule 50 (condition -> expression EQUALSCOMP expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 188

    (51) condition -> expression SUPEQUALS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               reduce using rule 51 (condition -> expression SUPEQUALS expression .)
    WA              reduce using rule 51 (condition -> expression SUPEQUALS expression .)
    AW              reduce using rule 51 (condition -> expression SUPEQUALS expression .)
    ;               reduce using rule 51 (condition -> expression SUPEQUALS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 189

    (52) condition -> expression INFEQUALS expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               reduce using rule 52 (condition -> expression INFEQUALS expression .)
    WA              reduce using rule 52 (condition -> expression INFEQUALS expression .)
    AW              reduce using rule 52 (condition -> expression INFEQUALS expression .)
    ;               reduce using rule 52 (condition -> expression INFEQUALS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 190

    (53) condition -> expression DIFFERENT expression .
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               reduce using rule 53 (condition -> expression DIFFERENT expression .)
    WA              reduce using rule 53 (condition -> expression DIFFERENT expression .)
    AW              reduce using rule 53 (condition -> expression DIFFERENT expression .)
    ;               reduce using rule 53 (condition -> expression DIFFERENT expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 191

    (67) try -> JEREB { instruction_list } MASD9CH . { instruction_list }
    (68) try -> JEREB { instruction_list } MASD9CH . { instruction_list } AKHIRAN { instruction_list }

    {               shift and go to state 210


state 192

    (9) if -> ILA ( condition ) { . instruction_list }
    (10) if -> ILA ( condition ) { . instruction_list } WLA { instruction_list }
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction_list               shift and go to state 211
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 193

    (11) for -> LKOLA ( var_assign ; condition . ; incrementation ) { instruction_list }
    (12) for -> LKOLA ( var_assign ; condition . ; decrementation ) { instruction_list }
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

    ;               shift and go to state 212
    WA              shift and go to state 144
    AW              shift and go to state 145


state 194

    (13) for -> LKOLA ( expression ; condition . ; incrementation ) { instruction_list }
    (14) for -> LKOLA ( expression ; condition . ; decrementation ) { instruction_list }
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

    ;               shift and go to state 213
    WA              shift and go to state 144
    AW              shift and go to state 145


state 195

    (15) while -> MA7ED ( condition ) { . instruction_list }
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction_list               shift and go to state 214
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 196

    (16) doWhile -> DIR { instruction_list } MA7ED . ( condition )

    (               shift and go to state 215


state 197

    (101) func -> TA3RIF ID ( parameter_list ) . { instruction_list }

    {               shift and go to state 216


state 198

    (100) parameter_list -> parameter_list , . parameter
    (98) parameter -> . ID

    ID              shift and go to state 163

    parameter                      shift and go to state 217

state 199

    (102) func -> TA3RIF ID ( ) { . instruction_list }
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction_list               shift and go to state 218
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 200

    (90) arrfn -> ID . ZID ( expression ) .

    KHREJ           reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    KMEL            reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    ID              reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    MOJOD           reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    KTEB            reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    (               reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    MINUS           reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    PLUS            reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    INT             reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    FLOAT           reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    STRING          reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    KHATE2          reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    S7I7            reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    WALO            reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    JEREB           reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    ILA             reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    LKOLA           reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    MA7ED           reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    DIR             reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    QRA             reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    TOL             reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    TA3RIF          reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    RED             reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    [               reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    $end            reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    TIMES           reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    DIVIDE          reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    MODULO          reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    POWER           reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    )               reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    }               reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    ]               reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    ,               reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    ;               reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    :               reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    SUP             reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    INF             reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    EQUALSCOMP      reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    SUPEQUALS       reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    INFEQUALS       reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    DIFFERENT       reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    WA              reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)
    AW              reduce using rule 90 (arrfn -> ID . ZID ( expression ) .)


state 201

    (91) arrfn -> ID . KBER ( array ) .

    KHREJ           reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    KMEL            reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    ID              reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    MOJOD           reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    KTEB            reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    (               reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    MINUS           reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    PLUS            reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    INT             reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    FLOAT           reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    STRING          reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    KHATE2          reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    S7I7            reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    WALO            reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    JEREB           reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    ILA             reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    LKOLA           reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    MA7ED           reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    DIR             reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    QRA             reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    TOL             reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    TA3RIF          reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    RED             reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    [               reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    $end            reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    TIMES           reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    DIVIDE          reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    MODULO          reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    POWER           reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    )               reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    }               reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    ]               reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    ,               reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    ;               reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    :               reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    SUP             reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    INF             reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    EQUALSCOMP      reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    SUPEQUALS       reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    INFEQUALS       reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    DIFFERENT       reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    WA              reduce using rule 91 (arrfn -> ID . KBER ( array ) .)
    AW              reduce using rule 91 (arrfn -> ID . KBER ( array ) .)


state 202

    (93) arrfn -> ID . DKHEL ( expression , . expression )
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    expression                     shift and go to state 219
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 203

    (94) arrfn -> ID . MSSE7 ( expression ) .

    KHREJ           reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    KMEL            reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    ID              reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    MOJOD           reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    KTEB            reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    (               reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    MINUS           reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    PLUS            reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    INT             reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    FLOAT           reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    STRING          reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    KHATE2          reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    S7I7            reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    WALO            reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    JEREB           reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    ILA             reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    LKOLA           reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    MA7ED           reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    DIR             reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    QRA             reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    TOL             reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    TA3RIF          reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    RED             reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    [               reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    $end            reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    TIMES           reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    DIVIDE          reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    MODULO          reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    POWER           reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    )               reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    }               reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    ]               reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    ,               reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    ;               reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    :               reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    SUP             reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    INF             reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    EQUALSCOMP      reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    SUPEQUALS       reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    INFEQUALS       reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    DIFFERENT       reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    WA              reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)
    AW              reduce using rule 94 (arrfn -> ID . MSSE7 ( expression ) .)


state 204

    (86) arrayslice -> ID [ expression : expression ] .

    EQUALS          reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    PLUS            reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    MINUS           reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    TIMES           reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    DIVIDE          reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    MODULO          reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    POWER           reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    KHREJ           reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    KMEL            reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    ID              reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    MOJOD           reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    KTEB            reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    (               reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    INT             reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    FLOAT           reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    STRING          reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    KHATE2          reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    S7I7            reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    WALO            reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    JEREB           reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    ILA             reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    LKOLA           reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    MA7ED           reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    DIR             reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    QRA             reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    TOL             reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    TA3RIF          reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    RED             reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    [               reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    $end            reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    )               reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    }               reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    ]               reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    ,               reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    ;               reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    :               reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    SUP             reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    INF             reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    EQUALSCOMP      reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    SUPEQUALS       reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    INFEQUALS       reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    DIFFERENT       reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    WA              reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)
    AW              reduce using rule 86 (arrayslice -> ID [ expression : expression ] .)


state 205

    (39) condition -> ( condition ) AW . ( condition )
    (44) condition -> ( condition ) AW . condition
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 220
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 221
    expression                     shift and go to state 113
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 206

    (40) condition -> ( condition ) WA . ( condition )
    (43) condition -> ( condition ) WA . condition
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 222
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 223
    expression                     shift and go to state 113
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 207

    (41) condition -> condition WA ( condition . )
    (39) condition -> ( condition . ) AW ( condition )
    (40) condition -> ( condition . ) WA ( condition )
    (43) condition -> ( condition . ) WA condition
    (44) condition -> ( condition . ) AW condition
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

    )               shift and go to state 224
    WA              shift and go to state 144
    AW              shift and go to state 145


state 208

    (42) condition -> condition AW ( condition . )
    (39) condition -> ( condition . ) AW ( condition )
    (40) condition -> ( condition . ) WA ( condition )
    (43) condition -> ( condition . ) WA condition
    (44) condition -> ( condition . ) AW condition
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

    )               shift and go to state 225
    WA              shift and go to state 144
    AW              shift and go to state 145


state 209

    (47) condition -> L3AKSS ( condition ) .

    )               reduce using rule 47 (condition -> L3AKSS ( condition ) .)
    WA              reduce using rule 47 (condition -> L3AKSS ( condition ) .)
    AW              reduce using rule 47 (condition -> L3AKSS ( condition ) .)
    ;               reduce using rule 47 (condition -> L3AKSS ( condition ) .)


state 210

    (67) try -> JEREB { instruction_list } MASD9CH { . instruction_list }
    (68) try -> JEREB { instruction_list } MASD9CH { . instruction_list } AKHIRAN { instruction_list }
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction_list               shift and go to state 226
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 211

    (9) if -> ILA ( condition ) { instruction_list . }
    (10) if -> ILA ( condition ) { instruction_list . } WLA { instruction_list }
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 227
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 212

    (11) for -> LKOLA ( var_assign ; condition ; . incrementation ) { instruction_list }
    (12) for -> LKOLA ( var_assign ; condition ; . decrementation ) { instruction_list }
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION

    ID              shift and go to state 230

    incrementation                 shift and go to state 228
    decrementation                 shift and go to state 229

state 213

    (13) for -> LKOLA ( expression ; condition ; . incrementation ) { instruction_list }
    (14) for -> LKOLA ( expression ; condition ; . decrementation ) { instruction_list }
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION

    ID              shift and go to state 230

    incrementation                 shift and go to state 231
    decrementation                 shift and go to state 232

state 214

    (15) while -> MA7ED ( condition ) { instruction_list . }
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 233
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 215

    (16) doWhile -> DIR { instruction_list } MA7ED ( . condition )
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 108
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 234
    expression                     shift and go to state 113
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 216

    (101) func -> TA3RIF ID ( parameter_list ) { . instruction_list }
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction_list               shift and go to state 235
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 217

    (100) parameter_list -> parameter_list , parameter .

    )               reduce using rule 100 (parameter_list -> parameter_list , parameter .)
    ,               reduce using rule 100 (parameter_list -> parameter_list , parameter .)


state 218

    (102) func -> TA3RIF ID ( ) { instruction_list . }
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 236
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 219

    (93) arrfn -> ID . DKHEL ( expression , expression . )
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . TIMES expression
    (58) expression -> expression . DIVIDE expression
    (59) expression -> expression . MODULO expression
    (60) expression -> expression . POWER expression

    )               shift and go to state 237
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 220

    (39) condition -> ( condition ) AW ( . condition )
    (39) condition -> ( . condition ) AW ( condition )
    (40) condition -> ( . condition ) WA ( condition )
    (43) condition -> ( . condition ) WA condition
    (44) condition -> ( . condition ) AW condition
    (61) expression -> ( . expression )
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 108
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 238
    expression                     shift and go to state 142
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 221

    (44) condition -> ( condition ) AW condition .
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

  ! shift/reduce conflict for WA resolved as shift
  ! shift/reduce conflict for AW resolved as shift
    )               reduce using rule 44 (condition -> ( condition ) AW condition .)
    ;               reduce using rule 44 (condition -> ( condition ) AW condition .)
    WA              shift and go to state 144
    AW              shift and go to state 145

  ! WA              [ reduce using rule 44 (condition -> ( condition ) AW condition .) ]
  ! AW              [ reduce using rule 44 (condition -> ( condition ) AW condition .) ]


state 222

    (40) condition -> ( condition ) WA ( . condition )
    (39) condition -> ( . condition ) AW ( condition )
    (40) condition -> ( . condition ) WA ( condition )
    (43) condition -> ( . condition ) WA condition
    (44) condition -> ( . condition ) AW condition
    (61) expression -> ( . expression )
    (39) condition -> . ( condition ) AW ( condition )
    (40) condition -> . ( condition ) WA ( condition )
    (41) condition -> . condition WA ( condition )
    (42) condition -> . condition AW ( condition )
    (43) condition -> . ( condition ) WA condition
    (44) condition -> . ( condition ) AW condition
    (45) condition -> . condition WA condition
    (46) condition -> . condition AW condition
    (47) condition -> . L3AKSS ( condition )
    (48) condition -> . expression SUP expression
    (49) condition -> . expression INF expression
    (50) condition -> . expression EQUALSCOMP expression
    (51) condition -> . expression SUPEQUALS expression
    (52) condition -> . expression INFEQUALS expression
    (53) condition -> . expression DIFFERENT expression
    (54) condition -> . expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )

    (               shift and go to state 108
    L3AKSS          shift and go to state 112
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    ID              shift and go to state 69
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    [               shift and go to state 48

    condition                      shift and go to state 239
    expression                     shift and go to state 142
    array                          shift and go to state 38
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72

state 223

    (43) condition -> ( condition ) WA condition .
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

  ! shift/reduce conflict for WA resolved as shift
  ! shift/reduce conflict for AW resolved as shift
    )               reduce using rule 43 (condition -> ( condition ) WA condition .)
    ;               reduce using rule 43 (condition -> ( condition ) WA condition .)
    WA              shift and go to state 144
    AW              shift and go to state 145

  ! WA              [ reduce using rule 43 (condition -> ( condition ) WA condition .) ]
  ! AW              [ reduce using rule 43 (condition -> ( condition ) WA condition .) ]


state 224

    (41) condition -> condition WA ( condition ) .
    (39) condition -> ( condition ) . AW ( condition )
    (40) condition -> ( condition ) . WA ( condition )
    (43) condition -> ( condition ) . WA condition
    (44) condition -> ( condition ) . AW condition

  ! shift/reduce conflict for AW resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    )               reduce using rule 41 (condition -> condition WA ( condition ) .)
    ;               reduce using rule 41 (condition -> condition WA ( condition ) .)
    AW              shift and go to state 205
    WA              shift and go to state 206

  ! WA              [ reduce using rule 41 (condition -> condition WA ( condition ) .) ]
  ! AW              [ reduce using rule 41 (condition -> condition WA ( condition ) .) ]


state 225

    (42) condition -> condition AW ( condition ) .
    (39) condition -> ( condition ) . AW ( condition )
    (40) condition -> ( condition ) . WA ( condition )
    (43) condition -> ( condition ) . WA condition
    (44) condition -> ( condition ) . AW condition

  ! shift/reduce conflict for AW resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    )               reduce using rule 42 (condition -> condition AW ( condition ) .)
    ;               reduce using rule 42 (condition -> condition AW ( condition ) .)
    AW              shift and go to state 205
    WA              shift and go to state 206

  ! WA              [ reduce using rule 42 (condition -> condition AW ( condition ) .) ]
  ! AW              [ reduce using rule 42 (condition -> condition AW ( condition ) .) ]


state 226

    (67) try -> JEREB { instruction_list } MASD9CH { instruction_list . }
    (68) try -> JEREB { instruction_list } MASD9CH { instruction_list . } AKHIRAN { instruction_list }
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 240
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 227

    (9) if -> ILA ( condition ) { instruction_list } .
    (10) if -> ILA ( condition ) { instruction_list } . WLA { instruction_list }

    KHREJ           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    KMEL            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    ID              reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    MOJOD           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    KTEB            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    (               reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    MINUS           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    PLUS            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    INT             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    FLOAT           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    STRING          reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    KHATE2          reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    S7I7            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    WALO            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    JEREB           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    ILA             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    LKOLA           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    MA7ED           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    DIR             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    QRA             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    TOL             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    TA3RIF          reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    RED             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    [               reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    $end            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    }               reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    WLA             shift and go to state 241


state 228

    (11) for -> LKOLA ( var_assign ; condition ; incrementation . ) { instruction_list }

    )               shift and go to state 242


state 229

    (12) for -> LKOLA ( var_assign ; condition ; decrementation . ) { instruction_list }

    )               shift and go to state 243


state 230

    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION

    INCREMENTATION  shift and go to state 57
    DECREMENTATION  shift and go to state 58


state 231

    (13) for -> LKOLA ( expression ; condition ; incrementation . ) { instruction_list }

    )               shift and go to state 244


state 232

    (14) for -> LKOLA ( expression ; condition ; decrementation . ) { instruction_list }

    )               shift and go to state 245


state 233

    (15) while -> MA7ED ( condition ) { instruction_list } .

    KHREJ           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    KMEL            reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    ID              reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    MOJOD           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    KTEB            reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    (               reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    MINUS           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    PLUS            reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    INT             reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    FLOAT           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    STRING          reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    KHATE2          reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    S7I7            reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    WALO            reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    JEREB           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    ILA             reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    LKOLA           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    MA7ED           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    DIR             reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    QRA             reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    TOL             reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    TA3RIF          reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    RED             reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    [               reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    $end            reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    }               reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)


state 234

    (16) doWhile -> DIR { instruction_list } MA7ED ( condition . )
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

    )               shift and go to state 246
    WA              shift and go to state 144
    AW              shift and go to state 145


state 235

    (101) func -> TA3RIF ID ( parameter_list ) { instruction_list . }
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 247
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 236

    (102) func -> TA3RIF ID ( ) { instruction_list } .

    KHREJ           reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    KMEL            reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    ID              reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    MOJOD           reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    KTEB            reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    (               reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    MINUS           reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    PLUS            reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    INT             reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    FLOAT           reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    STRING          reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    KHATE2          reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    S7I7            reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    WALO            reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    JEREB           reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    ILA             reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    LKOLA           reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    MA7ED           reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    DIR             reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    QRA             reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    TOL             reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    TA3RIF          reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    RED             reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    [               reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    $end            reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)
    }               reduce using rule 102 (func -> TA3RIF ID ( ) { instruction_list } .)


state 237

    (93) arrfn -> ID . DKHEL ( expression , expression ) .

    KHREJ           reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    KMEL            reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    ID              reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    MOJOD           reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    KTEB            reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    (               reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    MINUS           reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    PLUS            reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    INT             reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    FLOAT           reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    STRING          reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    KHATE2          reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    S7I7            reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    WALO            reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    JEREB           reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    ILA             reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    LKOLA           reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    MA7ED           reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    DIR             reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    QRA             reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    TOL             reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    TA3RIF          reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    RED             reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    [               reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    $end            reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    TIMES           reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    DIVIDE          reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    MODULO          reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    POWER           reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    )               reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    }               reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    ]               reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    ,               reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    ;               reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    :               reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    SUP             reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    INF             reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    EQUALSCOMP      reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    SUPEQUALS       reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    INFEQUALS       reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    DIFFERENT       reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    WA              reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)
    AW              reduce using rule 93 (arrfn -> ID . DKHEL ( expression , expression ) .)


state 238

    (39) condition -> ( condition ) AW ( condition . )
    (39) condition -> ( condition . ) AW ( condition )
    (40) condition -> ( condition . ) WA ( condition )
    (43) condition -> ( condition . ) WA condition
    (44) condition -> ( condition . ) AW condition
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

    )               shift and go to state 248
    WA              shift and go to state 144
    AW              shift and go to state 145


state 239

    (40) condition -> ( condition ) WA ( condition . )
    (39) condition -> ( condition . ) AW ( condition )
    (40) condition -> ( condition . ) WA ( condition )
    (43) condition -> ( condition . ) WA condition
    (44) condition -> ( condition . ) AW condition
    (41) condition -> condition . WA ( condition )
    (42) condition -> condition . AW ( condition )
    (45) condition -> condition . WA condition
    (46) condition -> condition . AW condition

    )               shift and go to state 249
    WA              shift and go to state 144
    AW              shift and go to state 145


state 240

    (67) try -> JEREB { instruction_list } MASD9CH { instruction_list } .
    (68) try -> JEREB { instruction_list } MASD9CH { instruction_list } . AKHIRAN { instruction_list }

    KHREJ           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KMEL            reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    ID              reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MOJOD           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KTEB            reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    (               reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MINUS           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    PLUS            reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    INT             reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    FLOAT           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    STRING          reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KHATE2          reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    S7I7            reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    WALO            reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    JEREB           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    ILA             reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    LKOLA           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MA7ED           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    DIR             reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    QRA             reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    TOL             reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    TA3RIF          reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    RED             reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    [               reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    $end            reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    }               reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    AKHIRAN         shift and go to state 250


state 241

    (10) if -> ILA ( condition ) { instruction_list } WLA . { instruction_list }

    {               shift and go to state 251


state 242

    (11) for -> LKOLA ( var_assign ; condition ; incrementation ) . { instruction_list }

    {               shift and go to state 252


state 243

    (12) for -> LKOLA ( var_assign ; condition ; decrementation ) . { instruction_list }

    {               shift and go to state 253


state 244

    (13) for -> LKOLA ( expression ; condition ; incrementation ) . { instruction_list }

    {               shift and go to state 254


state 245

    (14) for -> LKOLA ( expression ; condition ; decrementation ) . { instruction_list }

    {               shift and go to state 255


state 246

    (16) doWhile -> DIR { instruction_list } MA7ED ( condition ) .

    KHREJ           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KMEL            reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    ID              reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MOJOD           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KTEB            reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    (               reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MINUS           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    PLUS            reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    INT             reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    FLOAT           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    STRING          reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KHATE2          reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    S7I7            reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    WALO            reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    JEREB           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    ILA             reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    LKOLA           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MA7ED           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    DIR             reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    QRA             reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    TOL             reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    TA3RIF          reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    RED             reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    [               reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    $end            reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    }               reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)


state 247

    (101) func -> TA3RIF ID ( parameter_list ) { instruction_list } .

    KHREJ           reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    KMEL            reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    ID              reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    MOJOD           reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    KTEB            reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    (               reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    MINUS           reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    PLUS            reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    INT             reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    FLOAT           reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    STRING          reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    KHATE2          reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    S7I7            reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    WALO            reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    JEREB           reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    ILA             reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    LKOLA           reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    MA7ED           reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    DIR             reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    QRA             reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    TOL             reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    TA3RIF          reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    RED             reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    [               reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    $end            reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    }               reduce using rule 101 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)


state 248

    (39) condition -> ( condition ) AW ( condition ) .
    (39) condition -> ( condition ) . AW ( condition )
    (40) condition -> ( condition ) . WA ( condition )
    (43) condition -> ( condition ) . WA condition
    (44) condition -> ( condition ) . AW condition

  ! shift/reduce conflict for AW resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    )               reduce using rule 39 (condition -> ( condition ) AW ( condition ) .)
    ;               reduce using rule 39 (condition -> ( condition ) AW ( condition ) .)
    AW              shift and go to state 205
    WA              shift and go to state 206

  ! WA              [ reduce using rule 39 (condition -> ( condition ) AW ( condition ) .) ]
  ! AW              [ reduce using rule 39 (condition -> ( condition ) AW ( condition ) .) ]


state 249

    (40) condition -> ( condition ) WA ( condition ) .
    (39) condition -> ( condition ) . AW ( condition )
    (40) condition -> ( condition ) . WA ( condition )
    (43) condition -> ( condition ) . WA condition
    (44) condition -> ( condition ) . AW condition

  ! shift/reduce conflict for AW resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    )               reduce using rule 40 (condition -> ( condition ) WA ( condition ) .)
    ;               reduce using rule 40 (condition -> ( condition ) WA ( condition ) .)
    AW              shift and go to state 205
    WA              shift and go to state 206

  ! WA              [ reduce using rule 40 (condition -> ( condition ) WA ( condition ) .) ]
  ! AW              [ reduce using rule 40 (condition -> ( condition ) WA ( condition ) .) ]


state 250

    (68) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN . { instruction_list }

    {               shift and go to state 256


state 251

    (10) if -> ILA ( condition ) { instruction_list } WLA { . instruction_list }
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction_list               shift and go to state 257
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 252

    (11) for -> LKOLA ( var_assign ; condition ; incrementation ) { . instruction_list }
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    var_assign                     shift and go to state 4
    incrementation                 shift and go to state 7
    instruction_list               shift and go to state 258
    instruction                    shift and go to state 3
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 253

    (12) for -> LKOLA ( var_assign ; condition ; decrementation ) { . instruction_list }
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    var_assign                     shift and go to state 4
    decrementation                 shift and go to state 8
    instruction_list               shift and go to state 259
    instruction                    shift and go to state 3
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 254

    (13) for -> LKOLA ( expression ; condition ; incrementation ) { . instruction_list }
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    expression                     shift and go to state 9
    incrementation                 shift and go to state 7
    instruction_list               shift and go to state 260
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 255

    (14) for -> LKOLA ( expression ; condition ; decrementation ) { . instruction_list }
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    expression                     shift and go to state 9
    decrementation                 shift and go to state 8
    instruction_list               shift and go to state 261
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 256

    (68) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { . instruction_list }
    (37) instruction_list -> . instruction
    (38) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 110 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction_list               shift and go to state 262
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 257

    (10) if -> ILA ( condition ) { instruction_list } WLA { instruction_list . }
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 263
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 258

    (11) for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list . }
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 264
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    var_assign                     shift and go to state 4
    incrementation                 shift and go to state 7
    instruction                    shift and go to state 49
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 259

    (12) for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list . }
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 265
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    var_assign                     shift and go to state 4
    decrementation                 shift and go to state 8
    instruction                    shift and go to state 49
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 260

    (13) for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list . }
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 266
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    expression                     shift and go to state 9
    incrementation                 shift and go to state 7
    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 261

    (14) for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list . }
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 267
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    expression                     shift and go to state 9
    decrementation                 shift and go to state 8
    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 262

    (68) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list . }
    (38) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . appel_func
    (35) instruction -> . return
    (36) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (106) printing -> . KTEB ( condition )
    (107) printing -> . KTEB ( incrementation )
    (108) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression TIMES expression
    (58) expression -> . expression DIVIDE expression
    (59) expression -> . expression MODULO expression
    (60) expression -> . expression POWER expression
    (61) expression -> . ( expression )
    (62) expression -> . MINUS expression
    (63) expression -> . PLUS expression
    (64) expression -> . ID
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . STRING
    (72) expression -> . KHATE2
    (73) expression -> . S7I7
    (74) expression -> . WALO
    (75) expression -> . array
    (76) expression -> . arrayelt
    (77) expression -> . arrayslice
    (78) expression -> . arrfn
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (68) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (65) input -> . QRA ( expression )
    (66) input -> . QRA ( )
    (109) len -> . TOL ( expression )
    (110) empty -> .
    (101) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (102) func -> . TA3RIF ID ( ) { instruction_list }
    (103) appel_func -> . ID ( argument_list )
    (104) appel_func -> . ID ( )
    (105) return -> . RED expression
    (90) arrfn -> . ID . ZID ( expression )
    (91) arrfn -> . ID . KBER ( array )
    (92) arrfn -> . ID . KHWI ( )
    (93) arrfn -> . ID . DKHEL ( expression , expression )
    (94) arrfn -> . ID . MSSE7 ( expression )
    (95) arrfn -> . ID . MSSE7 ( )
    (83) arrayelt -> . ID dimensions
    (86) arrayslice -> . ID [ expression : expression ]
    (87) arrayslice -> . ID [ : expression ]
    (88) arrayslice -> . ID [ expression : ]
    (89) arrayslice -> . ID [ : ]
    (81) array -> . [ arraylist ]
    (82) array -> . [ ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 268
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 24
    MOJOD           shift and go to state 25
    KTEB            shift and go to state 28
    (               shift and go to state 29
    MINUS           shift and go to state 31
    PLUS            shift and go to state 30
    INT             shift and go to state 32
    FLOAT           shift and go to state 33
    STRING          shift and go to state 34
    KHATE2          shift and go to state 35
    S7I7            shift and go to state 36
    WALO            shift and go to state 37
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! }               [ reduce using rule 110 (empty -> .) ]
  ! KHREJ           [ reduce using rule 110 (empty -> .) ]
  ! KMEL            [ reduce using rule 110 (empty -> .) ]
  ! ID              [ reduce using rule 110 (empty -> .) ]
  ! MOJOD           [ reduce using rule 110 (empty -> .) ]
  ! KTEB            [ reduce using rule 110 (empty -> .) ]
  ! (               [ reduce using rule 110 (empty -> .) ]
  ! MINUS           [ reduce using rule 110 (empty -> .) ]
  ! PLUS            [ reduce using rule 110 (empty -> .) ]
  ! INT             [ reduce using rule 110 (empty -> .) ]
  ! FLOAT           [ reduce using rule 110 (empty -> .) ]
  ! STRING          [ reduce using rule 110 (empty -> .) ]
  ! KHATE2          [ reduce using rule 110 (empty -> .) ]
  ! S7I7            [ reduce using rule 110 (empty -> .) ]
  ! WALO            [ reduce using rule 110 (empty -> .) ]
  ! JEREB           [ reduce using rule 110 (empty -> .) ]
  ! ILA             [ reduce using rule 110 (empty -> .) ]
  ! LKOLA           [ reduce using rule 110 (empty -> .) ]
  ! MA7ED           [ reduce using rule 110 (empty -> .) ]
  ! DIR             [ reduce using rule 110 (empty -> .) ]
  ! QRA             [ reduce using rule 110 (empty -> .) ]
  ! TOL             [ reduce using rule 110 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 110 (empty -> .) ]
  ! RED             [ reduce using rule 110 (empty -> .) ]
  ! [               [ reduce using rule 110 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    appel_func                     shift and go to state 21
    return                         shift and go to state 22
    arrfn                          shift and go to state 23
    arrayelt                       shift and go to state 26
    arrayslice                     shift and go to state 27
    array                          shift and go to state 38

state 263

    (10) if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .

    KHREJ           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KMEL            reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    ID              reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MOJOD           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KTEB            reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    (               reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MINUS           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    PLUS            reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    INT             reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    FLOAT           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    STRING          reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KHATE2          reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    S7I7            reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    WALO            reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    JEREB           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    ILA             reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    LKOLA           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MA7ED           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    DIR             reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    QRA             reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    TOL             reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    TA3RIF          reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    RED             reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    [               reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    $end            reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    }               reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)


state 264

    (11) for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .

    KHREJ           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KMEL            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    ID              reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MOJOD           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KTEB            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    (               reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MINUS           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    PLUS            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    INT             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    FLOAT           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    STRING          reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KHATE2          reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    S7I7            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    WALO            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    JEREB           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    ILA             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    LKOLA           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MA7ED           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    DIR             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    QRA             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    TOL             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    TA3RIF          reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    RED             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    [               reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    $end            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    }               reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)


state 265

    (12) for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .

    KHREJ           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KMEL            reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    ID              reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MOJOD           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KTEB            reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    (               reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MINUS           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    PLUS            reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    INT             reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    FLOAT           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    STRING          reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KHATE2          reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    S7I7            reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    WALO            reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    JEREB           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    ILA             reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    LKOLA           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MA7ED           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    DIR             reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    QRA             reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    TOL             reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    TA3RIF          reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    RED             reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    [               reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    $end            reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    }               reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)


state 266

    (13) for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .

    KHREJ           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KMEL            reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    ID              reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MOJOD           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KTEB            reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    (               reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MINUS           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    PLUS            reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    INT             reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    FLOAT           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    STRING          reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KHATE2          reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    S7I7            reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    WALO            reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    JEREB           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    ILA             reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    LKOLA           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MA7ED           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    DIR             reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    QRA             reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    TOL             reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    TA3RIF          reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    RED             reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    [               reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    $end            reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    }               reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)


state 267

    (14) for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .

    KHREJ           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KMEL            reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    ID              reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MOJOD           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KTEB            reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    (               reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MINUS           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    PLUS            reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    INT             reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    FLOAT           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    STRING          reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KHATE2          reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    S7I7            reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    WALO            reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    JEREB           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    ILA             reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    LKOLA           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MA7ED           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    DIR             reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    QRA             reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    TOL             reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    TA3RIF          reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    RED             reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    [               reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    $end            reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    }               reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)


state 268

    (68) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .

    KHREJ           reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KMEL            reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    ID              reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MOJOD           reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KTEB            reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    (               reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MINUS           reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    PLUS            reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    INT             reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    FLOAT           reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    STRING          reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KHATE2          reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    S7I7            reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    WALO            reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    JEREB           reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    ILA             reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    LKOLA           reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MA7ED           reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    DIR             reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    QRA             reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    TOL             reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    TA3RIF          reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    RED             reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    [               reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    $end            reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    }               reduce using rule 68 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KHREJ in state 0 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 0 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 0 resolved as shift
WARNING: shift/reduce conflict for ( in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 0 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 0 resolved as shift
WARNING: shift/reduce conflict for WALO in state 0 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 0 resolved as shift
WARNING: shift/reduce conflict for ILA in state 0 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 0 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 0 resolved as shift
WARNING: shift/reduce conflict for DIR in state 0 resolved as shift
WARNING: shift/reduce conflict for QRA in state 0 resolved as shift
WARNING: shift/reduce conflict for TOL in state 0 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 0 resolved as shift
WARNING: shift/reduce conflict for RED in state 0 resolved as shift
WARNING: shift/reduce conflict for [ in state 0 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 2 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 2 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 2 resolved as shift
WARNING: shift/reduce conflict for ( in state 2 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 2 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 2 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 2 resolved as shift
WARNING: shift/reduce conflict for WALO in state 2 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 2 resolved as shift
WARNING: shift/reduce conflict for ILA in state 2 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 2 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 2 resolved as shift
WARNING: shift/reduce conflict for DIR in state 2 resolved as shift
WARNING: shift/reduce conflict for QRA in state 2 resolved as shift
WARNING: shift/reduce conflict for TOL in state 2 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 2 resolved as shift
WARNING: shift/reduce conflict for RED in state 2 resolved as shift
WARNING: shift/reduce conflict for [ in state 2 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 9 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 9 resolved as shift
WARNING: shift/reduce conflict for ( in state 24 resolved as shift
WARNING: shift/reduce conflict for [ in state 24 resolved as shift
WARNING: shift/reduce conflict for [ in state 61 resolved as shift
WARNING: shift/reduce conflict for [ in state 69 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 75 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 75 resolved as shift
WARNING: shift/reduce conflict for ID in state 75 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 75 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 75 resolved as shift
WARNING: shift/reduce conflict for ( in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for INT in state 75 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 75 resolved as shift
WARNING: shift/reduce conflict for STRING in state 75 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 75 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 75 resolved as shift
WARNING: shift/reduce conflict for WALO in state 75 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 75 resolved as shift
WARNING: shift/reduce conflict for ILA in state 75 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 75 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 75 resolved as shift
WARNING: shift/reduce conflict for DIR in state 75 resolved as shift
WARNING: shift/reduce conflict for QRA in state 75 resolved as shift
WARNING: shift/reduce conflict for TOL in state 75 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 75 resolved as shift
WARNING: shift/reduce conflict for RED in state 75 resolved as shift
WARNING: shift/reduce conflict for [ in state 75 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 79 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 79 resolved as shift
WARNING: shift/reduce conflict for ID in state 79 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 79 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 79 resolved as shift
WARNING: shift/reduce conflict for ( in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for INT in state 79 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 79 resolved as shift
WARNING: shift/reduce conflict for STRING in state 79 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 79 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 79 resolved as shift
WARNING: shift/reduce conflict for WALO in state 79 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 79 resolved as shift
WARNING: shift/reduce conflict for ILA in state 79 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 79 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 79 resolved as shift
WARNING: shift/reduce conflict for DIR in state 79 resolved as shift
WARNING: shift/reduce conflict for QRA in state 79 resolved as shift
WARNING: shift/reduce conflict for TOL in state 79 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 79 resolved as shift
WARNING: shift/reduce conflict for RED in state 79 resolved as shift
WARNING: shift/reduce conflict for [ in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 91 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 91 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 91 resolved as shift
WARNING: shift/reduce conflict for POWER in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 92 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 92 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 92 resolved as shift
WARNING: shift/reduce conflict for POWER in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for } in state 116 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 116 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 116 resolved as shift
WARNING: shift/reduce conflict for ID in state 116 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 116 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 116 resolved as shift
WARNING: shift/reduce conflict for ( in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for INT in state 116 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 116 resolved as shift
WARNING: shift/reduce conflict for STRING in state 116 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 116 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 116 resolved as shift
WARNING: shift/reduce conflict for WALO in state 116 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 116 resolved as shift
WARNING: shift/reduce conflict for ILA in state 116 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 116 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 116 resolved as shift
WARNING: shift/reduce conflict for DIR in state 116 resolved as shift
WARNING: shift/reduce conflict for QRA in state 116 resolved as shift
WARNING: shift/reduce conflict for TOL in state 116 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 116 resolved as shift
WARNING: shift/reduce conflict for RED in state 116 resolved as shift
WARNING: shift/reduce conflict for [ in state 116 resolved as shift
WARNING: shift/reduce conflict for } in state 122 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 122 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 122 resolved as shift
WARNING: shift/reduce conflict for ID in state 122 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 122 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 122 resolved as shift
WARNING: shift/reduce conflict for ( in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 122 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 122 resolved as shift
WARNING: shift/reduce conflict for INT in state 122 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 122 resolved as shift
WARNING: shift/reduce conflict for STRING in state 122 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 122 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 122 resolved as shift
WARNING: shift/reduce conflict for WALO in state 122 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 122 resolved as shift
WARNING: shift/reduce conflict for ILA in state 122 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 122 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 122 resolved as shift
WARNING: shift/reduce conflict for DIR in state 122 resolved as shift
WARNING: shift/reduce conflict for QRA in state 122 resolved as shift
WARNING: shift/reduce conflict for TOL in state 122 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 122 resolved as shift
WARNING: shift/reduce conflict for RED in state 122 resolved as shift
WARNING: shift/reduce conflict for [ in state 122 resolved as shift
WARNING: shift/reduce conflict for ) in state 142 resolved as shift
WARNING: shift/reduce conflict for WA in state 180 resolved as shift
WARNING: shift/reduce conflict for AW in state 180 resolved as shift
WARNING: shift/reduce conflict for WA in state 182 resolved as shift
WARNING: shift/reduce conflict for AW in state 182 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 192 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 192 resolved as shift
WARNING: shift/reduce conflict for ID in state 192 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 192 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 192 resolved as shift
WARNING: shift/reduce conflict for ( in state 192 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 192 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 192 resolved as shift
WARNING: shift/reduce conflict for INT in state 192 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 192 resolved as shift
WARNING: shift/reduce conflict for STRING in state 192 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 192 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 192 resolved as shift
WARNING: shift/reduce conflict for WALO in state 192 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 192 resolved as shift
WARNING: shift/reduce conflict for ILA in state 192 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 192 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 192 resolved as shift
WARNING: shift/reduce conflict for DIR in state 192 resolved as shift
WARNING: shift/reduce conflict for QRA in state 192 resolved as shift
WARNING: shift/reduce conflict for TOL in state 192 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 192 resolved as shift
WARNING: shift/reduce conflict for RED in state 192 resolved as shift
WARNING: shift/reduce conflict for [ in state 192 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 195 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 195 resolved as shift
WARNING: shift/reduce conflict for ID in state 195 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 195 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 195 resolved as shift
WARNING: shift/reduce conflict for ( in state 195 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 195 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 195 resolved as shift
WARNING: shift/reduce conflict for INT in state 195 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 195 resolved as shift
WARNING: shift/reduce conflict for STRING in state 195 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 195 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 195 resolved as shift
WARNING: shift/reduce conflict for WALO in state 195 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 195 resolved as shift
WARNING: shift/reduce conflict for ILA in state 195 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 195 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 195 resolved as shift
WARNING: shift/reduce conflict for DIR in state 195 resolved as shift
WARNING: shift/reduce conflict for QRA in state 195 resolved as shift
WARNING: shift/reduce conflict for TOL in state 195 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 195 resolved as shift
WARNING: shift/reduce conflict for RED in state 195 resolved as shift
WARNING: shift/reduce conflict for [ in state 195 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 199 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 199 resolved as shift
WARNING: shift/reduce conflict for ID in state 199 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 199 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 199 resolved as shift
WARNING: shift/reduce conflict for ( in state 199 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 199 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 199 resolved as shift
WARNING: shift/reduce conflict for INT in state 199 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 199 resolved as shift
WARNING: shift/reduce conflict for STRING in state 199 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 199 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 199 resolved as shift
WARNING: shift/reduce conflict for WALO in state 199 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 199 resolved as shift
WARNING: shift/reduce conflict for ILA in state 199 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 199 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 199 resolved as shift
WARNING: shift/reduce conflict for DIR in state 199 resolved as shift
WARNING: shift/reduce conflict for QRA in state 199 resolved as shift
WARNING: shift/reduce conflict for TOL in state 199 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 199 resolved as shift
WARNING: shift/reduce conflict for RED in state 199 resolved as shift
WARNING: shift/reduce conflict for [ in state 199 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 210 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 210 resolved as shift
WARNING: shift/reduce conflict for ID in state 210 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 210 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 210 resolved as shift
WARNING: shift/reduce conflict for ( in state 210 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 210 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 210 resolved as shift
WARNING: shift/reduce conflict for INT in state 210 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 210 resolved as shift
WARNING: shift/reduce conflict for STRING in state 210 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 210 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 210 resolved as shift
WARNING: shift/reduce conflict for WALO in state 210 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 210 resolved as shift
WARNING: shift/reduce conflict for ILA in state 210 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 210 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 210 resolved as shift
WARNING: shift/reduce conflict for DIR in state 210 resolved as shift
WARNING: shift/reduce conflict for QRA in state 210 resolved as shift
WARNING: shift/reduce conflict for TOL in state 210 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 210 resolved as shift
WARNING: shift/reduce conflict for RED in state 210 resolved as shift
WARNING: shift/reduce conflict for [ in state 210 resolved as shift
WARNING: shift/reduce conflict for } in state 211 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 211 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 211 resolved as shift
WARNING: shift/reduce conflict for ID in state 211 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 211 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 211 resolved as shift
WARNING: shift/reduce conflict for ( in state 211 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 211 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 211 resolved as shift
WARNING: shift/reduce conflict for INT in state 211 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 211 resolved as shift
WARNING: shift/reduce conflict for STRING in state 211 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 211 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 211 resolved as shift
WARNING: shift/reduce conflict for WALO in state 211 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 211 resolved as shift
WARNING: shift/reduce conflict for ILA in state 211 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 211 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 211 resolved as shift
WARNING: shift/reduce conflict for DIR in state 211 resolved as shift
WARNING: shift/reduce conflict for QRA in state 211 resolved as shift
WARNING: shift/reduce conflict for TOL in state 211 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 211 resolved as shift
WARNING: shift/reduce conflict for RED in state 211 resolved as shift
WARNING: shift/reduce conflict for [ in state 211 resolved as shift
WARNING: shift/reduce conflict for } in state 214 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 214 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 214 resolved as shift
WARNING: shift/reduce conflict for ID in state 214 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 214 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 214 resolved as shift
WARNING: shift/reduce conflict for ( in state 214 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 214 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 214 resolved as shift
WARNING: shift/reduce conflict for INT in state 214 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 214 resolved as shift
WARNING: shift/reduce conflict for STRING in state 214 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 214 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 214 resolved as shift
WARNING: shift/reduce conflict for WALO in state 214 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 214 resolved as shift
WARNING: shift/reduce conflict for ILA in state 214 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 214 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 214 resolved as shift
WARNING: shift/reduce conflict for DIR in state 214 resolved as shift
WARNING: shift/reduce conflict for QRA in state 214 resolved as shift
WARNING: shift/reduce conflict for TOL in state 214 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 214 resolved as shift
WARNING: shift/reduce conflict for RED in state 214 resolved as shift
WARNING: shift/reduce conflict for [ in state 214 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 216 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 216 resolved as shift
WARNING: shift/reduce conflict for ID in state 216 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 216 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 216 resolved as shift
WARNING: shift/reduce conflict for ( in state 216 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 216 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 216 resolved as shift
WARNING: shift/reduce conflict for INT in state 216 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 216 resolved as shift
WARNING: shift/reduce conflict for STRING in state 216 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 216 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 216 resolved as shift
WARNING: shift/reduce conflict for WALO in state 216 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 216 resolved as shift
WARNING: shift/reduce conflict for ILA in state 216 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 216 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 216 resolved as shift
WARNING: shift/reduce conflict for DIR in state 216 resolved as shift
WARNING: shift/reduce conflict for QRA in state 216 resolved as shift
WARNING: shift/reduce conflict for TOL in state 216 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 216 resolved as shift
WARNING: shift/reduce conflict for RED in state 216 resolved as shift
WARNING: shift/reduce conflict for [ in state 216 resolved as shift
WARNING: shift/reduce conflict for } in state 218 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 218 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 218 resolved as shift
WARNING: shift/reduce conflict for ID in state 218 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 218 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 218 resolved as shift
WARNING: shift/reduce conflict for ( in state 218 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 218 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 218 resolved as shift
WARNING: shift/reduce conflict for INT in state 218 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 218 resolved as shift
WARNING: shift/reduce conflict for STRING in state 218 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 218 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 218 resolved as shift
WARNING: shift/reduce conflict for WALO in state 218 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 218 resolved as shift
WARNING: shift/reduce conflict for ILA in state 218 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 218 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 218 resolved as shift
WARNING: shift/reduce conflict for DIR in state 218 resolved as shift
WARNING: shift/reduce conflict for QRA in state 218 resolved as shift
WARNING: shift/reduce conflict for TOL in state 218 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 218 resolved as shift
WARNING: shift/reduce conflict for RED in state 218 resolved as shift
WARNING: shift/reduce conflict for [ in state 218 resolved as shift
WARNING: shift/reduce conflict for WA in state 221 resolved as shift
WARNING: shift/reduce conflict for AW in state 221 resolved as shift
WARNING: shift/reduce conflict for WA in state 223 resolved as shift
WARNING: shift/reduce conflict for AW in state 223 resolved as shift
WARNING: shift/reduce conflict for AW in state 224 resolved as shift
WARNING: shift/reduce conflict for WA in state 224 resolved as shift
WARNING: shift/reduce conflict for AW in state 225 resolved as shift
WARNING: shift/reduce conflict for WA in state 225 resolved as shift
WARNING: shift/reduce conflict for } in state 226 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 226 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 226 resolved as shift
WARNING: shift/reduce conflict for ID in state 226 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 226 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 226 resolved as shift
WARNING: shift/reduce conflict for ( in state 226 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 226 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 226 resolved as shift
WARNING: shift/reduce conflict for INT in state 226 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 226 resolved as shift
WARNING: shift/reduce conflict for STRING in state 226 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 226 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 226 resolved as shift
WARNING: shift/reduce conflict for WALO in state 226 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 226 resolved as shift
WARNING: shift/reduce conflict for ILA in state 226 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 226 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 226 resolved as shift
WARNING: shift/reduce conflict for DIR in state 226 resolved as shift
WARNING: shift/reduce conflict for QRA in state 226 resolved as shift
WARNING: shift/reduce conflict for TOL in state 226 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 226 resolved as shift
WARNING: shift/reduce conflict for RED in state 226 resolved as shift
WARNING: shift/reduce conflict for [ in state 226 resolved as shift
WARNING: shift/reduce conflict for } in state 235 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 235 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 235 resolved as shift
WARNING: shift/reduce conflict for ID in state 235 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 235 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 235 resolved as shift
WARNING: shift/reduce conflict for ( in state 235 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 235 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 235 resolved as shift
WARNING: shift/reduce conflict for INT in state 235 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 235 resolved as shift
WARNING: shift/reduce conflict for STRING in state 235 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 235 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 235 resolved as shift
WARNING: shift/reduce conflict for WALO in state 235 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 235 resolved as shift
WARNING: shift/reduce conflict for ILA in state 235 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 235 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 235 resolved as shift
WARNING: shift/reduce conflict for DIR in state 235 resolved as shift
WARNING: shift/reduce conflict for QRA in state 235 resolved as shift
WARNING: shift/reduce conflict for TOL in state 235 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 235 resolved as shift
WARNING: shift/reduce conflict for RED in state 235 resolved as shift
WARNING: shift/reduce conflict for [ in state 235 resolved as shift
WARNING: shift/reduce conflict for AW in state 248 resolved as shift
WARNING: shift/reduce conflict for WA in state 248 resolved as shift
WARNING: shift/reduce conflict for AW in state 249 resolved as shift
WARNING: shift/reduce conflict for WA in state 249 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 251 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 251 resolved as shift
WARNING: shift/reduce conflict for ID in state 251 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 251 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 251 resolved as shift
WARNING: shift/reduce conflict for ( in state 251 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 251 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 251 resolved as shift
WARNING: shift/reduce conflict for INT in state 251 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 251 resolved as shift
WARNING: shift/reduce conflict for STRING in state 251 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 251 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 251 resolved as shift
WARNING: shift/reduce conflict for WALO in state 251 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 251 resolved as shift
WARNING: shift/reduce conflict for ILA in state 251 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 251 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 251 resolved as shift
WARNING: shift/reduce conflict for DIR in state 251 resolved as shift
WARNING: shift/reduce conflict for QRA in state 251 resolved as shift
WARNING: shift/reduce conflict for TOL in state 251 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 251 resolved as shift
WARNING: shift/reduce conflict for RED in state 251 resolved as shift
WARNING: shift/reduce conflict for [ in state 251 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 252 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 252 resolved as shift
WARNING: shift/reduce conflict for ID in state 252 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 252 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 252 resolved as shift
WARNING: shift/reduce conflict for ( in state 252 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 252 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 252 resolved as shift
WARNING: shift/reduce conflict for INT in state 252 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 252 resolved as shift
WARNING: shift/reduce conflict for STRING in state 252 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 252 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 252 resolved as shift
WARNING: shift/reduce conflict for WALO in state 252 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 252 resolved as shift
WARNING: shift/reduce conflict for ILA in state 252 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 252 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 252 resolved as shift
WARNING: shift/reduce conflict for DIR in state 252 resolved as shift
WARNING: shift/reduce conflict for QRA in state 252 resolved as shift
WARNING: shift/reduce conflict for TOL in state 252 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 252 resolved as shift
WARNING: shift/reduce conflict for RED in state 252 resolved as shift
WARNING: shift/reduce conflict for [ in state 252 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 253 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 253 resolved as shift
WARNING: shift/reduce conflict for ID in state 253 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 253 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 253 resolved as shift
WARNING: shift/reduce conflict for ( in state 253 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 253 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 253 resolved as shift
WARNING: shift/reduce conflict for INT in state 253 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 253 resolved as shift
WARNING: shift/reduce conflict for STRING in state 253 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 253 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 253 resolved as shift
WARNING: shift/reduce conflict for WALO in state 253 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 253 resolved as shift
WARNING: shift/reduce conflict for ILA in state 253 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 253 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 253 resolved as shift
WARNING: shift/reduce conflict for DIR in state 253 resolved as shift
WARNING: shift/reduce conflict for QRA in state 253 resolved as shift
WARNING: shift/reduce conflict for TOL in state 253 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 253 resolved as shift
WARNING: shift/reduce conflict for RED in state 253 resolved as shift
WARNING: shift/reduce conflict for [ in state 253 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 254 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 254 resolved as shift
WARNING: shift/reduce conflict for ID in state 254 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 254 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 254 resolved as shift
WARNING: shift/reduce conflict for ( in state 254 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 254 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 254 resolved as shift
WARNING: shift/reduce conflict for INT in state 254 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 254 resolved as shift
WARNING: shift/reduce conflict for STRING in state 254 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 254 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 254 resolved as shift
WARNING: shift/reduce conflict for WALO in state 254 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 254 resolved as shift
WARNING: shift/reduce conflict for ILA in state 254 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 254 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 254 resolved as shift
WARNING: shift/reduce conflict for DIR in state 254 resolved as shift
WARNING: shift/reduce conflict for QRA in state 254 resolved as shift
WARNING: shift/reduce conflict for TOL in state 254 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 254 resolved as shift
WARNING: shift/reduce conflict for RED in state 254 resolved as shift
WARNING: shift/reduce conflict for [ in state 254 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 255 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 255 resolved as shift
WARNING: shift/reduce conflict for ID in state 255 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 255 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 255 resolved as shift
WARNING: shift/reduce conflict for ( in state 255 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 255 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 255 resolved as shift
WARNING: shift/reduce conflict for INT in state 255 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 255 resolved as shift
WARNING: shift/reduce conflict for STRING in state 255 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 255 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 255 resolved as shift
WARNING: shift/reduce conflict for WALO in state 255 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 255 resolved as shift
WARNING: shift/reduce conflict for ILA in state 255 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 255 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 255 resolved as shift
WARNING: shift/reduce conflict for DIR in state 255 resolved as shift
WARNING: shift/reduce conflict for QRA in state 255 resolved as shift
WARNING: shift/reduce conflict for TOL in state 255 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 255 resolved as shift
WARNING: shift/reduce conflict for RED in state 255 resolved as shift
WARNING: shift/reduce conflict for [ in state 255 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 256 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 256 resolved as shift
WARNING: shift/reduce conflict for ID in state 256 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 256 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 256 resolved as shift
WARNING: shift/reduce conflict for ( in state 256 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 256 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 256 resolved as shift
WARNING: shift/reduce conflict for INT in state 256 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 256 resolved as shift
WARNING: shift/reduce conflict for STRING in state 256 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 256 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 256 resolved as shift
WARNING: shift/reduce conflict for WALO in state 256 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 256 resolved as shift
WARNING: shift/reduce conflict for ILA in state 256 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 256 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 256 resolved as shift
WARNING: shift/reduce conflict for DIR in state 256 resolved as shift
WARNING: shift/reduce conflict for QRA in state 256 resolved as shift
WARNING: shift/reduce conflict for TOL in state 256 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 256 resolved as shift
WARNING: shift/reduce conflict for RED in state 256 resolved as shift
WARNING: shift/reduce conflict for [ in state 256 resolved as shift
WARNING: shift/reduce conflict for } in state 257 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 257 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 257 resolved as shift
WARNING: shift/reduce conflict for ID in state 257 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 257 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 257 resolved as shift
WARNING: shift/reduce conflict for ( in state 257 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 257 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 257 resolved as shift
WARNING: shift/reduce conflict for INT in state 257 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 257 resolved as shift
WARNING: shift/reduce conflict for STRING in state 257 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 257 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 257 resolved as shift
WARNING: shift/reduce conflict for WALO in state 257 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 257 resolved as shift
WARNING: shift/reduce conflict for ILA in state 257 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 257 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 257 resolved as shift
WARNING: shift/reduce conflict for DIR in state 257 resolved as shift
WARNING: shift/reduce conflict for QRA in state 257 resolved as shift
WARNING: shift/reduce conflict for TOL in state 257 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 257 resolved as shift
WARNING: shift/reduce conflict for RED in state 257 resolved as shift
WARNING: shift/reduce conflict for [ in state 257 resolved as shift
WARNING: shift/reduce conflict for } in state 258 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 258 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 258 resolved as shift
WARNING: shift/reduce conflict for ID in state 258 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 258 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 258 resolved as shift
WARNING: shift/reduce conflict for ( in state 258 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 258 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 258 resolved as shift
WARNING: shift/reduce conflict for INT in state 258 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 258 resolved as shift
WARNING: shift/reduce conflict for STRING in state 258 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 258 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 258 resolved as shift
WARNING: shift/reduce conflict for WALO in state 258 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 258 resolved as shift
WARNING: shift/reduce conflict for ILA in state 258 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 258 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 258 resolved as shift
WARNING: shift/reduce conflict for DIR in state 258 resolved as shift
WARNING: shift/reduce conflict for QRA in state 258 resolved as shift
WARNING: shift/reduce conflict for TOL in state 258 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 258 resolved as shift
WARNING: shift/reduce conflict for RED in state 258 resolved as shift
WARNING: shift/reduce conflict for [ in state 258 resolved as shift
WARNING: shift/reduce conflict for } in state 259 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 259 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 259 resolved as shift
WARNING: shift/reduce conflict for ID in state 259 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 259 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 259 resolved as shift
WARNING: shift/reduce conflict for ( in state 259 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 259 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 259 resolved as shift
WARNING: shift/reduce conflict for INT in state 259 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 259 resolved as shift
WARNING: shift/reduce conflict for STRING in state 259 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 259 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 259 resolved as shift
WARNING: shift/reduce conflict for WALO in state 259 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 259 resolved as shift
WARNING: shift/reduce conflict for ILA in state 259 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 259 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 259 resolved as shift
WARNING: shift/reduce conflict for DIR in state 259 resolved as shift
WARNING: shift/reduce conflict for QRA in state 259 resolved as shift
WARNING: shift/reduce conflict for TOL in state 259 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 259 resolved as shift
WARNING: shift/reduce conflict for RED in state 259 resolved as shift
WARNING: shift/reduce conflict for [ in state 259 resolved as shift
WARNING: shift/reduce conflict for } in state 260 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 260 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 260 resolved as shift
WARNING: shift/reduce conflict for ID in state 260 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 260 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 260 resolved as shift
WARNING: shift/reduce conflict for ( in state 260 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 260 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 260 resolved as shift
WARNING: shift/reduce conflict for INT in state 260 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 260 resolved as shift
WARNING: shift/reduce conflict for STRING in state 260 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 260 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 260 resolved as shift
WARNING: shift/reduce conflict for WALO in state 260 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 260 resolved as shift
WARNING: shift/reduce conflict for ILA in state 260 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 260 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 260 resolved as shift
WARNING: shift/reduce conflict for DIR in state 260 resolved as shift
WARNING: shift/reduce conflict for QRA in state 260 resolved as shift
WARNING: shift/reduce conflict for TOL in state 260 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 260 resolved as shift
WARNING: shift/reduce conflict for RED in state 260 resolved as shift
WARNING: shift/reduce conflict for [ in state 260 resolved as shift
WARNING: shift/reduce conflict for } in state 261 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 261 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 261 resolved as shift
WARNING: shift/reduce conflict for ID in state 261 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 261 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 261 resolved as shift
WARNING: shift/reduce conflict for ( in state 261 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 261 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 261 resolved as shift
WARNING: shift/reduce conflict for INT in state 261 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 261 resolved as shift
WARNING: shift/reduce conflict for STRING in state 261 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 261 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 261 resolved as shift
WARNING: shift/reduce conflict for WALO in state 261 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 261 resolved as shift
WARNING: shift/reduce conflict for ILA in state 261 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 261 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 261 resolved as shift
WARNING: shift/reduce conflict for DIR in state 261 resolved as shift
WARNING: shift/reduce conflict for QRA in state 261 resolved as shift
WARNING: shift/reduce conflict for TOL in state 261 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 261 resolved as shift
WARNING: shift/reduce conflict for RED in state 261 resolved as shift
WARNING: shift/reduce conflict for [ in state 261 resolved as shift
WARNING: shift/reduce conflict for } in state 262 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 262 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 262 resolved as shift
WARNING: shift/reduce conflict for ID in state 262 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 262 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 262 resolved as shift
WARNING: shift/reduce conflict for ( in state 262 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 262 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 262 resolved as shift
WARNING: shift/reduce conflict for INT in state 262 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 262 resolved as shift
WARNING: shift/reduce conflict for STRING in state 262 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 262 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 262 resolved as shift
WARNING: shift/reduce conflict for WALO in state 262 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 262 resolved as shift
WARNING: shift/reduce conflict for ILA in state 262 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 262 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 262 resolved as shift
WARNING: shift/reduce conflict for DIR in state 262 resolved as shift
WARNING: shift/reduce conflict for QRA in state 262 resolved as shift
WARNING: shift/reduce conflict for TOL in state 262 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 262 resolved as shift
WARNING: shift/reduce conflict for RED in state 262 resolved as shift
WARNING: shift/reduce conflict for [ in state 262 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (program -> instruction_list)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 23 resolved using rule (instruction -> arrfn)
WARNING: rejected rule (expression -> arrfn) in state 23
