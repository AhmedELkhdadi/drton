Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instruction_list
Rule 2     incrementation -> ID INCREMENTATION
Rule 3     decrementation -> ID DECREMENTATION
Rule 4     var_assign -> ID EQUALS expression
Rule 5     var_assign -> ID EQUALS input
Rule 6     var_assign -> MOJOD var_assign
Rule 7     arrayelt_assign -> arrayelt EQUALS expression
Rule 8     arrayelt_assign -> arrayslice EQUALS expression
Rule 9     if -> ILA ( condition ) { instruction_list }
Rule 10    if -> ILA ( condition ) { instruction_list } WLA { instruction_list }
Rule 11    for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
Rule 12    for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
Rule 13    for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list }
Rule 14    for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list }
Rule 15    while -> MA7ED ( condition ) { instruction_list }
Rule 16    doWhile -> DIR { instruction_list } MA7ED ( condition )
Rule 17    instruction -> var_assign
Rule 18    instruction -> arrayelt_assign
Rule 19    instruction -> printing
Rule 20    instruction -> incrementation
Rule 21    instruction -> decrementation
Rule 22    instruction -> expression
Rule 23    instruction -> try
Rule 24    instruction -> if
Rule 25    instruction -> for
Rule 26    instruction -> KHREJ
Rule 27    instruction -> KMEL
Rule 28    instruction -> while
Rule 29    instruction -> doWhile
Rule 30    instruction -> input
Rule 31    instruction -> len
Rule 32    instruction -> empty
Rule 33    instruction -> func
Rule 34    instruction -> return
Rule 35    instruction -> arrfn
Rule 36    instruction_list -> instruction
Rule 37    instruction_list -> instruction_list instruction
Rule 38    condition -> ( condition ) AW ( condition )
Rule 39    condition -> ( condition ) WA ( condition )
Rule 40    condition -> condition WA ( condition )
Rule 41    condition -> condition AW ( condition )
Rule 42    condition -> ( condition ) WA condition
Rule 43    condition -> ( condition ) AW condition
Rule 44    condition -> condition WA condition
Rule 45    condition -> condition AW condition
Rule 46    condition -> L3AKSS ( condition )
Rule 47    condition -> expression SUP expression
Rule 48    condition -> expression INF expression
Rule 49    condition -> expression EQUALSCOMP expression
Rule 50    condition -> expression SUPEQUALS expression
Rule 51    condition -> expression INFEQUALS expression
Rule 52    condition -> expression DIFFERENT expression
Rule 53    condition -> expression
Rule 54    expression -> expression PLUS expression
Rule 55    expression -> expression MINUS expression
Rule 56    expression -> expression TIMES expression
Rule 57    expression -> expression DIVIDE expression
Rule 58    expression -> expression MODULO expression
Rule 59    expression -> expression POWER expression
Rule 60    expression -> ( expression )
Rule 61    expression -> MINUS expression
Rule 62    expression -> PLUS expression
Rule 63    expression -> ID
Rule 64    input -> QRA ( expression )
Rule 65    input -> QRA ( )
Rule 66    try -> JEREB { instruction_list } MASD9CH { instruction_list }
Rule 67    try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
Rule 68    expression -> INT
Rule 69    expression -> FLOAT
Rule 70    expression -> STRING
Rule 71    expression -> KHATE2
Rule 72    expression -> S7I7
Rule 73    expression -> WALO
Rule 74    expression -> array
Rule 75    expression -> arrayelt
Rule 76    expression -> arrayslice
Rule 77    expression -> arrfn
Rule 78    expression -> len
Rule 79    expression -> appel_func
Rule 80    arraylist -> expression
Rule 81    arraylist -> arraylist , expression
Rule 82    array -> [ arraylist ]
Rule 83    array -> [ ]
Rule 84    arrayelt -> ID dimensions
Rule 85    dimensions -> [ expression ]
Rule 86    dimensions -> dimensions [ expression ]
Rule 87    arrayslice -> ID [ expression : expression ]
Rule 88    arrayslice -> ID [ : expression ]
Rule 89    arrayslice -> ID [ expression : ]
Rule 90    arrayslice -> ID [ : ]
Rule 91    arrfn -> ID . ZID ( expression )
Rule 92    arrfn -> ID . KBER ( array )
Rule 93    arrfn -> ID . KHWI ( )
Rule 94    arrfn -> ID . DKHEL ( expression , expression )
Rule 95    arrfn -> ID . MSSE7 ( expression )
Rule 96    arrfn -> ID . MSSE7 ( )
Rule 97    argument_list -> expression
Rule 98    argument_list -> argument_list , expression
Rule 99    parameter -> ID
Rule 100   parameter_list -> parameter
Rule 101   parameter_list -> parameter_list , parameter
Rule 102   func -> TA3RIF ID ( parameter_list ) { instruction_list }
Rule 103   func -> TA3RIF ID ( ) { instruction_list }
Rule 104   appel_func -> ID ( argument_list )
Rule 105   appel_func -> ID ( )
Rule 106   return -> RED ( expression )
Rule 107   printing -> KTEB ( condition )
Rule 108   printing -> KTEB ( incrementation )
Rule 109   printing -> KTEB ( decrementation )
Rule 110   printing -> KTEB ( condition , condition )
Rule 111   len -> TOL ( expression )
Rule 112   empty -> <empty>

Terminals, with rules where they appear

(                    : 9 10 11 12 13 14 15 16 38 38 39 39 40 41 42 43 46 60 64 65 91 92 93 94 95 96 102 103 104 105 106 107 108 109 110 111
)                    : 9 10 11 12 13 14 15 16 38 38 39 39 40 41 42 43 46 60 64 65 91 92 93 94 95 96 102 103 104 105 106 107 108 109 110 111
,                    : 81 94 98 101 110
.                    : 91 92 93 94 95 96
:                    : 87 88 89 90
;                    : 11 11 12 12 13 13 14 14
AKHIRAN              : 67
AW                   : 38 41 43 45
DECREMENTATION       : 3
DIFFERENT            : 52
DIR                  : 16
DIVIDE               : 57
DKHEL                : 94
EQUALS               : 4 5 7 8
EQUALSCOMP           : 49
FLOAT                : 69
ID                   : 2 3 4 5 63 84 87 88 89 90 91 92 93 94 95 96 99 102 103 104 105
ILA                  : 9 10
INCREMENTATION       : 2
INF                  : 48
INFEQUALS            : 51
INT                  : 68
JEREB                : 66 67
KBER                 : 92
KHATE2               : 71
KHREJ                : 26
KHWI                 : 93
KMEL                 : 27
KTEB                 : 107 108 109 110
L3AKSS               : 46
LKOLA                : 11 12 13 14
MA7ED                : 15 16
MASD9CH              : 66 67
MINUS                : 55 61
MODULO               : 58
MOJOD                : 6
MSSE7                : 95 96
PLUS                 : 54 62
POWER                : 59
QRA                  : 64 65
RED                  : 106
S7I7                 : 72
STRING               : 70
SUP                  : 47
SUPEQUALS            : 50
TA3RIF               : 102 103
TIMES                : 56
TOL                  : 111
WA                   : 39 40 42 44
WALO                 : 73
WLA                  : 10
ZID                  : 91
[                    : 82 83 85 86 87 88 89 90
]                    : 82 83 85 86 87 88 89 90
error                : 
{                    : 9 10 10 11 12 13 14 15 16 66 66 67 67 67 102 103
}                    : 9 10 10 11 12 13 14 15 16 66 66 67 67 67 102 103

Nonterminals, with rules where they appear

appel_func           : 79
argument_list        : 98 104
array                : 74 92
arrayelt             : 7 75
arrayelt_assign      : 18
arraylist            : 81 82
arrayslice           : 8 76
arrfn                : 35 77
condition            : 9 10 11 12 13 14 15 16 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 107 110 110
decrementation       : 12 14 21 109
dimensions           : 84 86
doWhile              : 29
empty                : 32
expression           : 4 7 8 13 14 22 47 47 48 48 49 49 50 50 51 51 52 52 53 54 54 55 55 56 56 57 57 58 58 59 59 60 61 62 64 80 81 85 86 87 87 88 89 91 94 94 95 97 98 106 111
for                  : 25
func                 : 33
if                   : 24
incrementation       : 11 13 20 108
input                : 5 30
instruction          : 36 37
instruction_list     : 1 9 10 10 11 12 13 14 15 16 37 66 66 67 67 67 102 103
len                  : 31 78
parameter            : 100 101
parameter_list       : 101 102
printing             : 19
program              : 0
return               : 34
try                  : 23
var_assign           : 6 11 12 17
while                : 28

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instruction_list
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    $end            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    program                        shift and go to state 1
    instruction_list               shift and go to state 2
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 1

    (0) S' -> program .



state 2

    (1) program -> instruction_list .
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (program -> instruction_list .)
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    $end            reduce using rule 1 (program -> instruction_list .)
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]
  ! $end            [ reduce using rule 112 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 3

    (36) instruction_list -> instruction .

    KHREJ           reduce using rule 36 (instruction_list -> instruction .)
    KMEL            reduce using rule 36 (instruction_list -> instruction .)
    ID              reduce using rule 36 (instruction_list -> instruction .)
    MOJOD           reduce using rule 36 (instruction_list -> instruction .)
    KTEB            reduce using rule 36 (instruction_list -> instruction .)
    (               reduce using rule 36 (instruction_list -> instruction .)
    MINUS           reduce using rule 36 (instruction_list -> instruction .)
    PLUS            reduce using rule 36 (instruction_list -> instruction .)
    INT             reduce using rule 36 (instruction_list -> instruction .)
    FLOAT           reduce using rule 36 (instruction_list -> instruction .)
    STRING          reduce using rule 36 (instruction_list -> instruction .)
    KHATE2          reduce using rule 36 (instruction_list -> instruction .)
    S7I7            reduce using rule 36 (instruction_list -> instruction .)
    WALO            reduce using rule 36 (instruction_list -> instruction .)
    JEREB           reduce using rule 36 (instruction_list -> instruction .)
    ILA             reduce using rule 36 (instruction_list -> instruction .)
    LKOLA           reduce using rule 36 (instruction_list -> instruction .)
    MA7ED           reduce using rule 36 (instruction_list -> instruction .)
    DIR             reduce using rule 36 (instruction_list -> instruction .)
    QRA             reduce using rule 36 (instruction_list -> instruction .)
    TOL             reduce using rule 36 (instruction_list -> instruction .)
    TA3RIF          reduce using rule 36 (instruction_list -> instruction .)
    RED             reduce using rule 36 (instruction_list -> instruction .)
    [               reduce using rule 36 (instruction_list -> instruction .)
    $end            reduce using rule 36 (instruction_list -> instruction .)
    }               reduce using rule 36 (instruction_list -> instruction .)


state 4

    (17) instruction -> var_assign .

    KHREJ           reduce using rule 17 (instruction -> var_assign .)
    KMEL            reduce using rule 17 (instruction -> var_assign .)
    ID              reduce using rule 17 (instruction -> var_assign .)
    MOJOD           reduce using rule 17 (instruction -> var_assign .)
    KTEB            reduce using rule 17 (instruction -> var_assign .)
    (               reduce using rule 17 (instruction -> var_assign .)
    MINUS           reduce using rule 17 (instruction -> var_assign .)
    PLUS            reduce using rule 17 (instruction -> var_assign .)
    INT             reduce using rule 17 (instruction -> var_assign .)
    FLOAT           reduce using rule 17 (instruction -> var_assign .)
    STRING          reduce using rule 17 (instruction -> var_assign .)
    KHATE2          reduce using rule 17 (instruction -> var_assign .)
    S7I7            reduce using rule 17 (instruction -> var_assign .)
    WALO            reduce using rule 17 (instruction -> var_assign .)
    JEREB           reduce using rule 17 (instruction -> var_assign .)
    ILA             reduce using rule 17 (instruction -> var_assign .)
    LKOLA           reduce using rule 17 (instruction -> var_assign .)
    MA7ED           reduce using rule 17 (instruction -> var_assign .)
    DIR             reduce using rule 17 (instruction -> var_assign .)
    QRA             reduce using rule 17 (instruction -> var_assign .)
    TOL             reduce using rule 17 (instruction -> var_assign .)
    TA3RIF          reduce using rule 17 (instruction -> var_assign .)
    RED             reduce using rule 17 (instruction -> var_assign .)
    [               reduce using rule 17 (instruction -> var_assign .)
    $end            reduce using rule 17 (instruction -> var_assign .)
    }               reduce using rule 17 (instruction -> var_assign .)


state 5

    (18) instruction -> arrayelt_assign .

    KHREJ           reduce using rule 18 (instruction -> arrayelt_assign .)
    KMEL            reduce using rule 18 (instruction -> arrayelt_assign .)
    ID              reduce using rule 18 (instruction -> arrayelt_assign .)
    MOJOD           reduce using rule 18 (instruction -> arrayelt_assign .)
    KTEB            reduce using rule 18 (instruction -> arrayelt_assign .)
    (               reduce using rule 18 (instruction -> arrayelt_assign .)
    MINUS           reduce using rule 18 (instruction -> arrayelt_assign .)
    PLUS            reduce using rule 18 (instruction -> arrayelt_assign .)
    INT             reduce using rule 18 (instruction -> arrayelt_assign .)
    FLOAT           reduce using rule 18 (instruction -> arrayelt_assign .)
    STRING          reduce using rule 18 (instruction -> arrayelt_assign .)
    KHATE2          reduce using rule 18 (instruction -> arrayelt_assign .)
    S7I7            reduce using rule 18 (instruction -> arrayelt_assign .)
    WALO            reduce using rule 18 (instruction -> arrayelt_assign .)
    JEREB           reduce using rule 18 (instruction -> arrayelt_assign .)
    ILA             reduce using rule 18 (instruction -> arrayelt_assign .)
    LKOLA           reduce using rule 18 (instruction -> arrayelt_assign .)
    MA7ED           reduce using rule 18 (instruction -> arrayelt_assign .)
    DIR             reduce using rule 18 (instruction -> arrayelt_assign .)
    QRA             reduce using rule 18 (instruction -> arrayelt_assign .)
    TOL             reduce using rule 18 (instruction -> arrayelt_assign .)
    TA3RIF          reduce using rule 18 (instruction -> arrayelt_assign .)
    RED             reduce using rule 18 (instruction -> arrayelt_assign .)
    [               reduce using rule 18 (instruction -> arrayelt_assign .)
    $end            reduce using rule 18 (instruction -> arrayelt_assign .)
    }               reduce using rule 18 (instruction -> arrayelt_assign .)


state 6

    (19) instruction -> printing .

    KHREJ           reduce using rule 19 (instruction -> printing .)
    KMEL            reduce using rule 19 (instruction -> printing .)
    ID              reduce using rule 19 (instruction -> printing .)
    MOJOD           reduce using rule 19 (instruction -> printing .)
    KTEB            reduce using rule 19 (instruction -> printing .)
    (               reduce using rule 19 (instruction -> printing .)
    MINUS           reduce using rule 19 (instruction -> printing .)
    PLUS            reduce using rule 19 (instruction -> printing .)
    INT             reduce using rule 19 (instruction -> printing .)
    FLOAT           reduce using rule 19 (instruction -> printing .)
    STRING          reduce using rule 19 (instruction -> printing .)
    KHATE2          reduce using rule 19 (instruction -> printing .)
    S7I7            reduce using rule 19 (instruction -> printing .)
    WALO            reduce using rule 19 (instruction -> printing .)
    JEREB           reduce using rule 19 (instruction -> printing .)
    ILA             reduce using rule 19 (instruction -> printing .)
    LKOLA           reduce using rule 19 (instruction -> printing .)
    MA7ED           reduce using rule 19 (instruction -> printing .)
    DIR             reduce using rule 19 (instruction -> printing .)
    QRA             reduce using rule 19 (instruction -> printing .)
    TOL             reduce using rule 19 (instruction -> printing .)
    TA3RIF          reduce using rule 19 (instruction -> printing .)
    RED             reduce using rule 19 (instruction -> printing .)
    [               reduce using rule 19 (instruction -> printing .)
    $end            reduce using rule 19 (instruction -> printing .)
    }               reduce using rule 19 (instruction -> printing .)


state 7

    (20) instruction -> incrementation .

    KHREJ           reduce using rule 20 (instruction -> incrementation .)
    KMEL            reduce using rule 20 (instruction -> incrementation .)
    ID              reduce using rule 20 (instruction -> incrementation .)
    MOJOD           reduce using rule 20 (instruction -> incrementation .)
    KTEB            reduce using rule 20 (instruction -> incrementation .)
    (               reduce using rule 20 (instruction -> incrementation .)
    MINUS           reduce using rule 20 (instruction -> incrementation .)
    PLUS            reduce using rule 20 (instruction -> incrementation .)
    INT             reduce using rule 20 (instruction -> incrementation .)
    FLOAT           reduce using rule 20 (instruction -> incrementation .)
    STRING          reduce using rule 20 (instruction -> incrementation .)
    KHATE2          reduce using rule 20 (instruction -> incrementation .)
    S7I7            reduce using rule 20 (instruction -> incrementation .)
    WALO            reduce using rule 20 (instruction -> incrementation .)
    JEREB           reduce using rule 20 (instruction -> incrementation .)
    ILA             reduce using rule 20 (instruction -> incrementation .)
    LKOLA           reduce using rule 20 (instruction -> incrementation .)
    MA7ED           reduce using rule 20 (instruction -> incrementation .)
    DIR             reduce using rule 20 (instruction -> incrementation .)
    QRA             reduce using rule 20 (instruction -> incrementation .)
    TOL             reduce using rule 20 (instruction -> incrementation .)
    TA3RIF          reduce using rule 20 (instruction -> incrementation .)
    RED             reduce using rule 20 (instruction -> incrementation .)
    [               reduce using rule 20 (instruction -> incrementation .)
    $end            reduce using rule 20 (instruction -> incrementation .)
    }               reduce using rule 20 (instruction -> incrementation .)


state 8

    (21) instruction -> decrementation .

    KHREJ           reduce using rule 21 (instruction -> decrementation .)
    KMEL            reduce using rule 21 (instruction -> decrementation .)
    ID              reduce using rule 21 (instruction -> decrementation .)
    MOJOD           reduce using rule 21 (instruction -> decrementation .)
    KTEB            reduce using rule 21 (instruction -> decrementation .)
    (               reduce using rule 21 (instruction -> decrementation .)
    MINUS           reduce using rule 21 (instruction -> decrementation .)
    PLUS            reduce using rule 21 (instruction -> decrementation .)
    INT             reduce using rule 21 (instruction -> decrementation .)
    FLOAT           reduce using rule 21 (instruction -> decrementation .)
    STRING          reduce using rule 21 (instruction -> decrementation .)
    KHATE2          reduce using rule 21 (instruction -> decrementation .)
    S7I7            reduce using rule 21 (instruction -> decrementation .)
    WALO            reduce using rule 21 (instruction -> decrementation .)
    JEREB           reduce using rule 21 (instruction -> decrementation .)
    ILA             reduce using rule 21 (instruction -> decrementation .)
    LKOLA           reduce using rule 21 (instruction -> decrementation .)
    MA7ED           reduce using rule 21 (instruction -> decrementation .)
    DIR             reduce using rule 21 (instruction -> decrementation .)
    QRA             reduce using rule 21 (instruction -> decrementation .)
    TOL             reduce using rule 21 (instruction -> decrementation .)
    TA3RIF          reduce using rule 21 (instruction -> decrementation .)
    RED             reduce using rule 21 (instruction -> decrementation .)
    [               reduce using rule 21 (instruction -> decrementation .)
    $end            reduce using rule 21 (instruction -> decrementation .)
    }               reduce using rule 21 (instruction -> decrementation .)


state 9

    (22) instruction -> expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 22 (instruction -> expression .)
    KMEL            reduce using rule 22 (instruction -> expression .)
    ID              reduce using rule 22 (instruction -> expression .)
    MOJOD           reduce using rule 22 (instruction -> expression .)
    KTEB            reduce using rule 22 (instruction -> expression .)
    (               reduce using rule 22 (instruction -> expression .)
    INT             reduce using rule 22 (instruction -> expression .)
    FLOAT           reduce using rule 22 (instruction -> expression .)
    STRING          reduce using rule 22 (instruction -> expression .)
    KHATE2          reduce using rule 22 (instruction -> expression .)
    S7I7            reduce using rule 22 (instruction -> expression .)
    WALO            reduce using rule 22 (instruction -> expression .)
    JEREB           reduce using rule 22 (instruction -> expression .)
    ILA             reduce using rule 22 (instruction -> expression .)
    LKOLA           reduce using rule 22 (instruction -> expression .)
    MA7ED           reduce using rule 22 (instruction -> expression .)
    DIR             reduce using rule 22 (instruction -> expression .)
    QRA             reduce using rule 22 (instruction -> expression .)
    TOL             reduce using rule 22 (instruction -> expression .)
    TA3RIF          reduce using rule 22 (instruction -> expression .)
    RED             reduce using rule 22 (instruction -> expression .)
    [               reduce using rule 22 (instruction -> expression .)
    $end            reduce using rule 22 (instruction -> expression .)
    }               reduce using rule 22 (instruction -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! MINUS           [ reduce using rule 22 (instruction -> expression .) ]
  ! PLUS            [ reduce using rule 22 (instruction -> expression .) ]


state 10

    (23) instruction -> try .

    KHREJ           reduce using rule 23 (instruction -> try .)
    KMEL            reduce using rule 23 (instruction -> try .)
    ID              reduce using rule 23 (instruction -> try .)
    MOJOD           reduce using rule 23 (instruction -> try .)
    KTEB            reduce using rule 23 (instruction -> try .)
    (               reduce using rule 23 (instruction -> try .)
    MINUS           reduce using rule 23 (instruction -> try .)
    PLUS            reduce using rule 23 (instruction -> try .)
    INT             reduce using rule 23 (instruction -> try .)
    FLOAT           reduce using rule 23 (instruction -> try .)
    STRING          reduce using rule 23 (instruction -> try .)
    KHATE2          reduce using rule 23 (instruction -> try .)
    S7I7            reduce using rule 23 (instruction -> try .)
    WALO            reduce using rule 23 (instruction -> try .)
    JEREB           reduce using rule 23 (instruction -> try .)
    ILA             reduce using rule 23 (instruction -> try .)
    LKOLA           reduce using rule 23 (instruction -> try .)
    MA7ED           reduce using rule 23 (instruction -> try .)
    DIR             reduce using rule 23 (instruction -> try .)
    QRA             reduce using rule 23 (instruction -> try .)
    TOL             reduce using rule 23 (instruction -> try .)
    TA3RIF          reduce using rule 23 (instruction -> try .)
    RED             reduce using rule 23 (instruction -> try .)
    [               reduce using rule 23 (instruction -> try .)
    $end            reduce using rule 23 (instruction -> try .)
    }               reduce using rule 23 (instruction -> try .)


state 11

    (24) instruction -> if .

    KHREJ           reduce using rule 24 (instruction -> if .)
    KMEL            reduce using rule 24 (instruction -> if .)
    ID              reduce using rule 24 (instruction -> if .)
    MOJOD           reduce using rule 24 (instruction -> if .)
    KTEB            reduce using rule 24 (instruction -> if .)
    (               reduce using rule 24 (instruction -> if .)
    MINUS           reduce using rule 24 (instruction -> if .)
    PLUS            reduce using rule 24 (instruction -> if .)
    INT             reduce using rule 24 (instruction -> if .)
    FLOAT           reduce using rule 24 (instruction -> if .)
    STRING          reduce using rule 24 (instruction -> if .)
    KHATE2          reduce using rule 24 (instruction -> if .)
    S7I7            reduce using rule 24 (instruction -> if .)
    WALO            reduce using rule 24 (instruction -> if .)
    JEREB           reduce using rule 24 (instruction -> if .)
    ILA             reduce using rule 24 (instruction -> if .)
    LKOLA           reduce using rule 24 (instruction -> if .)
    MA7ED           reduce using rule 24 (instruction -> if .)
    DIR             reduce using rule 24 (instruction -> if .)
    QRA             reduce using rule 24 (instruction -> if .)
    TOL             reduce using rule 24 (instruction -> if .)
    TA3RIF          reduce using rule 24 (instruction -> if .)
    RED             reduce using rule 24 (instruction -> if .)
    [               reduce using rule 24 (instruction -> if .)
    $end            reduce using rule 24 (instruction -> if .)
    }               reduce using rule 24 (instruction -> if .)


state 12

    (25) instruction -> for .

    KHREJ           reduce using rule 25 (instruction -> for .)
    KMEL            reduce using rule 25 (instruction -> for .)
    ID              reduce using rule 25 (instruction -> for .)
    MOJOD           reduce using rule 25 (instruction -> for .)
    KTEB            reduce using rule 25 (instruction -> for .)
    (               reduce using rule 25 (instruction -> for .)
    MINUS           reduce using rule 25 (instruction -> for .)
    PLUS            reduce using rule 25 (instruction -> for .)
    INT             reduce using rule 25 (instruction -> for .)
    FLOAT           reduce using rule 25 (instruction -> for .)
    STRING          reduce using rule 25 (instruction -> for .)
    KHATE2          reduce using rule 25 (instruction -> for .)
    S7I7            reduce using rule 25 (instruction -> for .)
    WALO            reduce using rule 25 (instruction -> for .)
    JEREB           reduce using rule 25 (instruction -> for .)
    ILA             reduce using rule 25 (instruction -> for .)
    LKOLA           reduce using rule 25 (instruction -> for .)
    MA7ED           reduce using rule 25 (instruction -> for .)
    DIR             reduce using rule 25 (instruction -> for .)
    QRA             reduce using rule 25 (instruction -> for .)
    TOL             reduce using rule 25 (instruction -> for .)
    TA3RIF          reduce using rule 25 (instruction -> for .)
    RED             reduce using rule 25 (instruction -> for .)
    [               reduce using rule 25 (instruction -> for .)
    $end            reduce using rule 25 (instruction -> for .)
    }               reduce using rule 25 (instruction -> for .)


state 13

    (26) instruction -> KHREJ .

    KHREJ           reduce using rule 26 (instruction -> KHREJ .)
    KMEL            reduce using rule 26 (instruction -> KHREJ .)
    ID              reduce using rule 26 (instruction -> KHREJ .)
    MOJOD           reduce using rule 26 (instruction -> KHREJ .)
    KTEB            reduce using rule 26 (instruction -> KHREJ .)
    (               reduce using rule 26 (instruction -> KHREJ .)
    MINUS           reduce using rule 26 (instruction -> KHREJ .)
    PLUS            reduce using rule 26 (instruction -> KHREJ .)
    INT             reduce using rule 26 (instruction -> KHREJ .)
    FLOAT           reduce using rule 26 (instruction -> KHREJ .)
    STRING          reduce using rule 26 (instruction -> KHREJ .)
    KHATE2          reduce using rule 26 (instruction -> KHREJ .)
    S7I7            reduce using rule 26 (instruction -> KHREJ .)
    WALO            reduce using rule 26 (instruction -> KHREJ .)
    JEREB           reduce using rule 26 (instruction -> KHREJ .)
    ILA             reduce using rule 26 (instruction -> KHREJ .)
    LKOLA           reduce using rule 26 (instruction -> KHREJ .)
    MA7ED           reduce using rule 26 (instruction -> KHREJ .)
    DIR             reduce using rule 26 (instruction -> KHREJ .)
    QRA             reduce using rule 26 (instruction -> KHREJ .)
    TOL             reduce using rule 26 (instruction -> KHREJ .)
    TA3RIF          reduce using rule 26 (instruction -> KHREJ .)
    RED             reduce using rule 26 (instruction -> KHREJ .)
    [               reduce using rule 26 (instruction -> KHREJ .)
    $end            reduce using rule 26 (instruction -> KHREJ .)
    }               reduce using rule 26 (instruction -> KHREJ .)


state 14

    (27) instruction -> KMEL .

    KHREJ           reduce using rule 27 (instruction -> KMEL .)
    KMEL            reduce using rule 27 (instruction -> KMEL .)
    ID              reduce using rule 27 (instruction -> KMEL .)
    MOJOD           reduce using rule 27 (instruction -> KMEL .)
    KTEB            reduce using rule 27 (instruction -> KMEL .)
    (               reduce using rule 27 (instruction -> KMEL .)
    MINUS           reduce using rule 27 (instruction -> KMEL .)
    PLUS            reduce using rule 27 (instruction -> KMEL .)
    INT             reduce using rule 27 (instruction -> KMEL .)
    FLOAT           reduce using rule 27 (instruction -> KMEL .)
    STRING          reduce using rule 27 (instruction -> KMEL .)
    KHATE2          reduce using rule 27 (instruction -> KMEL .)
    S7I7            reduce using rule 27 (instruction -> KMEL .)
    WALO            reduce using rule 27 (instruction -> KMEL .)
    JEREB           reduce using rule 27 (instruction -> KMEL .)
    ILA             reduce using rule 27 (instruction -> KMEL .)
    LKOLA           reduce using rule 27 (instruction -> KMEL .)
    MA7ED           reduce using rule 27 (instruction -> KMEL .)
    DIR             reduce using rule 27 (instruction -> KMEL .)
    QRA             reduce using rule 27 (instruction -> KMEL .)
    TOL             reduce using rule 27 (instruction -> KMEL .)
    TA3RIF          reduce using rule 27 (instruction -> KMEL .)
    RED             reduce using rule 27 (instruction -> KMEL .)
    [               reduce using rule 27 (instruction -> KMEL .)
    $end            reduce using rule 27 (instruction -> KMEL .)
    }               reduce using rule 27 (instruction -> KMEL .)


state 15

    (28) instruction -> while .

    KHREJ           reduce using rule 28 (instruction -> while .)
    KMEL            reduce using rule 28 (instruction -> while .)
    ID              reduce using rule 28 (instruction -> while .)
    MOJOD           reduce using rule 28 (instruction -> while .)
    KTEB            reduce using rule 28 (instruction -> while .)
    (               reduce using rule 28 (instruction -> while .)
    MINUS           reduce using rule 28 (instruction -> while .)
    PLUS            reduce using rule 28 (instruction -> while .)
    INT             reduce using rule 28 (instruction -> while .)
    FLOAT           reduce using rule 28 (instruction -> while .)
    STRING          reduce using rule 28 (instruction -> while .)
    KHATE2          reduce using rule 28 (instruction -> while .)
    S7I7            reduce using rule 28 (instruction -> while .)
    WALO            reduce using rule 28 (instruction -> while .)
    JEREB           reduce using rule 28 (instruction -> while .)
    ILA             reduce using rule 28 (instruction -> while .)
    LKOLA           reduce using rule 28 (instruction -> while .)
    MA7ED           reduce using rule 28 (instruction -> while .)
    DIR             reduce using rule 28 (instruction -> while .)
    QRA             reduce using rule 28 (instruction -> while .)
    TOL             reduce using rule 28 (instruction -> while .)
    TA3RIF          reduce using rule 28 (instruction -> while .)
    RED             reduce using rule 28 (instruction -> while .)
    [               reduce using rule 28 (instruction -> while .)
    $end            reduce using rule 28 (instruction -> while .)
    }               reduce using rule 28 (instruction -> while .)


state 16

    (29) instruction -> doWhile .

    KHREJ           reduce using rule 29 (instruction -> doWhile .)
    KMEL            reduce using rule 29 (instruction -> doWhile .)
    ID              reduce using rule 29 (instruction -> doWhile .)
    MOJOD           reduce using rule 29 (instruction -> doWhile .)
    KTEB            reduce using rule 29 (instruction -> doWhile .)
    (               reduce using rule 29 (instruction -> doWhile .)
    MINUS           reduce using rule 29 (instruction -> doWhile .)
    PLUS            reduce using rule 29 (instruction -> doWhile .)
    INT             reduce using rule 29 (instruction -> doWhile .)
    FLOAT           reduce using rule 29 (instruction -> doWhile .)
    STRING          reduce using rule 29 (instruction -> doWhile .)
    KHATE2          reduce using rule 29 (instruction -> doWhile .)
    S7I7            reduce using rule 29 (instruction -> doWhile .)
    WALO            reduce using rule 29 (instruction -> doWhile .)
    JEREB           reduce using rule 29 (instruction -> doWhile .)
    ILA             reduce using rule 29 (instruction -> doWhile .)
    LKOLA           reduce using rule 29 (instruction -> doWhile .)
    MA7ED           reduce using rule 29 (instruction -> doWhile .)
    DIR             reduce using rule 29 (instruction -> doWhile .)
    QRA             reduce using rule 29 (instruction -> doWhile .)
    TOL             reduce using rule 29 (instruction -> doWhile .)
    TA3RIF          reduce using rule 29 (instruction -> doWhile .)
    RED             reduce using rule 29 (instruction -> doWhile .)
    [               reduce using rule 29 (instruction -> doWhile .)
    $end            reduce using rule 29 (instruction -> doWhile .)
    }               reduce using rule 29 (instruction -> doWhile .)


state 17

    (30) instruction -> input .

    KHREJ           reduce using rule 30 (instruction -> input .)
    KMEL            reduce using rule 30 (instruction -> input .)
    ID              reduce using rule 30 (instruction -> input .)
    MOJOD           reduce using rule 30 (instruction -> input .)
    KTEB            reduce using rule 30 (instruction -> input .)
    (               reduce using rule 30 (instruction -> input .)
    MINUS           reduce using rule 30 (instruction -> input .)
    PLUS            reduce using rule 30 (instruction -> input .)
    INT             reduce using rule 30 (instruction -> input .)
    FLOAT           reduce using rule 30 (instruction -> input .)
    STRING          reduce using rule 30 (instruction -> input .)
    KHATE2          reduce using rule 30 (instruction -> input .)
    S7I7            reduce using rule 30 (instruction -> input .)
    WALO            reduce using rule 30 (instruction -> input .)
    JEREB           reduce using rule 30 (instruction -> input .)
    ILA             reduce using rule 30 (instruction -> input .)
    LKOLA           reduce using rule 30 (instruction -> input .)
    MA7ED           reduce using rule 30 (instruction -> input .)
    DIR             reduce using rule 30 (instruction -> input .)
    QRA             reduce using rule 30 (instruction -> input .)
    TOL             reduce using rule 30 (instruction -> input .)
    TA3RIF          reduce using rule 30 (instruction -> input .)
    RED             reduce using rule 30 (instruction -> input .)
    [               reduce using rule 30 (instruction -> input .)
    $end            reduce using rule 30 (instruction -> input .)
    }               reduce using rule 30 (instruction -> input .)


state 18

    (31) instruction -> len .
    (78) expression -> len .

  ! reduce/reduce conflict for PLUS resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for MINUS resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for KHREJ resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for KMEL resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for ID resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for MOJOD resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for KTEB resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for ( resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for INT resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for FLOAT resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for STRING resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for KHATE2 resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for S7I7 resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for WALO resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for JEREB resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for ILA resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for LKOLA resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for MA7ED resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for DIR resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for QRA resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for TOL resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for TA3RIF resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for RED resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for [ resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for $end resolved using rule 31 (instruction -> len .)
  ! reduce/reduce conflict for } resolved using rule 31 (instruction -> len .)
    KHREJ           reduce using rule 31 (instruction -> len .)
    KMEL            reduce using rule 31 (instruction -> len .)
    ID              reduce using rule 31 (instruction -> len .)
    MOJOD           reduce using rule 31 (instruction -> len .)
    KTEB            reduce using rule 31 (instruction -> len .)
    (               reduce using rule 31 (instruction -> len .)
    MINUS           reduce using rule 31 (instruction -> len .)
    PLUS            reduce using rule 31 (instruction -> len .)
    INT             reduce using rule 31 (instruction -> len .)
    FLOAT           reduce using rule 31 (instruction -> len .)
    STRING          reduce using rule 31 (instruction -> len .)
    KHATE2          reduce using rule 31 (instruction -> len .)
    S7I7            reduce using rule 31 (instruction -> len .)
    WALO            reduce using rule 31 (instruction -> len .)
    JEREB           reduce using rule 31 (instruction -> len .)
    ILA             reduce using rule 31 (instruction -> len .)
    LKOLA           reduce using rule 31 (instruction -> len .)
    MA7ED           reduce using rule 31 (instruction -> len .)
    DIR             reduce using rule 31 (instruction -> len .)
    QRA             reduce using rule 31 (instruction -> len .)
    TOL             reduce using rule 31 (instruction -> len .)
    TA3RIF          reduce using rule 31 (instruction -> len .)
    RED             reduce using rule 31 (instruction -> len .)
    [               reduce using rule 31 (instruction -> len .)
    $end            reduce using rule 31 (instruction -> len .)
    }               reduce using rule 31 (instruction -> len .)
    TIMES           reduce using rule 78 (expression -> len .)
    DIVIDE          reduce using rule 78 (expression -> len .)
    MODULO          reduce using rule 78 (expression -> len .)
    POWER           reduce using rule 78 (expression -> len .)

  ! PLUS            [ reduce using rule 78 (expression -> len .) ]
  ! MINUS           [ reduce using rule 78 (expression -> len .) ]
  ! KHREJ           [ reduce using rule 78 (expression -> len .) ]
  ! KMEL            [ reduce using rule 78 (expression -> len .) ]
  ! ID              [ reduce using rule 78 (expression -> len .) ]
  ! MOJOD           [ reduce using rule 78 (expression -> len .) ]
  ! KTEB            [ reduce using rule 78 (expression -> len .) ]
  ! (               [ reduce using rule 78 (expression -> len .) ]
  ! INT             [ reduce using rule 78 (expression -> len .) ]
  ! FLOAT           [ reduce using rule 78 (expression -> len .) ]
  ! STRING          [ reduce using rule 78 (expression -> len .) ]
  ! KHATE2          [ reduce using rule 78 (expression -> len .) ]
  ! S7I7            [ reduce using rule 78 (expression -> len .) ]
  ! WALO            [ reduce using rule 78 (expression -> len .) ]
  ! JEREB           [ reduce using rule 78 (expression -> len .) ]
  ! ILA             [ reduce using rule 78 (expression -> len .) ]
  ! LKOLA           [ reduce using rule 78 (expression -> len .) ]
  ! MA7ED           [ reduce using rule 78 (expression -> len .) ]
  ! DIR             [ reduce using rule 78 (expression -> len .) ]
  ! QRA             [ reduce using rule 78 (expression -> len .) ]
  ! TOL             [ reduce using rule 78 (expression -> len .) ]
  ! TA3RIF          [ reduce using rule 78 (expression -> len .) ]
  ! RED             [ reduce using rule 78 (expression -> len .) ]
  ! [               [ reduce using rule 78 (expression -> len .) ]
  ! $end            [ reduce using rule 78 (expression -> len .) ]
  ! }               [ reduce using rule 78 (expression -> len .) ]


state 19

    (32) instruction -> empty .

    KHREJ           reduce using rule 32 (instruction -> empty .)
    KMEL            reduce using rule 32 (instruction -> empty .)
    ID              reduce using rule 32 (instruction -> empty .)
    MOJOD           reduce using rule 32 (instruction -> empty .)
    KTEB            reduce using rule 32 (instruction -> empty .)
    (               reduce using rule 32 (instruction -> empty .)
    MINUS           reduce using rule 32 (instruction -> empty .)
    PLUS            reduce using rule 32 (instruction -> empty .)
    INT             reduce using rule 32 (instruction -> empty .)
    FLOAT           reduce using rule 32 (instruction -> empty .)
    STRING          reduce using rule 32 (instruction -> empty .)
    KHATE2          reduce using rule 32 (instruction -> empty .)
    S7I7            reduce using rule 32 (instruction -> empty .)
    WALO            reduce using rule 32 (instruction -> empty .)
    JEREB           reduce using rule 32 (instruction -> empty .)
    ILA             reduce using rule 32 (instruction -> empty .)
    LKOLA           reduce using rule 32 (instruction -> empty .)
    MA7ED           reduce using rule 32 (instruction -> empty .)
    DIR             reduce using rule 32 (instruction -> empty .)
    QRA             reduce using rule 32 (instruction -> empty .)
    TOL             reduce using rule 32 (instruction -> empty .)
    TA3RIF          reduce using rule 32 (instruction -> empty .)
    RED             reduce using rule 32 (instruction -> empty .)
    [               reduce using rule 32 (instruction -> empty .)
    $end            reduce using rule 32 (instruction -> empty .)
    }               reduce using rule 32 (instruction -> empty .)


state 20

    (33) instruction -> func .

    KHREJ           reduce using rule 33 (instruction -> func .)
    KMEL            reduce using rule 33 (instruction -> func .)
    ID              reduce using rule 33 (instruction -> func .)
    MOJOD           reduce using rule 33 (instruction -> func .)
    KTEB            reduce using rule 33 (instruction -> func .)
    (               reduce using rule 33 (instruction -> func .)
    MINUS           reduce using rule 33 (instruction -> func .)
    PLUS            reduce using rule 33 (instruction -> func .)
    INT             reduce using rule 33 (instruction -> func .)
    FLOAT           reduce using rule 33 (instruction -> func .)
    STRING          reduce using rule 33 (instruction -> func .)
    KHATE2          reduce using rule 33 (instruction -> func .)
    S7I7            reduce using rule 33 (instruction -> func .)
    WALO            reduce using rule 33 (instruction -> func .)
    JEREB           reduce using rule 33 (instruction -> func .)
    ILA             reduce using rule 33 (instruction -> func .)
    LKOLA           reduce using rule 33 (instruction -> func .)
    MA7ED           reduce using rule 33 (instruction -> func .)
    DIR             reduce using rule 33 (instruction -> func .)
    QRA             reduce using rule 33 (instruction -> func .)
    TOL             reduce using rule 33 (instruction -> func .)
    TA3RIF          reduce using rule 33 (instruction -> func .)
    RED             reduce using rule 33 (instruction -> func .)
    [               reduce using rule 33 (instruction -> func .)
    $end            reduce using rule 33 (instruction -> func .)
    }               reduce using rule 33 (instruction -> func .)


state 21

    (34) instruction -> return .

    KHREJ           reduce using rule 34 (instruction -> return .)
    KMEL            reduce using rule 34 (instruction -> return .)
    ID              reduce using rule 34 (instruction -> return .)
    MOJOD           reduce using rule 34 (instruction -> return .)
    KTEB            reduce using rule 34 (instruction -> return .)
    (               reduce using rule 34 (instruction -> return .)
    MINUS           reduce using rule 34 (instruction -> return .)
    PLUS            reduce using rule 34 (instruction -> return .)
    INT             reduce using rule 34 (instruction -> return .)
    FLOAT           reduce using rule 34 (instruction -> return .)
    STRING          reduce using rule 34 (instruction -> return .)
    KHATE2          reduce using rule 34 (instruction -> return .)
    S7I7            reduce using rule 34 (instruction -> return .)
    WALO            reduce using rule 34 (instruction -> return .)
    JEREB           reduce using rule 34 (instruction -> return .)
    ILA             reduce using rule 34 (instruction -> return .)
    LKOLA           reduce using rule 34 (instruction -> return .)
    MA7ED           reduce using rule 34 (instruction -> return .)
    DIR             reduce using rule 34 (instruction -> return .)
    QRA             reduce using rule 34 (instruction -> return .)
    TOL             reduce using rule 34 (instruction -> return .)
    TA3RIF          reduce using rule 34 (instruction -> return .)
    RED             reduce using rule 34 (instruction -> return .)
    [               reduce using rule 34 (instruction -> return .)
    $end            reduce using rule 34 (instruction -> return .)
    }               reduce using rule 34 (instruction -> return .)


state 22

    (35) instruction -> arrfn .
    (77) expression -> arrfn .

  ! reduce/reduce conflict for PLUS resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for MINUS resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for KHREJ resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for KMEL resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for ID resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for MOJOD resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for KTEB resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for ( resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for INT resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for FLOAT resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for STRING resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for KHATE2 resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for S7I7 resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for WALO resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for JEREB resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for ILA resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for LKOLA resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for MA7ED resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for DIR resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for QRA resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for TOL resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for TA3RIF resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for RED resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for [ resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for $end resolved using rule 35 (instruction -> arrfn .)
  ! reduce/reduce conflict for } resolved using rule 35 (instruction -> arrfn .)
    KHREJ           reduce using rule 35 (instruction -> arrfn .)
    KMEL            reduce using rule 35 (instruction -> arrfn .)
    ID              reduce using rule 35 (instruction -> arrfn .)
    MOJOD           reduce using rule 35 (instruction -> arrfn .)
    KTEB            reduce using rule 35 (instruction -> arrfn .)
    (               reduce using rule 35 (instruction -> arrfn .)
    MINUS           reduce using rule 35 (instruction -> arrfn .)
    PLUS            reduce using rule 35 (instruction -> arrfn .)
    INT             reduce using rule 35 (instruction -> arrfn .)
    FLOAT           reduce using rule 35 (instruction -> arrfn .)
    STRING          reduce using rule 35 (instruction -> arrfn .)
    KHATE2          reduce using rule 35 (instruction -> arrfn .)
    S7I7            reduce using rule 35 (instruction -> arrfn .)
    WALO            reduce using rule 35 (instruction -> arrfn .)
    JEREB           reduce using rule 35 (instruction -> arrfn .)
    ILA             reduce using rule 35 (instruction -> arrfn .)
    LKOLA           reduce using rule 35 (instruction -> arrfn .)
    MA7ED           reduce using rule 35 (instruction -> arrfn .)
    DIR             reduce using rule 35 (instruction -> arrfn .)
    QRA             reduce using rule 35 (instruction -> arrfn .)
    TOL             reduce using rule 35 (instruction -> arrfn .)
    TA3RIF          reduce using rule 35 (instruction -> arrfn .)
    RED             reduce using rule 35 (instruction -> arrfn .)
    [               reduce using rule 35 (instruction -> arrfn .)
    $end            reduce using rule 35 (instruction -> arrfn .)
    }               reduce using rule 35 (instruction -> arrfn .)
    TIMES           reduce using rule 77 (expression -> arrfn .)
    DIVIDE          reduce using rule 77 (expression -> arrfn .)
    MODULO          reduce using rule 77 (expression -> arrfn .)
    POWER           reduce using rule 77 (expression -> arrfn .)

  ! PLUS            [ reduce using rule 77 (expression -> arrfn .) ]
  ! MINUS           [ reduce using rule 77 (expression -> arrfn .) ]
  ! KHREJ           [ reduce using rule 77 (expression -> arrfn .) ]
  ! KMEL            [ reduce using rule 77 (expression -> arrfn .) ]
  ! ID              [ reduce using rule 77 (expression -> arrfn .) ]
  ! MOJOD           [ reduce using rule 77 (expression -> arrfn .) ]
  ! KTEB            [ reduce using rule 77 (expression -> arrfn .) ]
  ! (               [ reduce using rule 77 (expression -> arrfn .) ]
  ! INT             [ reduce using rule 77 (expression -> arrfn .) ]
  ! FLOAT           [ reduce using rule 77 (expression -> arrfn .) ]
  ! STRING          [ reduce using rule 77 (expression -> arrfn .) ]
  ! KHATE2          [ reduce using rule 77 (expression -> arrfn .) ]
  ! S7I7            [ reduce using rule 77 (expression -> arrfn .) ]
  ! WALO            [ reduce using rule 77 (expression -> arrfn .) ]
  ! JEREB           [ reduce using rule 77 (expression -> arrfn .) ]
  ! ILA             [ reduce using rule 77 (expression -> arrfn .) ]
  ! LKOLA           [ reduce using rule 77 (expression -> arrfn .) ]
  ! MA7ED           [ reduce using rule 77 (expression -> arrfn .) ]
  ! DIR             [ reduce using rule 77 (expression -> arrfn .) ]
  ! QRA             [ reduce using rule 77 (expression -> arrfn .) ]
  ! TOL             [ reduce using rule 77 (expression -> arrfn .) ]
  ! TA3RIF          [ reduce using rule 77 (expression -> arrfn .) ]
  ! RED             [ reduce using rule 77 (expression -> arrfn .) ]
  ! [               [ reduce using rule 77 (expression -> arrfn .) ]
  ! $end            [ reduce using rule 77 (expression -> arrfn .) ]
  ! }               [ reduce using rule 77 (expression -> arrfn .) ]


state 23

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input
    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION
    (63) expression -> ID .
    (91) arrfn -> ID . . ZID ( expression )
    (92) arrfn -> ID . . KBER ( array )
    (93) arrfn -> ID . . KHWI ( )
    (94) arrfn -> ID . . DKHEL ( expression , expression )
    (95) arrfn -> ID . . MSSE7 ( expression )
    (96) arrfn -> ID . . MSSE7 ( )
    (84) arrayelt -> ID . dimensions
    (87) arrayslice -> ID . [ expression : expression ]
    (88) arrayslice -> ID . [ : expression ]
    (89) arrayslice -> ID . [ expression : ]
    (90) arrayslice -> ID . [ : ]
    (104) appel_func -> ID . ( argument_list )
    (105) appel_func -> ID . ( )
    (85) dimensions -> . [ expression ]
    (86) dimensions -> . dimensions [ expression ]

  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for ( resolved as shift
    EQUALS          shift and go to state 56
    INCREMENTATION  shift and go to state 57
    DECREMENTATION  shift and go to state 58
    PLUS            reduce using rule 63 (expression -> ID .)
    MINUS           reduce using rule 63 (expression -> ID .)
    TIMES           reduce using rule 63 (expression -> ID .)
    DIVIDE          reduce using rule 63 (expression -> ID .)
    MODULO          reduce using rule 63 (expression -> ID .)
    POWER           reduce using rule 63 (expression -> ID .)
    KHREJ           reduce using rule 63 (expression -> ID .)
    KMEL            reduce using rule 63 (expression -> ID .)
    ID              reduce using rule 63 (expression -> ID .)
    MOJOD           reduce using rule 63 (expression -> ID .)
    KTEB            reduce using rule 63 (expression -> ID .)
    INT             reduce using rule 63 (expression -> ID .)
    FLOAT           reduce using rule 63 (expression -> ID .)
    STRING          reduce using rule 63 (expression -> ID .)
    KHATE2          reduce using rule 63 (expression -> ID .)
    S7I7            reduce using rule 63 (expression -> ID .)
    WALO            reduce using rule 63 (expression -> ID .)
    JEREB           reduce using rule 63 (expression -> ID .)
    ILA             reduce using rule 63 (expression -> ID .)
    LKOLA           reduce using rule 63 (expression -> ID .)
    MA7ED           reduce using rule 63 (expression -> ID .)
    DIR             reduce using rule 63 (expression -> ID .)
    QRA             reduce using rule 63 (expression -> ID .)
    TOL             reduce using rule 63 (expression -> ID .)
    TA3RIF          reduce using rule 63 (expression -> ID .)
    RED             reduce using rule 63 (expression -> ID .)
    $end            reduce using rule 63 (expression -> ID .)
    }               reduce using rule 63 (expression -> ID .)
    .               shift and go to state 59
    [               shift and go to state 62
    (               shift and go to state 60

  ! (               [ reduce using rule 63 (expression -> ID .) ]
  ! [               [ reduce using rule 63 (expression -> ID .) ]

    dimensions                     shift and go to state 61

state 24

    (6) var_assign -> MOJOD . var_assign
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign

    ID              shift and go to state 64
    MOJOD           shift and go to state 24

    var_assign                     shift and go to state 63

state 25

    (7) arrayelt_assign -> arrayelt . EQUALS expression
    (75) expression -> arrayelt .

    EQUALS          shift and go to state 65
    PLUS            reduce using rule 75 (expression -> arrayelt .)
    MINUS           reduce using rule 75 (expression -> arrayelt .)
    TIMES           reduce using rule 75 (expression -> arrayelt .)
    DIVIDE          reduce using rule 75 (expression -> arrayelt .)
    MODULO          reduce using rule 75 (expression -> arrayelt .)
    POWER           reduce using rule 75 (expression -> arrayelt .)
    KHREJ           reduce using rule 75 (expression -> arrayelt .)
    KMEL            reduce using rule 75 (expression -> arrayelt .)
    ID              reduce using rule 75 (expression -> arrayelt .)
    MOJOD           reduce using rule 75 (expression -> arrayelt .)
    KTEB            reduce using rule 75 (expression -> arrayelt .)
    (               reduce using rule 75 (expression -> arrayelt .)
    INT             reduce using rule 75 (expression -> arrayelt .)
    FLOAT           reduce using rule 75 (expression -> arrayelt .)
    STRING          reduce using rule 75 (expression -> arrayelt .)
    KHATE2          reduce using rule 75 (expression -> arrayelt .)
    S7I7            reduce using rule 75 (expression -> arrayelt .)
    WALO            reduce using rule 75 (expression -> arrayelt .)
    JEREB           reduce using rule 75 (expression -> arrayelt .)
    ILA             reduce using rule 75 (expression -> arrayelt .)
    LKOLA           reduce using rule 75 (expression -> arrayelt .)
    MA7ED           reduce using rule 75 (expression -> arrayelt .)
    DIR             reduce using rule 75 (expression -> arrayelt .)
    QRA             reduce using rule 75 (expression -> arrayelt .)
    TOL             reduce using rule 75 (expression -> arrayelt .)
    TA3RIF          reduce using rule 75 (expression -> arrayelt .)
    RED             reduce using rule 75 (expression -> arrayelt .)
    [               reduce using rule 75 (expression -> arrayelt .)
    $end            reduce using rule 75 (expression -> arrayelt .)
    }               reduce using rule 75 (expression -> arrayelt .)


state 26

    (8) arrayelt_assign -> arrayslice . EQUALS expression
    (76) expression -> arrayslice .

    EQUALS          shift and go to state 66
    PLUS            reduce using rule 76 (expression -> arrayslice .)
    MINUS           reduce using rule 76 (expression -> arrayslice .)
    TIMES           reduce using rule 76 (expression -> arrayslice .)
    DIVIDE          reduce using rule 76 (expression -> arrayslice .)
    MODULO          reduce using rule 76 (expression -> arrayslice .)
    POWER           reduce using rule 76 (expression -> arrayslice .)
    KHREJ           reduce using rule 76 (expression -> arrayslice .)
    KMEL            reduce using rule 76 (expression -> arrayslice .)
    ID              reduce using rule 76 (expression -> arrayslice .)
    MOJOD           reduce using rule 76 (expression -> arrayslice .)
    KTEB            reduce using rule 76 (expression -> arrayslice .)
    (               reduce using rule 76 (expression -> arrayslice .)
    INT             reduce using rule 76 (expression -> arrayslice .)
    FLOAT           reduce using rule 76 (expression -> arrayslice .)
    STRING          reduce using rule 76 (expression -> arrayslice .)
    KHATE2          reduce using rule 76 (expression -> arrayslice .)
    S7I7            reduce using rule 76 (expression -> arrayslice .)
    WALO            reduce using rule 76 (expression -> arrayslice .)
    JEREB           reduce using rule 76 (expression -> arrayslice .)
    ILA             reduce using rule 76 (expression -> arrayslice .)
    LKOLA           reduce using rule 76 (expression -> arrayslice .)
    MA7ED           reduce using rule 76 (expression -> arrayslice .)
    DIR             reduce using rule 76 (expression -> arrayslice .)
    QRA             reduce using rule 76 (expression -> arrayslice .)
    TOL             reduce using rule 76 (expression -> arrayslice .)
    TA3RIF          reduce using rule 76 (expression -> arrayslice .)
    RED             reduce using rule 76 (expression -> arrayslice .)
    [               reduce using rule 76 (expression -> arrayslice .)
    $end            reduce using rule 76 (expression -> arrayslice .)
    }               reduce using rule 76 (expression -> arrayslice .)


state 27

    (107) printing -> KTEB . ( condition )
    (108) printing -> KTEB . ( incrementation )
    (109) printing -> KTEB . ( decrementation )
    (110) printing -> KTEB . ( condition , condition )

    (               shift and go to state 67


state 28

    (60) expression -> ( . expression )
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 68
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 29

    (62) expression -> PLUS . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 74
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 30

    (61) expression -> MINUS . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 75
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 31

    (68) expression -> INT .

    PLUS            reduce using rule 68 (expression -> INT .)
    MINUS           reduce using rule 68 (expression -> INT .)
    TIMES           reduce using rule 68 (expression -> INT .)
    DIVIDE          reduce using rule 68 (expression -> INT .)
    MODULO          reduce using rule 68 (expression -> INT .)
    POWER           reduce using rule 68 (expression -> INT .)
    KHREJ           reduce using rule 68 (expression -> INT .)
    KMEL            reduce using rule 68 (expression -> INT .)
    ID              reduce using rule 68 (expression -> INT .)
    MOJOD           reduce using rule 68 (expression -> INT .)
    KTEB            reduce using rule 68 (expression -> INT .)
    (               reduce using rule 68 (expression -> INT .)
    INT             reduce using rule 68 (expression -> INT .)
    FLOAT           reduce using rule 68 (expression -> INT .)
    STRING          reduce using rule 68 (expression -> INT .)
    KHATE2          reduce using rule 68 (expression -> INT .)
    S7I7            reduce using rule 68 (expression -> INT .)
    WALO            reduce using rule 68 (expression -> INT .)
    JEREB           reduce using rule 68 (expression -> INT .)
    ILA             reduce using rule 68 (expression -> INT .)
    LKOLA           reduce using rule 68 (expression -> INT .)
    MA7ED           reduce using rule 68 (expression -> INT .)
    DIR             reduce using rule 68 (expression -> INT .)
    QRA             reduce using rule 68 (expression -> INT .)
    TOL             reduce using rule 68 (expression -> INT .)
    TA3RIF          reduce using rule 68 (expression -> INT .)
    RED             reduce using rule 68 (expression -> INT .)
    [               reduce using rule 68 (expression -> INT .)
    $end            reduce using rule 68 (expression -> INT .)
    )               reduce using rule 68 (expression -> INT .)
    ]               reduce using rule 68 (expression -> INT .)
    ,               reduce using rule 68 (expression -> INT .)
    }               reduce using rule 68 (expression -> INT .)
    ;               reduce using rule 68 (expression -> INT .)
    :               reduce using rule 68 (expression -> INT .)
    SUP             reduce using rule 68 (expression -> INT .)
    INF             reduce using rule 68 (expression -> INT .)
    EQUALSCOMP      reduce using rule 68 (expression -> INT .)
    SUPEQUALS       reduce using rule 68 (expression -> INT .)
    INFEQUALS       reduce using rule 68 (expression -> INT .)
    DIFFERENT       reduce using rule 68 (expression -> INT .)
    WA              reduce using rule 68 (expression -> INT .)
    AW              reduce using rule 68 (expression -> INT .)


state 32

    (69) expression -> FLOAT .

    PLUS            reduce using rule 69 (expression -> FLOAT .)
    MINUS           reduce using rule 69 (expression -> FLOAT .)
    TIMES           reduce using rule 69 (expression -> FLOAT .)
    DIVIDE          reduce using rule 69 (expression -> FLOAT .)
    MODULO          reduce using rule 69 (expression -> FLOAT .)
    POWER           reduce using rule 69 (expression -> FLOAT .)
    KHREJ           reduce using rule 69 (expression -> FLOAT .)
    KMEL            reduce using rule 69 (expression -> FLOAT .)
    ID              reduce using rule 69 (expression -> FLOAT .)
    MOJOD           reduce using rule 69 (expression -> FLOAT .)
    KTEB            reduce using rule 69 (expression -> FLOAT .)
    (               reduce using rule 69 (expression -> FLOAT .)
    INT             reduce using rule 69 (expression -> FLOAT .)
    FLOAT           reduce using rule 69 (expression -> FLOAT .)
    STRING          reduce using rule 69 (expression -> FLOAT .)
    KHATE2          reduce using rule 69 (expression -> FLOAT .)
    S7I7            reduce using rule 69 (expression -> FLOAT .)
    WALO            reduce using rule 69 (expression -> FLOAT .)
    JEREB           reduce using rule 69 (expression -> FLOAT .)
    ILA             reduce using rule 69 (expression -> FLOAT .)
    LKOLA           reduce using rule 69 (expression -> FLOAT .)
    MA7ED           reduce using rule 69 (expression -> FLOAT .)
    DIR             reduce using rule 69 (expression -> FLOAT .)
    QRA             reduce using rule 69 (expression -> FLOAT .)
    TOL             reduce using rule 69 (expression -> FLOAT .)
    TA3RIF          reduce using rule 69 (expression -> FLOAT .)
    RED             reduce using rule 69 (expression -> FLOAT .)
    [               reduce using rule 69 (expression -> FLOAT .)
    $end            reduce using rule 69 (expression -> FLOAT .)
    )               reduce using rule 69 (expression -> FLOAT .)
    ]               reduce using rule 69 (expression -> FLOAT .)
    ,               reduce using rule 69 (expression -> FLOAT .)
    }               reduce using rule 69 (expression -> FLOAT .)
    ;               reduce using rule 69 (expression -> FLOAT .)
    :               reduce using rule 69 (expression -> FLOAT .)
    SUP             reduce using rule 69 (expression -> FLOAT .)
    INF             reduce using rule 69 (expression -> FLOAT .)
    EQUALSCOMP      reduce using rule 69 (expression -> FLOAT .)
    SUPEQUALS       reduce using rule 69 (expression -> FLOAT .)
    INFEQUALS       reduce using rule 69 (expression -> FLOAT .)
    DIFFERENT       reduce using rule 69 (expression -> FLOAT .)
    WA              reduce using rule 69 (expression -> FLOAT .)
    AW              reduce using rule 69 (expression -> FLOAT .)


state 33

    (70) expression -> STRING .

    PLUS            reduce using rule 70 (expression -> STRING .)
    MINUS           reduce using rule 70 (expression -> STRING .)
    TIMES           reduce using rule 70 (expression -> STRING .)
    DIVIDE          reduce using rule 70 (expression -> STRING .)
    MODULO          reduce using rule 70 (expression -> STRING .)
    POWER           reduce using rule 70 (expression -> STRING .)
    KHREJ           reduce using rule 70 (expression -> STRING .)
    KMEL            reduce using rule 70 (expression -> STRING .)
    ID              reduce using rule 70 (expression -> STRING .)
    MOJOD           reduce using rule 70 (expression -> STRING .)
    KTEB            reduce using rule 70 (expression -> STRING .)
    (               reduce using rule 70 (expression -> STRING .)
    INT             reduce using rule 70 (expression -> STRING .)
    FLOAT           reduce using rule 70 (expression -> STRING .)
    STRING          reduce using rule 70 (expression -> STRING .)
    KHATE2          reduce using rule 70 (expression -> STRING .)
    S7I7            reduce using rule 70 (expression -> STRING .)
    WALO            reduce using rule 70 (expression -> STRING .)
    JEREB           reduce using rule 70 (expression -> STRING .)
    ILA             reduce using rule 70 (expression -> STRING .)
    LKOLA           reduce using rule 70 (expression -> STRING .)
    MA7ED           reduce using rule 70 (expression -> STRING .)
    DIR             reduce using rule 70 (expression -> STRING .)
    QRA             reduce using rule 70 (expression -> STRING .)
    TOL             reduce using rule 70 (expression -> STRING .)
    TA3RIF          reduce using rule 70 (expression -> STRING .)
    RED             reduce using rule 70 (expression -> STRING .)
    [               reduce using rule 70 (expression -> STRING .)
    $end            reduce using rule 70 (expression -> STRING .)
    )               reduce using rule 70 (expression -> STRING .)
    ]               reduce using rule 70 (expression -> STRING .)
    ,               reduce using rule 70 (expression -> STRING .)
    }               reduce using rule 70 (expression -> STRING .)
    ;               reduce using rule 70 (expression -> STRING .)
    :               reduce using rule 70 (expression -> STRING .)
    SUP             reduce using rule 70 (expression -> STRING .)
    INF             reduce using rule 70 (expression -> STRING .)
    EQUALSCOMP      reduce using rule 70 (expression -> STRING .)
    SUPEQUALS       reduce using rule 70 (expression -> STRING .)
    INFEQUALS       reduce using rule 70 (expression -> STRING .)
    DIFFERENT       reduce using rule 70 (expression -> STRING .)
    WA              reduce using rule 70 (expression -> STRING .)
    AW              reduce using rule 70 (expression -> STRING .)


state 34

    (71) expression -> KHATE2 .

    PLUS            reduce using rule 71 (expression -> KHATE2 .)
    MINUS           reduce using rule 71 (expression -> KHATE2 .)
    TIMES           reduce using rule 71 (expression -> KHATE2 .)
    DIVIDE          reduce using rule 71 (expression -> KHATE2 .)
    MODULO          reduce using rule 71 (expression -> KHATE2 .)
    POWER           reduce using rule 71 (expression -> KHATE2 .)
    KHREJ           reduce using rule 71 (expression -> KHATE2 .)
    KMEL            reduce using rule 71 (expression -> KHATE2 .)
    ID              reduce using rule 71 (expression -> KHATE2 .)
    MOJOD           reduce using rule 71 (expression -> KHATE2 .)
    KTEB            reduce using rule 71 (expression -> KHATE2 .)
    (               reduce using rule 71 (expression -> KHATE2 .)
    INT             reduce using rule 71 (expression -> KHATE2 .)
    FLOAT           reduce using rule 71 (expression -> KHATE2 .)
    STRING          reduce using rule 71 (expression -> KHATE2 .)
    KHATE2          reduce using rule 71 (expression -> KHATE2 .)
    S7I7            reduce using rule 71 (expression -> KHATE2 .)
    WALO            reduce using rule 71 (expression -> KHATE2 .)
    JEREB           reduce using rule 71 (expression -> KHATE2 .)
    ILA             reduce using rule 71 (expression -> KHATE2 .)
    LKOLA           reduce using rule 71 (expression -> KHATE2 .)
    MA7ED           reduce using rule 71 (expression -> KHATE2 .)
    DIR             reduce using rule 71 (expression -> KHATE2 .)
    QRA             reduce using rule 71 (expression -> KHATE2 .)
    TOL             reduce using rule 71 (expression -> KHATE2 .)
    TA3RIF          reduce using rule 71 (expression -> KHATE2 .)
    RED             reduce using rule 71 (expression -> KHATE2 .)
    [               reduce using rule 71 (expression -> KHATE2 .)
    $end            reduce using rule 71 (expression -> KHATE2 .)
    )               reduce using rule 71 (expression -> KHATE2 .)
    ]               reduce using rule 71 (expression -> KHATE2 .)
    ,               reduce using rule 71 (expression -> KHATE2 .)
    }               reduce using rule 71 (expression -> KHATE2 .)
    ;               reduce using rule 71 (expression -> KHATE2 .)
    :               reduce using rule 71 (expression -> KHATE2 .)
    SUP             reduce using rule 71 (expression -> KHATE2 .)
    INF             reduce using rule 71 (expression -> KHATE2 .)
    EQUALSCOMP      reduce using rule 71 (expression -> KHATE2 .)
    SUPEQUALS       reduce using rule 71 (expression -> KHATE2 .)
    INFEQUALS       reduce using rule 71 (expression -> KHATE2 .)
    DIFFERENT       reduce using rule 71 (expression -> KHATE2 .)
    WA              reduce using rule 71 (expression -> KHATE2 .)
    AW              reduce using rule 71 (expression -> KHATE2 .)


state 35

    (72) expression -> S7I7 .

    PLUS            reduce using rule 72 (expression -> S7I7 .)
    MINUS           reduce using rule 72 (expression -> S7I7 .)
    TIMES           reduce using rule 72 (expression -> S7I7 .)
    DIVIDE          reduce using rule 72 (expression -> S7I7 .)
    MODULO          reduce using rule 72 (expression -> S7I7 .)
    POWER           reduce using rule 72 (expression -> S7I7 .)
    KHREJ           reduce using rule 72 (expression -> S7I7 .)
    KMEL            reduce using rule 72 (expression -> S7I7 .)
    ID              reduce using rule 72 (expression -> S7I7 .)
    MOJOD           reduce using rule 72 (expression -> S7I7 .)
    KTEB            reduce using rule 72 (expression -> S7I7 .)
    (               reduce using rule 72 (expression -> S7I7 .)
    INT             reduce using rule 72 (expression -> S7I7 .)
    FLOAT           reduce using rule 72 (expression -> S7I7 .)
    STRING          reduce using rule 72 (expression -> S7I7 .)
    KHATE2          reduce using rule 72 (expression -> S7I7 .)
    S7I7            reduce using rule 72 (expression -> S7I7 .)
    WALO            reduce using rule 72 (expression -> S7I7 .)
    JEREB           reduce using rule 72 (expression -> S7I7 .)
    ILA             reduce using rule 72 (expression -> S7I7 .)
    LKOLA           reduce using rule 72 (expression -> S7I7 .)
    MA7ED           reduce using rule 72 (expression -> S7I7 .)
    DIR             reduce using rule 72 (expression -> S7I7 .)
    QRA             reduce using rule 72 (expression -> S7I7 .)
    TOL             reduce using rule 72 (expression -> S7I7 .)
    TA3RIF          reduce using rule 72 (expression -> S7I7 .)
    RED             reduce using rule 72 (expression -> S7I7 .)
    [               reduce using rule 72 (expression -> S7I7 .)
    $end            reduce using rule 72 (expression -> S7I7 .)
    )               reduce using rule 72 (expression -> S7I7 .)
    ]               reduce using rule 72 (expression -> S7I7 .)
    ,               reduce using rule 72 (expression -> S7I7 .)
    }               reduce using rule 72 (expression -> S7I7 .)
    ;               reduce using rule 72 (expression -> S7I7 .)
    :               reduce using rule 72 (expression -> S7I7 .)
    SUP             reduce using rule 72 (expression -> S7I7 .)
    INF             reduce using rule 72 (expression -> S7I7 .)
    EQUALSCOMP      reduce using rule 72 (expression -> S7I7 .)
    SUPEQUALS       reduce using rule 72 (expression -> S7I7 .)
    INFEQUALS       reduce using rule 72 (expression -> S7I7 .)
    DIFFERENT       reduce using rule 72 (expression -> S7I7 .)
    WA              reduce using rule 72 (expression -> S7I7 .)
    AW              reduce using rule 72 (expression -> S7I7 .)


state 36

    (73) expression -> WALO .

    PLUS            reduce using rule 73 (expression -> WALO .)
    MINUS           reduce using rule 73 (expression -> WALO .)
    TIMES           reduce using rule 73 (expression -> WALO .)
    DIVIDE          reduce using rule 73 (expression -> WALO .)
    MODULO          reduce using rule 73 (expression -> WALO .)
    POWER           reduce using rule 73 (expression -> WALO .)
    KHREJ           reduce using rule 73 (expression -> WALO .)
    KMEL            reduce using rule 73 (expression -> WALO .)
    ID              reduce using rule 73 (expression -> WALO .)
    MOJOD           reduce using rule 73 (expression -> WALO .)
    KTEB            reduce using rule 73 (expression -> WALO .)
    (               reduce using rule 73 (expression -> WALO .)
    INT             reduce using rule 73 (expression -> WALO .)
    FLOAT           reduce using rule 73 (expression -> WALO .)
    STRING          reduce using rule 73 (expression -> WALO .)
    KHATE2          reduce using rule 73 (expression -> WALO .)
    S7I7            reduce using rule 73 (expression -> WALO .)
    WALO            reduce using rule 73 (expression -> WALO .)
    JEREB           reduce using rule 73 (expression -> WALO .)
    ILA             reduce using rule 73 (expression -> WALO .)
    LKOLA           reduce using rule 73 (expression -> WALO .)
    MA7ED           reduce using rule 73 (expression -> WALO .)
    DIR             reduce using rule 73 (expression -> WALO .)
    QRA             reduce using rule 73 (expression -> WALO .)
    TOL             reduce using rule 73 (expression -> WALO .)
    TA3RIF          reduce using rule 73 (expression -> WALO .)
    RED             reduce using rule 73 (expression -> WALO .)
    [               reduce using rule 73 (expression -> WALO .)
    $end            reduce using rule 73 (expression -> WALO .)
    )               reduce using rule 73 (expression -> WALO .)
    ]               reduce using rule 73 (expression -> WALO .)
    ,               reduce using rule 73 (expression -> WALO .)
    }               reduce using rule 73 (expression -> WALO .)
    ;               reduce using rule 73 (expression -> WALO .)
    :               reduce using rule 73 (expression -> WALO .)
    SUP             reduce using rule 73 (expression -> WALO .)
    INF             reduce using rule 73 (expression -> WALO .)
    EQUALSCOMP      reduce using rule 73 (expression -> WALO .)
    SUPEQUALS       reduce using rule 73 (expression -> WALO .)
    INFEQUALS       reduce using rule 73 (expression -> WALO .)
    DIFFERENT       reduce using rule 73 (expression -> WALO .)
    WA              reduce using rule 73 (expression -> WALO .)
    AW              reduce using rule 73 (expression -> WALO .)


state 37

    (74) expression -> array .

    PLUS            reduce using rule 74 (expression -> array .)
    MINUS           reduce using rule 74 (expression -> array .)
    TIMES           reduce using rule 74 (expression -> array .)
    DIVIDE          reduce using rule 74 (expression -> array .)
    MODULO          reduce using rule 74 (expression -> array .)
    POWER           reduce using rule 74 (expression -> array .)
    KHREJ           reduce using rule 74 (expression -> array .)
    KMEL            reduce using rule 74 (expression -> array .)
    ID              reduce using rule 74 (expression -> array .)
    MOJOD           reduce using rule 74 (expression -> array .)
    KTEB            reduce using rule 74 (expression -> array .)
    (               reduce using rule 74 (expression -> array .)
    INT             reduce using rule 74 (expression -> array .)
    FLOAT           reduce using rule 74 (expression -> array .)
    STRING          reduce using rule 74 (expression -> array .)
    KHATE2          reduce using rule 74 (expression -> array .)
    S7I7            reduce using rule 74 (expression -> array .)
    WALO            reduce using rule 74 (expression -> array .)
    JEREB           reduce using rule 74 (expression -> array .)
    ILA             reduce using rule 74 (expression -> array .)
    LKOLA           reduce using rule 74 (expression -> array .)
    MA7ED           reduce using rule 74 (expression -> array .)
    DIR             reduce using rule 74 (expression -> array .)
    QRA             reduce using rule 74 (expression -> array .)
    TOL             reduce using rule 74 (expression -> array .)
    TA3RIF          reduce using rule 74 (expression -> array .)
    RED             reduce using rule 74 (expression -> array .)
    [               reduce using rule 74 (expression -> array .)
    $end            reduce using rule 74 (expression -> array .)
    )               reduce using rule 74 (expression -> array .)
    ]               reduce using rule 74 (expression -> array .)
    ,               reduce using rule 74 (expression -> array .)
    }               reduce using rule 74 (expression -> array .)
    ;               reduce using rule 74 (expression -> array .)
    :               reduce using rule 74 (expression -> array .)
    SUP             reduce using rule 74 (expression -> array .)
    INF             reduce using rule 74 (expression -> array .)
    EQUALSCOMP      reduce using rule 74 (expression -> array .)
    SUPEQUALS       reduce using rule 74 (expression -> array .)
    INFEQUALS       reduce using rule 74 (expression -> array .)
    DIFFERENT       reduce using rule 74 (expression -> array .)
    WA              reduce using rule 74 (expression -> array .)
    AW              reduce using rule 74 (expression -> array .)


state 38

    (79) expression -> appel_func .

    PLUS            reduce using rule 79 (expression -> appel_func .)
    MINUS           reduce using rule 79 (expression -> appel_func .)
    TIMES           reduce using rule 79 (expression -> appel_func .)
    DIVIDE          reduce using rule 79 (expression -> appel_func .)
    MODULO          reduce using rule 79 (expression -> appel_func .)
    POWER           reduce using rule 79 (expression -> appel_func .)
    KHREJ           reduce using rule 79 (expression -> appel_func .)
    KMEL            reduce using rule 79 (expression -> appel_func .)
    ID              reduce using rule 79 (expression -> appel_func .)
    MOJOD           reduce using rule 79 (expression -> appel_func .)
    KTEB            reduce using rule 79 (expression -> appel_func .)
    (               reduce using rule 79 (expression -> appel_func .)
    INT             reduce using rule 79 (expression -> appel_func .)
    FLOAT           reduce using rule 79 (expression -> appel_func .)
    STRING          reduce using rule 79 (expression -> appel_func .)
    KHATE2          reduce using rule 79 (expression -> appel_func .)
    S7I7            reduce using rule 79 (expression -> appel_func .)
    WALO            reduce using rule 79 (expression -> appel_func .)
    JEREB           reduce using rule 79 (expression -> appel_func .)
    ILA             reduce using rule 79 (expression -> appel_func .)
    LKOLA           reduce using rule 79 (expression -> appel_func .)
    MA7ED           reduce using rule 79 (expression -> appel_func .)
    DIR             reduce using rule 79 (expression -> appel_func .)
    QRA             reduce using rule 79 (expression -> appel_func .)
    TOL             reduce using rule 79 (expression -> appel_func .)
    TA3RIF          reduce using rule 79 (expression -> appel_func .)
    RED             reduce using rule 79 (expression -> appel_func .)
    [               reduce using rule 79 (expression -> appel_func .)
    $end            reduce using rule 79 (expression -> appel_func .)
    )               reduce using rule 79 (expression -> appel_func .)
    ]               reduce using rule 79 (expression -> appel_func .)
    ,               reduce using rule 79 (expression -> appel_func .)
    }               reduce using rule 79 (expression -> appel_func .)
    ;               reduce using rule 79 (expression -> appel_func .)
    :               reduce using rule 79 (expression -> appel_func .)
    SUP             reduce using rule 79 (expression -> appel_func .)
    INF             reduce using rule 79 (expression -> appel_func .)
    EQUALSCOMP      reduce using rule 79 (expression -> appel_func .)
    SUPEQUALS       reduce using rule 79 (expression -> appel_func .)
    INFEQUALS       reduce using rule 79 (expression -> appel_func .)
    DIFFERENT       reduce using rule 79 (expression -> appel_func .)
    WA              reduce using rule 79 (expression -> appel_func .)
    AW              reduce using rule 79 (expression -> appel_func .)


state 39

    (66) try -> JEREB . { instruction_list } MASD9CH { instruction_list }
    (67) try -> JEREB . { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }

    {               shift and go to state 76


state 40

    (9) if -> ILA . ( condition ) { instruction_list }
    (10) if -> ILA . ( condition ) { instruction_list } WLA { instruction_list }

    (               shift and go to state 77


state 41

    (11) for -> LKOLA . ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> LKOLA . ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> LKOLA . ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> LKOLA . ( expression ; condition ; decrementation ) { instruction_list }

    (               shift and go to state 78


state 42

    (15) while -> MA7ED . ( condition ) { instruction_list }

    (               shift and go to state 79


state 43

    (16) doWhile -> DIR . { instruction_list } MA7ED ( condition )

    {               shift and go to state 80


state 44

    (64) input -> QRA . ( expression )
    (65) input -> QRA . ( )

    (               shift and go to state 81


state 45

    (111) len -> TOL . ( expression )

    (               shift and go to state 82


state 46

    (102) func -> TA3RIF . ID ( parameter_list ) { instruction_list }
    (103) func -> TA3RIF . ID ( ) { instruction_list }

    ID              shift and go to state 83


state 47

    (106) return -> RED . ( expression )

    (               shift and go to state 84


state 48

    (82) array -> [ . arraylist ]
    (83) array -> [ . ]
    (80) arraylist -> . expression
    (81) arraylist -> . arraylist , expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    ]               shift and go to state 86
    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    arraylist                      shift and go to state 85
    expression                     shift and go to state 87
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 49

    (37) instruction_list -> instruction_list instruction .

    KHREJ           reduce using rule 37 (instruction_list -> instruction_list instruction .)
    KMEL            reduce using rule 37 (instruction_list -> instruction_list instruction .)
    ID              reduce using rule 37 (instruction_list -> instruction_list instruction .)
    MOJOD           reduce using rule 37 (instruction_list -> instruction_list instruction .)
    KTEB            reduce using rule 37 (instruction_list -> instruction_list instruction .)
    (               reduce using rule 37 (instruction_list -> instruction_list instruction .)
    MINUS           reduce using rule 37 (instruction_list -> instruction_list instruction .)
    PLUS            reduce using rule 37 (instruction_list -> instruction_list instruction .)
    INT             reduce using rule 37 (instruction_list -> instruction_list instruction .)
    FLOAT           reduce using rule 37 (instruction_list -> instruction_list instruction .)
    STRING          reduce using rule 37 (instruction_list -> instruction_list instruction .)
    KHATE2          reduce using rule 37 (instruction_list -> instruction_list instruction .)
    S7I7            reduce using rule 37 (instruction_list -> instruction_list instruction .)
    WALO            reduce using rule 37 (instruction_list -> instruction_list instruction .)
    JEREB           reduce using rule 37 (instruction_list -> instruction_list instruction .)
    ILA             reduce using rule 37 (instruction_list -> instruction_list instruction .)
    LKOLA           reduce using rule 37 (instruction_list -> instruction_list instruction .)
    MA7ED           reduce using rule 37 (instruction_list -> instruction_list instruction .)
    DIR             reduce using rule 37 (instruction_list -> instruction_list instruction .)
    QRA             reduce using rule 37 (instruction_list -> instruction_list instruction .)
    TOL             reduce using rule 37 (instruction_list -> instruction_list instruction .)
    TA3RIF          reduce using rule 37 (instruction_list -> instruction_list instruction .)
    RED             reduce using rule 37 (instruction_list -> instruction_list instruction .)
    [               reduce using rule 37 (instruction_list -> instruction_list instruction .)
    $end            reduce using rule 37 (instruction_list -> instruction_list instruction .)
    }               reduce using rule 37 (instruction_list -> instruction_list instruction .)


state 50

    (54) expression -> expression PLUS . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 88
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 51

    (55) expression -> expression MINUS . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 89
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 52

    (56) expression -> expression TIMES . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 90
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 53

    (57) expression -> expression DIVIDE . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 91
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 54

    (58) expression -> expression MODULO . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 92
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 55

    (59) expression -> expression POWER . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 93
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 56

    (4) var_assign -> ID EQUALS . expression
    (5) var_assign -> ID EQUALS . input
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    QRA             shift and go to state 44
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 94
    input                          shift and go to state 95
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 57

    (2) incrementation -> ID INCREMENTATION .

    KHREJ           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KMEL            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    ID              reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MOJOD           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KTEB            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    (               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MINUS           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    PLUS            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    INT             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    FLOAT           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    STRING          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KHATE2          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    S7I7            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    WALO            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    JEREB           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    ILA             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    LKOLA           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MA7ED           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    DIR             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    QRA             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    TOL             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    TA3RIF          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    RED             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    [               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    $end            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    )               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    }               reduce using rule 2 (incrementation -> ID INCREMENTATION .)


state 58

    (3) decrementation -> ID DECREMENTATION .

    KHREJ           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KMEL            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    ID              reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MOJOD           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KTEB            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    (               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MINUS           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    PLUS            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    INT             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    FLOAT           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    STRING          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KHATE2          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    S7I7            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    WALO            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    JEREB           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    ILA             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    LKOLA           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MA7ED           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    DIR             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    QRA             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    TOL             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    TA3RIF          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    RED             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    [               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    $end            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    )               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    }               reduce using rule 3 (decrementation -> ID DECREMENTATION .)


state 59

    (91) arrfn -> ID . . ZID ( expression )
    (92) arrfn -> ID . . KBER ( array )
    (93) arrfn -> ID . . KHWI ( )
    (94) arrfn -> ID . . DKHEL ( expression , expression )
    (95) arrfn -> ID . . MSSE7 ( expression )
    (96) arrfn -> ID . . MSSE7 ( )

    ZID             shift and go to state 96
    KBER            shift and go to state 97
    KHWI            shift and go to state 98
    DKHEL           shift and go to state 99
    MSSE7           shift and go to state 100


state 60

    (104) appel_func -> ID ( . argument_list )
    (105) appel_func -> ID ( . )
    (97) argument_list -> . expression
    (98) argument_list -> . argument_list , expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    )               shift and go to state 102
    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    argument_list                  shift and go to state 101
    expression                     shift and go to state 103
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 61

    (84) arrayelt -> ID dimensions .
    (86) dimensions -> dimensions . [ expression ]

  ! shift/reduce conflict for [ resolved as shift
    EQUALS          reduce using rule 84 (arrayelt -> ID dimensions .)
    PLUS            reduce using rule 84 (arrayelt -> ID dimensions .)
    MINUS           reduce using rule 84 (arrayelt -> ID dimensions .)
    TIMES           reduce using rule 84 (arrayelt -> ID dimensions .)
    DIVIDE          reduce using rule 84 (arrayelt -> ID dimensions .)
    MODULO          reduce using rule 84 (arrayelt -> ID dimensions .)
    POWER           reduce using rule 84 (arrayelt -> ID dimensions .)
    KHREJ           reduce using rule 84 (arrayelt -> ID dimensions .)
    KMEL            reduce using rule 84 (arrayelt -> ID dimensions .)
    ID              reduce using rule 84 (arrayelt -> ID dimensions .)
    MOJOD           reduce using rule 84 (arrayelt -> ID dimensions .)
    KTEB            reduce using rule 84 (arrayelt -> ID dimensions .)
    (               reduce using rule 84 (arrayelt -> ID dimensions .)
    INT             reduce using rule 84 (arrayelt -> ID dimensions .)
    FLOAT           reduce using rule 84 (arrayelt -> ID dimensions .)
    STRING          reduce using rule 84 (arrayelt -> ID dimensions .)
    KHATE2          reduce using rule 84 (arrayelt -> ID dimensions .)
    S7I7            reduce using rule 84 (arrayelt -> ID dimensions .)
    WALO            reduce using rule 84 (arrayelt -> ID dimensions .)
    JEREB           reduce using rule 84 (arrayelt -> ID dimensions .)
    ILA             reduce using rule 84 (arrayelt -> ID dimensions .)
    LKOLA           reduce using rule 84 (arrayelt -> ID dimensions .)
    MA7ED           reduce using rule 84 (arrayelt -> ID dimensions .)
    DIR             reduce using rule 84 (arrayelt -> ID dimensions .)
    QRA             reduce using rule 84 (arrayelt -> ID dimensions .)
    TOL             reduce using rule 84 (arrayelt -> ID dimensions .)
    TA3RIF          reduce using rule 84 (arrayelt -> ID dimensions .)
    RED             reduce using rule 84 (arrayelt -> ID dimensions .)
    $end            reduce using rule 84 (arrayelt -> ID dimensions .)
    )               reduce using rule 84 (arrayelt -> ID dimensions .)
    ]               reduce using rule 84 (arrayelt -> ID dimensions .)
    ,               reduce using rule 84 (arrayelt -> ID dimensions .)
    }               reduce using rule 84 (arrayelt -> ID dimensions .)
    ;               reduce using rule 84 (arrayelt -> ID dimensions .)
    :               reduce using rule 84 (arrayelt -> ID dimensions .)
    SUP             reduce using rule 84 (arrayelt -> ID dimensions .)
    INF             reduce using rule 84 (arrayelt -> ID dimensions .)
    EQUALSCOMP      reduce using rule 84 (arrayelt -> ID dimensions .)
    SUPEQUALS       reduce using rule 84 (arrayelt -> ID dimensions .)
    INFEQUALS       reduce using rule 84 (arrayelt -> ID dimensions .)
    DIFFERENT       reduce using rule 84 (arrayelt -> ID dimensions .)
    WA              reduce using rule 84 (arrayelt -> ID dimensions .)
    AW              reduce using rule 84 (arrayelt -> ID dimensions .)
    [               shift and go to state 104

  ! [               [ reduce using rule 84 (arrayelt -> ID dimensions .) ]


state 62

    (87) arrayslice -> ID [ . expression : expression ]
    (88) arrayslice -> ID [ . : expression ]
    (89) arrayslice -> ID [ . expression : ]
    (90) arrayslice -> ID [ . : ]
    (85) dimensions -> [ . expression ]
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    :               shift and go to state 106
    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 105
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 63

    (6) var_assign -> MOJOD var_assign .

    KHREJ           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    KMEL            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    ID              reduce using rule 6 (var_assign -> MOJOD var_assign .)
    MOJOD           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    KTEB            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    (               reduce using rule 6 (var_assign -> MOJOD var_assign .)
    MINUS           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    PLUS            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    INT             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    FLOAT           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    STRING          reduce using rule 6 (var_assign -> MOJOD var_assign .)
    KHATE2          reduce using rule 6 (var_assign -> MOJOD var_assign .)
    S7I7            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    WALO            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    JEREB           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    ILA             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    LKOLA           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    MA7ED           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    DIR             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    QRA             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    TOL             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    TA3RIF          reduce using rule 6 (var_assign -> MOJOD var_assign .)
    RED             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    [               reduce using rule 6 (var_assign -> MOJOD var_assign .)
    $end            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    }               reduce using rule 6 (var_assign -> MOJOD var_assign .)
    ;               reduce using rule 6 (var_assign -> MOJOD var_assign .)


state 64

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input

    EQUALS          shift and go to state 56


state 65

    (7) arrayelt_assign -> arrayelt EQUALS . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    arrayelt                       shift and go to state 70
    expression                     shift and go to state 107
    array                          shift and go to state 37
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 66

    (8) arrayelt_assign -> arrayslice EQUALS . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    arrayslice                     shift and go to state 71
    expression                     shift and go to state 108
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 67

    (107) printing -> KTEB ( . condition )
    (108) printing -> KTEB ( . incrementation )
    (109) printing -> KTEB ( . decrementation )
    (110) printing -> KTEB ( . condition , condition )
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    ID              shift and go to state 115
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 110
    incrementation                 shift and go to state 111
    decrementation                 shift and go to state 112
    expression                     shift and go to state 114
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 68

    (60) expression -> ( expression . )
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               shift and go to state 116
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 69

    (63) expression -> ID .
    (84) arrayelt -> ID . dimensions
    (87) arrayslice -> ID . [ expression : expression ]
    (88) arrayslice -> ID . [ : expression ]
    (89) arrayslice -> ID . [ expression : ]
    (90) arrayslice -> ID . [ : ]
    (91) arrfn -> ID . . ZID ( expression )
    (92) arrfn -> ID . . KBER ( array )
    (93) arrfn -> ID . . KHWI ( )
    (94) arrfn -> ID . . DKHEL ( expression , expression )
    (95) arrfn -> ID . . MSSE7 ( expression )
    (96) arrfn -> ID . . MSSE7 ( )
    (104) appel_func -> ID . ( argument_list )
    (105) appel_func -> ID . ( )
    (85) dimensions -> . [ expression ]
    (86) dimensions -> . dimensions [ expression ]

  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for ( resolved as shift
    )               reduce using rule 63 (expression -> ID .)
    PLUS            reduce using rule 63 (expression -> ID .)
    MINUS           reduce using rule 63 (expression -> ID .)
    TIMES           reduce using rule 63 (expression -> ID .)
    DIVIDE          reduce using rule 63 (expression -> ID .)
    MODULO          reduce using rule 63 (expression -> ID .)
    POWER           reduce using rule 63 (expression -> ID .)
    KHREJ           reduce using rule 63 (expression -> ID .)
    KMEL            reduce using rule 63 (expression -> ID .)
    ID              reduce using rule 63 (expression -> ID .)
    MOJOD           reduce using rule 63 (expression -> ID .)
    KTEB            reduce using rule 63 (expression -> ID .)
    INT             reduce using rule 63 (expression -> ID .)
    FLOAT           reduce using rule 63 (expression -> ID .)
    STRING          reduce using rule 63 (expression -> ID .)
    KHATE2          reduce using rule 63 (expression -> ID .)
    S7I7            reduce using rule 63 (expression -> ID .)
    WALO            reduce using rule 63 (expression -> ID .)
    JEREB           reduce using rule 63 (expression -> ID .)
    ILA             reduce using rule 63 (expression -> ID .)
    LKOLA           reduce using rule 63 (expression -> ID .)
    MA7ED           reduce using rule 63 (expression -> ID .)
    DIR             reduce using rule 63 (expression -> ID .)
    QRA             reduce using rule 63 (expression -> ID .)
    TOL             reduce using rule 63 (expression -> ID .)
    TA3RIF          reduce using rule 63 (expression -> ID .)
    RED             reduce using rule 63 (expression -> ID .)
    $end            reduce using rule 63 (expression -> ID .)
    ]               reduce using rule 63 (expression -> ID .)
    ,               reduce using rule 63 (expression -> ID .)
    }               reduce using rule 63 (expression -> ID .)
    ;               reduce using rule 63 (expression -> ID .)
    :               reduce using rule 63 (expression -> ID .)
    SUP             reduce using rule 63 (expression -> ID .)
    INF             reduce using rule 63 (expression -> ID .)
    EQUALSCOMP      reduce using rule 63 (expression -> ID .)
    SUPEQUALS       reduce using rule 63 (expression -> ID .)
    INFEQUALS       reduce using rule 63 (expression -> ID .)
    DIFFERENT       reduce using rule 63 (expression -> ID .)
    WA              reduce using rule 63 (expression -> ID .)
    AW              reduce using rule 63 (expression -> ID .)
    [               shift and go to state 62
    .               shift and go to state 59
    (               shift and go to state 60

  ! (               [ reduce using rule 63 (expression -> ID .) ]
  ! [               [ reduce using rule 63 (expression -> ID .) ]

    dimensions                     shift and go to state 61

state 70

    (75) expression -> arrayelt .

    )               reduce using rule 75 (expression -> arrayelt .)
    PLUS            reduce using rule 75 (expression -> arrayelt .)
    MINUS           reduce using rule 75 (expression -> arrayelt .)
    TIMES           reduce using rule 75 (expression -> arrayelt .)
    DIVIDE          reduce using rule 75 (expression -> arrayelt .)
    MODULO          reduce using rule 75 (expression -> arrayelt .)
    POWER           reduce using rule 75 (expression -> arrayelt .)
    KHREJ           reduce using rule 75 (expression -> arrayelt .)
    KMEL            reduce using rule 75 (expression -> arrayelt .)
    ID              reduce using rule 75 (expression -> arrayelt .)
    MOJOD           reduce using rule 75 (expression -> arrayelt .)
    KTEB            reduce using rule 75 (expression -> arrayelt .)
    (               reduce using rule 75 (expression -> arrayelt .)
    INT             reduce using rule 75 (expression -> arrayelt .)
    FLOAT           reduce using rule 75 (expression -> arrayelt .)
    STRING          reduce using rule 75 (expression -> arrayelt .)
    KHATE2          reduce using rule 75 (expression -> arrayelt .)
    S7I7            reduce using rule 75 (expression -> arrayelt .)
    WALO            reduce using rule 75 (expression -> arrayelt .)
    JEREB           reduce using rule 75 (expression -> arrayelt .)
    ILA             reduce using rule 75 (expression -> arrayelt .)
    LKOLA           reduce using rule 75 (expression -> arrayelt .)
    MA7ED           reduce using rule 75 (expression -> arrayelt .)
    DIR             reduce using rule 75 (expression -> arrayelt .)
    QRA             reduce using rule 75 (expression -> arrayelt .)
    TOL             reduce using rule 75 (expression -> arrayelt .)
    TA3RIF          reduce using rule 75 (expression -> arrayelt .)
    RED             reduce using rule 75 (expression -> arrayelt .)
    [               reduce using rule 75 (expression -> arrayelt .)
    $end            reduce using rule 75 (expression -> arrayelt .)
    ]               reduce using rule 75 (expression -> arrayelt .)
    ,               reduce using rule 75 (expression -> arrayelt .)
    }               reduce using rule 75 (expression -> arrayelt .)
    ;               reduce using rule 75 (expression -> arrayelt .)
    :               reduce using rule 75 (expression -> arrayelt .)
    SUP             reduce using rule 75 (expression -> arrayelt .)
    INF             reduce using rule 75 (expression -> arrayelt .)
    EQUALSCOMP      reduce using rule 75 (expression -> arrayelt .)
    SUPEQUALS       reduce using rule 75 (expression -> arrayelt .)
    INFEQUALS       reduce using rule 75 (expression -> arrayelt .)
    DIFFERENT       reduce using rule 75 (expression -> arrayelt .)
    WA              reduce using rule 75 (expression -> arrayelt .)
    AW              reduce using rule 75 (expression -> arrayelt .)


state 71

    (76) expression -> arrayslice .

    )               reduce using rule 76 (expression -> arrayslice .)
    PLUS            reduce using rule 76 (expression -> arrayslice .)
    MINUS           reduce using rule 76 (expression -> arrayslice .)
    TIMES           reduce using rule 76 (expression -> arrayslice .)
    DIVIDE          reduce using rule 76 (expression -> arrayslice .)
    MODULO          reduce using rule 76 (expression -> arrayslice .)
    POWER           reduce using rule 76 (expression -> arrayslice .)
    KHREJ           reduce using rule 76 (expression -> arrayslice .)
    KMEL            reduce using rule 76 (expression -> arrayslice .)
    ID              reduce using rule 76 (expression -> arrayslice .)
    MOJOD           reduce using rule 76 (expression -> arrayslice .)
    KTEB            reduce using rule 76 (expression -> arrayslice .)
    (               reduce using rule 76 (expression -> arrayslice .)
    INT             reduce using rule 76 (expression -> arrayslice .)
    FLOAT           reduce using rule 76 (expression -> arrayslice .)
    STRING          reduce using rule 76 (expression -> arrayslice .)
    KHATE2          reduce using rule 76 (expression -> arrayslice .)
    S7I7            reduce using rule 76 (expression -> arrayslice .)
    WALO            reduce using rule 76 (expression -> arrayslice .)
    JEREB           reduce using rule 76 (expression -> arrayslice .)
    ILA             reduce using rule 76 (expression -> arrayslice .)
    LKOLA           reduce using rule 76 (expression -> arrayslice .)
    MA7ED           reduce using rule 76 (expression -> arrayslice .)
    DIR             reduce using rule 76 (expression -> arrayslice .)
    QRA             reduce using rule 76 (expression -> arrayslice .)
    TOL             reduce using rule 76 (expression -> arrayslice .)
    TA3RIF          reduce using rule 76 (expression -> arrayslice .)
    RED             reduce using rule 76 (expression -> arrayslice .)
    [               reduce using rule 76 (expression -> arrayslice .)
    $end            reduce using rule 76 (expression -> arrayslice .)
    ]               reduce using rule 76 (expression -> arrayslice .)
    ,               reduce using rule 76 (expression -> arrayslice .)
    }               reduce using rule 76 (expression -> arrayslice .)
    ;               reduce using rule 76 (expression -> arrayslice .)
    :               reduce using rule 76 (expression -> arrayslice .)
    SUP             reduce using rule 76 (expression -> arrayslice .)
    INF             reduce using rule 76 (expression -> arrayslice .)
    EQUALSCOMP      reduce using rule 76 (expression -> arrayslice .)
    SUPEQUALS       reduce using rule 76 (expression -> arrayslice .)
    INFEQUALS       reduce using rule 76 (expression -> arrayslice .)
    DIFFERENT       reduce using rule 76 (expression -> arrayslice .)
    WA              reduce using rule 76 (expression -> arrayslice .)
    AW              reduce using rule 76 (expression -> arrayslice .)


state 72

    (77) expression -> arrfn .

    )               reduce using rule 77 (expression -> arrfn .)
    PLUS            reduce using rule 77 (expression -> arrfn .)
    MINUS           reduce using rule 77 (expression -> arrfn .)
    TIMES           reduce using rule 77 (expression -> arrfn .)
    DIVIDE          reduce using rule 77 (expression -> arrfn .)
    MODULO          reduce using rule 77 (expression -> arrfn .)
    POWER           reduce using rule 77 (expression -> arrfn .)
    KHREJ           reduce using rule 77 (expression -> arrfn .)
    KMEL            reduce using rule 77 (expression -> arrfn .)
    ID              reduce using rule 77 (expression -> arrfn .)
    MOJOD           reduce using rule 77 (expression -> arrfn .)
    KTEB            reduce using rule 77 (expression -> arrfn .)
    (               reduce using rule 77 (expression -> arrfn .)
    INT             reduce using rule 77 (expression -> arrfn .)
    FLOAT           reduce using rule 77 (expression -> arrfn .)
    STRING          reduce using rule 77 (expression -> arrfn .)
    KHATE2          reduce using rule 77 (expression -> arrfn .)
    S7I7            reduce using rule 77 (expression -> arrfn .)
    WALO            reduce using rule 77 (expression -> arrfn .)
    JEREB           reduce using rule 77 (expression -> arrfn .)
    ILA             reduce using rule 77 (expression -> arrfn .)
    LKOLA           reduce using rule 77 (expression -> arrfn .)
    MA7ED           reduce using rule 77 (expression -> arrfn .)
    DIR             reduce using rule 77 (expression -> arrfn .)
    QRA             reduce using rule 77 (expression -> arrfn .)
    TOL             reduce using rule 77 (expression -> arrfn .)
    TA3RIF          reduce using rule 77 (expression -> arrfn .)
    RED             reduce using rule 77 (expression -> arrfn .)
    [               reduce using rule 77 (expression -> arrfn .)
    $end            reduce using rule 77 (expression -> arrfn .)
    ]               reduce using rule 77 (expression -> arrfn .)
    ,               reduce using rule 77 (expression -> arrfn .)
    }               reduce using rule 77 (expression -> arrfn .)
    ;               reduce using rule 77 (expression -> arrfn .)
    :               reduce using rule 77 (expression -> arrfn .)
    SUP             reduce using rule 77 (expression -> arrfn .)
    INF             reduce using rule 77 (expression -> arrfn .)
    EQUALSCOMP      reduce using rule 77 (expression -> arrfn .)
    SUPEQUALS       reduce using rule 77 (expression -> arrfn .)
    INFEQUALS       reduce using rule 77 (expression -> arrfn .)
    DIFFERENT       reduce using rule 77 (expression -> arrfn .)
    WA              reduce using rule 77 (expression -> arrfn .)
    AW              reduce using rule 77 (expression -> arrfn .)


state 73

    (78) expression -> len .

    )               reduce using rule 78 (expression -> len .)
    PLUS            reduce using rule 78 (expression -> len .)
    MINUS           reduce using rule 78 (expression -> len .)
    TIMES           reduce using rule 78 (expression -> len .)
    DIVIDE          reduce using rule 78 (expression -> len .)
    MODULO          reduce using rule 78 (expression -> len .)
    POWER           reduce using rule 78 (expression -> len .)
    KHREJ           reduce using rule 78 (expression -> len .)
    KMEL            reduce using rule 78 (expression -> len .)
    ID              reduce using rule 78 (expression -> len .)
    MOJOD           reduce using rule 78 (expression -> len .)
    KTEB            reduce using rule 78 (expression -> len .)
    (               reduce using rule 78 (expression -> len .)
    INT             reduce using rule 78 (expression -> len .)
    FLOAT           reduce using rule 78 (expression -> len .)
    STRING          reduce using rule 78 (expression -> len .)
    KHATE2          reduce using rule 78 (expression -> len .)
    S7I7            reduce using rule 78 (expression -> len .)
    WALO            reduce using rule 78 (expression -> len .)
    JEREB           reduce using rule 78 (expression -> len .)
    ILA             reduce using rule 78 (expression -> len .)
    LKOLA           reduce using rule 78 (expression -> len .)
    MA7ED           reduce using rule 78 (expression -> len .)
    DIR             reduce using rule 78 (expression -> len .)
    QRA             reduce using rule 78 (expression -> len .)
    TOL             reduce using rule 78 (expression -> len .)
    TA3RIF          reduce using rule 78 (expression -> len .)
    RED             reduce using rule 78 (expression -> len .)
    [               reduce using rule 78 (expression -> len .)
    $end            reduce using rule 78 (expression -> len .)
    ]               reduce using rule 78 (expression -> len .)
    ,               reduce using rule 78 (expression -> len .)
    }               reduce using rule 78 (expression -> len .)
    ;               reduce using rule 78 (expression -> len .)
    :               reduce using rule 78 (expression -> len .)
    SUP             reduce using rule 78 (expression -> len .)
    INF             reduce using rule 78 (expression -> len .)
    EQUALSCOMP      reduce using rule 78 (expression -> len .)
    SUPEQUALS       reduce using rule 78 (expression -> len .)
    INFEQUALS       reduce using rule 78 (expression -> len .)
    DIFFERENT       reduce using rule 78 (expression -> len .)
    WA              reduce using rule 78 (expression -> len .)
    AW              reduce using rule 78 (expression -> len .)


state 74

    (62) expression -> PLUS expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    PLUS            reduce using rule 62 (expression -> PLUS expression .)
    MINUS           reduce using rule 62 (expression -> PLUS expression .)
    MODULO          reduce using rule 62 (expression -> PLUS expression .)
    POWER           reduce using rule 62 (expression -> PLUS expression .)
    KHREJ           reduce using rule 62 (expression -> PLUS expression .)
    KMEL            reduce using rule 62 (expression -> PLUS expression .)
    ID              reduce using rule 62 (expression -> PLUS expression .)
    MOJOD           reduce using rule 62 (expression -> PLUS expression .)
    KTEB            reduce using rule 62 (expression -> PLUS expression .)
    (               reduce using rule 62 (expression -> PLUS expression .)
    INT             reduce using rule 62 (expression -> PLUS expression .)
    FLOAT           reduce using rule 62 (expression -> PLUS expression .)
    STRING          reduce using rule 62 (expression -> PLUS expression .)
    KHATE2          reduce using rule 62 (expression -> PLUS expression .)
    S7I7            reduce using rule 62 (expression -> PLUS expression .)
    WALO            reduce using rule 62 (expression -> PLUS expression .)
    JEREB           reduce using rule 62 (expression -> PLUS expression .)
    ILA             reduce using rule 62 (expression -> PLUS expression .)
    LKOLA           reduce using rule 62 (expression -> PLUS expression .)
    MA7ED           reduce using rule 62 (expression -> PLUS expression .)
    DIR             reduce using rule 62 (expression -> PLUS expression .)
    QRA             reduce using rule 62 (expression -> PLUS expression .)
    TOL             reduce using rule 62 (expression -> PLUS expression .)
    TA3RIF          reduce using rule 62 (expression -> PLUS expression .)
    RED             reduce using rule 62 (expression -> PLUS expression .)
    [               reduce using rule 62 (expression -> PLUS expression .)
    $end            reduce using rule 62 (expression -> PLUS expression .)
    )               reduce using rule 62 (expression -> PLUS expression .)
    ]               reduce using rule 62 (expression -> PLUS expression .)
    ,               reduce using rule 62 (expression -> PLUS expression .)
    }               reduce using rule 62 (expression -> PLUS expression .)
    ;               reduce using rule 62 (expression -> PLUS expression .)
    :               reduce using rule 62 (expression -> PLUS expression .)
    SUP             reduce using rule 62 (expression -> PLUS expression .)
    INF             reduce using rule 62 (expression -> PLUS expression .)
    EQUALSCOMP      reduce using rule 62 (expression -> PLUS expression .)
    SUPEQUALS       reduce using rule 62 (expression -> PLUS expression .)
    INFEQUALS       reduce using rule 62 (expression -> PLUS expression .)
    DIFFERENT       reduce using rule 62 (expression -> PLUS expression .)
    WA              reduce using rule 62 (expression -> PLUS expression .)
    AW              reduce using rule 62 (expression -> PLUS expression .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53

  ! TIMES           [ reduce using rule 62 (expression -> PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 62 (expression -> PLUS expression .) ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 54 ]
  ! POWER           [ shift and go to state 55 ]


state 75

    (61) expression -> MINUS expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    PLUS            reduce using rule 61 (expression -> MINUS expression .)
    MINUS           reduce using rule 61 (expression -> MINUS expression .)
    MODULO          reduce using rule 61 (expression -> MINUS expression .)
    POWER           reduce using rule 61 (expression -> MINUS expression .)
    KHREJ           reduce using rule 61 (expression -> MINUS expression .)
    KMEL            reduce using rule 61 (expression -> MINUS expression .)
    ID              reduce using rule 61 (expression -> MINUS expression .)
    MOJOD           reduce using rule 61 (expression -> MINUS expression .)
    KTEB            reduce using rule 61 (expression -> MINUS expression .)
    (               reduce using rule 61 (expression -> MINUS expression .)
    INT             reduce using rule 61 (expression -> MINUS expression .)
    FLOAT           reduce using rule 61 (expression -> MINUS expression .)
    STRING          reduce using rule 61 (expression -> MINUS expression .)
    KHATE2          reduce using rule 61 (expression -> MINUS expression .)
    S7I7            reduce using rule 61 (expression -> MINUS expression .)
    WALO            reduce using rule 61 (expression -> MINUS expression .)
    JEREB           reduce using rule 61 (expression -> MINUS expression .)
    ILA             reduce using rule 61 (expression -> MINUS expression .)
    LKOLA           reduce using rule 61 (expression -> MINUS expression .)
    MA7ED           reduce using rule 61 (expression -> MINUS expression .)
    DIR             reduce using rule 61 (expression -> MINUS expression .)
    QRA             reduce using rule 61 (expression -> MINUS expression .)
    TOL             reduce using rule 61 (expression -> MINUS expression .)
    TA3RIF          reduce using rule 61 (expression -> MINUS expression .)
    RED             reduce using rule 61 (expression -> MINUS expression .)
    [               reduce using rule 61 (expression -> MINUS expression .)
    $end            reduce using rule 61 (expression -> MINUS expression .)
    )               reduce using rule 61 (expression -> MINUS expression .)
    ]               reduce using rule 61 (expression -> MINUS expression .)
    ,               reduce using rule 61 (expression -> MINUS expression .)
    }               reduce using rule 61 (expression -> MINUS expression .)
    ;               reduce using rule 61 (expression -> MINUS expression .)
    :               reduce using rule 61 (expression -> MINUS expression .)
    SUP             reduce using rule 61 (expression -> MINUS expression .)
    INF             reduce using rule 61 (expression -> MINUS expression .)
    EQUALSCOMP      reduce using rule 61 (expression -> MINUS expression .)
    SUPEQUALS       reduce using rule 61 (expression -> MINUS expression .)
    INFEQUALS       reduce using rule 61 (expression -> MINUS expression .)
    DIFFERENT       reduce using rule 61 (expression -> MINUS expression .)
    WA              reduce using rule 61 (expression -> MINUS expression .)
    AW              reduce using rule 61 (expression -> MINUS expression .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53

  ! TIMES           [ reduce using rule 61 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 54 ]
  ! POWER           [ shift and go to state 55 ]


state 76

    (66) try -> JEREB { . instruction_list } MASD9CH { instruction_list }
    (67) try -> JEREB { . instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction_list               shift and go to state 117
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 77

    (9) if -> ILA ( . condition ) { instruction_list }
    (10) if -> ILA ( . condition ) { instruction_list } WLA { instruction_list }
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 118
    expression                     shift and go to state 114
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 78

    (11) for -> LKOLA ( . var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> LKOLA ( . var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> LKOLA ( . expression ; condition ; incrementation ) { instruction_list }
    (14) for -> LKOLA ( . expression ; condition ; decrementation ) { instruction_list }
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    ID              shift and go to state 121
    MOJOD           shift and go to state 24
    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    var_assign                     shift and go to state 119
    expression                     shift and go to state 120
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 79

    (15) while -> MA7ED ( . condition ) { instruction_list }
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 122
    expression                     shift and go to state 114
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 80

    (16) doWhile -> DIR { . instruction_list } MA7ED ( condition )
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction_list               shift and go to state 123
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 81

    (64) input -> QRA ( . expression )
    (65) input -> QRA ( . )
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    )               shift and go to state 125
    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 124
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 82

    (111) len -> TOL ( . expression )
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 126
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 83

    (102) func -> TA3RIF ID . ( parameter_list ) { instruction_list }
    (103) func -> TA3RIF ID . ( ) { instruction_list }

    (               shift and go to state 127


state 84

    (106) return -> RED ( . expression )
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 128
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 85

    (82) array -> [ arraylist . ]
    (81) arraylist -> arraylist . , expression

    ]               shift and go to state 129
    ,               shift and go to state 130


state 86

    (83) array -> [ ] .

    PLUS            reduce using rule 83 (array -> [ ] .)
    MINUS           reduce using rule 83 (array -> [ ] .)
    TIMES           reduce using rule 83 (array -> [ ] .)
    DIVIDE          reduce using rule 83 (array -> [ ] .)
    MODULO          reduce using rule 83 (array -> [ ] .)
    POWER           reduce using rule 83 (array -> [ ] .)
    KHREJ           reduce using rule 83 (array -> [ ] .)
    KMEL            reduce using rule 83 (array -> [ ] .)
    ID              reduce using rule 83 (array -> [ ] .)
    MOJOD           reduce using rule 83 (array -> [ ] .)
    KTEB            reduce using rule 83 (array -> [ ] .)
    (               reduce using rule 83 (array -> [ ] .)
    INT             reduce using rule 83 (array -> [ ] .)
    FLOAT           reduce using rule 83 (array -> [ ] .)
    STRING          reduce using rule 83 (array -> [ ] .)
    KHATE2          reduce using rule 83 (array -> [ ] .)
    S7I7            reduce using rule 83 (array -> [ ] .)
    WALO            reduce using rule 83 (array -> [ ] .)
    JEREB           reduce using rule 83 (array -> [ ] .)
    ILA             reduce using rule 83 (array -> [ ] .)
    LKOLA           reduce using rule 83 (array -> [ ] .)
    MA7ED           reduce using rule 83 (array -> [ ] .)
    DIR             reduce using rule 83 (array -> [ ] .)
    QRA             reduce using rule 83 (array -> [ ] .)
    TOL             reduce using rule 83 (array -> [ ] .)
    TA3RIF          reduce using rule 83 (array -> [ ] .)
    RED             reduce using rule 83 (array -> [ ] .)
    [               reduce using rule 83 (array -> [ ] .)
    $end            reduce using rule 83 (array -> [ ] .)
    )               reduce using rule 83 (array -> [ ] .)
    ]               reduce using rule 83 (array -> [ ] .)
    ,               reduce using rule 83 (array -> [ ] .)
    }               reduce using rule 83 (array -> [ ] .)
    ;               reduce using rule 83 (array -> [ ] .)
    :               reduce using rule 83 (array -> [ ] .)
    SUP             reduce using rule 83 (array -> [ ] .)
    INF             reduce using rule 83 (array -> [ ] .)
    EQUALSCOMP      reduce using rule 83 (array -> [ ] .)
    SUPEQUALS       reduce using rule 83 (array -> [ ] .)
    INFEQUALS       reduce using rule 83 (array -> [ ] .)
    DIFFERENT       reduce using rule 83 (array -> [ ] .)
    WA              reduce using rule 83 (array -> [ ] .)
    AW              reduce using rule 83 (array -> [ ] .)


state 87

    (80) arraylist -> expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    ]               reduce using rule 80 (arraylist -> expression .)
    ,               reduce using rule 80 (arraylist -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 88

    (54) expression -> expression PLUS expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    PLUS            reduce using rule 54 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 54 (expression -> expression PLUS expression .)
    MODULO          reduce using rule 54 (expression -> expression PLUS expression .)
    POWER           reduce using rule 54 (expression -> expression PLUS expression .)
    KHREJ           reduce using rule 54 (expression -> expression PLUS expression .)
    KMEL            reduce using rule 54 (expression -> expression PLUS expression .)
    ID              reduce using rule 54 (expression -> expression PLUS expression .)
    MOJOD           reduce using rule 54 (expression -> expression PLUS expression .)
    KTEB            reduce using rule 54 (expression -> expression PLUS expression .)
    (               reduce using rule 54 (expression -> expression PLUS expression .)
    INT             reduce using rule 54 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 54 (expression -> expression PLUS expression .)
    STRING          reduce using rule 54 (expression -> expression PLUS expression .)
    KHATE2          reduce using rule 54 (expression -> expression PLUS expression .)
    S7I7            reduce using rule 54 (expression -> expression PLUS expression .)
    WALO            reduce using rule 54 (expression -> expression PLUS expression .)
    JEREB           reduce using rule 54 (expression -> expression PLUS expression .)
    ILA             reduce using rule 54 (expression -> expression PLUS expression .)
    LKOLA           reduce using rule 54 (expression -> expression PLUS expression .)
    MA7ED           reduce using rule 54 (expression -> expression PLUS expression .)
    DIR             reduce using rule 54 (expression -> expression PLUS expression .)
    QRA             reduce using rule 54 (expression -> expression PLUS expression .)
    TOL             reduce using rule 54 (expression -> expression PLUS expression .)
    TA3RIF          reduce using rule 54 (expression -> expression PLUS expression .)
    RED             reduce using rule 54 (expression -> expression PLUS expression .)
    [               reduce using rule 54 (expression -> expression PLUS expression .)
    $end            reduce using rule 54 (expression -> expression PLUS expression .)
    )               reduce using rule 54 (expression -> expression PLUS expression .)
    ]               reduce using rule 54 (expression -> expression PLUS expression .)
    ,               reduce using rule 54 (expression -> expression PLUS expression .)
    }               reduce using rule 54 (expression -> expression PLUS expression .)
    ;               reduce using rule 54 (expression -> expression PLUS expression .)
    :               reduce using rule 54 (expression -> expression PLUS expression .)
    SUP             reduce using rule 54 (expression -> expression PLUS expression .)
    INF             reduce using rule 54 (expression -> expression PLUS expression .)
    EQUALSCOMP      reduce using rule 54 (expression -> expression PLUS expression .)
    SUPEQUALS       reduce using rule 54 (expression -> expression PLUS expression .)
    INFEQUALS       reduce using rule 54 (expression -> expression PLUS expression .)
    DIFFERENT       reduce using rule 54 (expression -> expression PLUS expression .)
    WA              reduce using rule 54 (expression -> expression PLUS expression .)
    AW              reduce using rule 54 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53

  ! TIMES           [ reduce using rule 54 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 54 ]
  ! POWER           [ shift and go to state 55 ]


state 89

    (55) expression -> expression MINUS expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    PLUS            reduce using rule 55 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 55 (expression -> expression MINUS expression .)
    MODULO          reduce using rule 55 (expression -> expression MINUS expression .)
    POWER           reduce using rule 55 (expression -> expression MINUS expression .)
    KHREJ           reduce using rule 55 (expression -> expression MINUS expression .)
    KMEL            reduce using rule 55 (expression -> expression MINUS expression .)
    ID              reduce using rule 55 (expression -> expression MINUS expression .)
    MOJOD           reduce using rule 55 (expression -> expression MINUS expression .)
    KTEB            reduce using rule 55 (expression -> expression MINUS expression .)
    (               reduce using rule 55 (expression -> expression MINUS expression .)
    INT             reduce using rule 55 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 55 (expression -> expression MINUS expression .)
    STRING          reduce using rule 55 (expression -> expression MINUS expression .)
    KHATE2          reduce using rule 55 (expression -> expression MINUS expression .)
    S7I7            reduce using rule 55 (expression -> expression MINUS expression .)
    WALO            reduce using rule 55 (expression -> expression MINUS expression .)
    JEREB           reduce using rule 55 (expression -> expression MINUS expression .)
    ILA             reduce using rule 55 (expression -> expression MINUS expression .)
    LKOLA           reduce using rule 55 (expression -> expression MINUS expression .)
    MA7ED           reduce using rule 55 (expression -> expression MINUS expression .)
    DIR             reduce using rule 55 (expression -> expression MINUS expression .)
    QRA             reduce using rule 55 (expression -> expression MINUS expression .)
    TOL             reduce using rule 55 (expression -> expression MINUS expression .)
    TA3RIF          reduce using rule 55 (expression -> expression MINUS expression .)
    RED             reduce using rule 55 (expression -> expression MINUS expression .)
    [               reduce using rule 55 (expression -> expression MINUS expression .)
    $end            reduce using rule 55 (expression -> expression MINUS expression .)
    )               reduce using rule 55 (expression -> expression MINUS expression .)
    ]               reduce using rule 55 (expression -> expression MINUS expression .)
    ,               reduce using rule 55 (expression -> expression MINUS expression .)
    }               reduce using rule 55 (expression -> expression MINUS expression .)
    ;               reduce using rule 55 (expression -> expression MINUS expression .)
    :               reduce using rule 55 (expression -> expression MINUS expression .)
    SUP             reduce using rule 55 (expression -> expression MINUS expression .)
    INF             reduce using rule 55 (expression -> expression MINUS expression .)
    EQUALSCOMP      reduce using rule 55 (expression -> expression MINUS expression .)
    SUPEQUALS       reduce using rule 55 (expression -> expression MINUS expression .)
    INFEQUALS       reduce using rule 55 (expression -> expression MINUS expression .)
    DIFFERENT       reduce using rule 55 (expression -> expression MINUS expression .)
    WA              reduce using rule 55 (expression -> expression MINUS expression .)
    AW              reduce using rule 55 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53

  ! TIMES           [ reduce using rule 55 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 55 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 54 ]
  ! POWER           [ shift and go to state 55 ]


state 90

    (56) expression -> expression TIMES expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    PLUS            reduce using rule 56 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 56 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 56 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 56 (expression -> expression TIMES expression .)
    MODULO          reduce using rule 56 (expression -> expression TIMES expression .)
    POWER           reduce using rule 56 (expression -> expression TIMES expression .)
    KHREJ           reduce using rule 56 (expression -> expression TIMES expression .)
    KMEL            reduce using rule 56 (expression -> expression TIMES expression .)
    ID              reduce using rule 56 (expression -> expression TIMES expression .)
    MOJOD           reduce using rule 56 (expression -> expression TIMES expression .)
    KTEB            reduce using rule 56 (expression -> expression TIMES expression .)
    (               reduce using rule 56 (expression -> expression TIMES expression .)
    INT             reduce using rule 56 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 56 (expression -> expression TIMES expression .)
    STRING          reduce using rule 56 (expression -> expression TIMES expression .)
    KHATE2          reduce using rule 56 (expression -> expression TIMES expression .)
    S7I7            reduce using rule 56 (expression -> expression TIMES expression .)
    WALO            reduce using rule 56 (expression -> expression TIMES expression .)
    JEREB           reduce using rule 56 (expression -> expression TIMES expression .)
    ILA             reduce using rule 56 (expression -> expression TIMES expression .)
    LKOLA           reduce using rule 56 (expression -> expression TIMES expression .)
    MA7ED           reduce using rule 56 (expression -> expression TIMES expression .)
    DIR             reduce using rule 56 (expression -> expression TIMES expression .)
    QRA             reduce using rule 56 (expression -> expression TIMES expression .)
    TOL             reduce using rule 56 (expression -> expression TIMES expression .)
    TA3RIF          reduce using rule 56 (expression -> expression TIMES expression .)
    RED             reduce using rule 56 (expression -> expression TIMES expression .)
    [               reduce using rule 56 (expression -> expression TIMES expression .)
    $end            reduce using rule 56 (expression -> expression TIMES expression .)
    )               reduce using rule 56 (expression -> expression TIMES expression .)
    ]               reduce using rule 56 (expression -> expression TIMES expression .)
    ,               reduce using rule 56 (expression -> expression TIMES expression .)
    }               reduce using rule 56 (expression -> expression TIMES expression .)
    ;               reduce using rule 56 (expression -> expression TIMES expression .)
    :               reduce using rule 56 (expression -> expression TIMES expression .)
    SUP             reduce using rule 56 (expression -> expression TIMES expression .)
    INF             reduce using rule 56 (expression -> expression TIMES expression .)
    EQUALSCOMP      reduce using rule 56 (expression -> expression TIMES expression .)
    SUPEQUALS       reduce using rule 56 (expression -> expression TIMES expression .)
    INFEQUALS       reduce using rule 56 (expression -> expression TIMES expression .)
    DIFFERENT       reduce using rule 56 (expression -> expression TIMES expression .)
    WA              reduce using rule 56 (expression -> expression TIMES expression .)
    AW              reduce using rule 56 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! TIMES           [ shift and go to state 52 ]
  ! DIVIDE          [ shift and go to state 53 ]
  ! MODULO          [ shift and go to state 54 ]
  ! POWER           [ shift and go to state 55 ]


state 91

    (57) expression -> expression DIVIDE expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    PLUS            reduce using rule 57 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 57 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 57 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 57 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 57 (expression -> expression DIVIDE expression .)
    POWER           reduce using rule 57 (expression -> expression DIVIDE expression .)
    KHREJ           reduce using rule 57 (expression -> expression DIVIDE expression .)
    KMEL            reduce using rule 57 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 57 (expression -> expression DIVIDE expression .)
    MOJOD           reduce using rule 57 (expression -> expression DIVIDE expression .)
    KTEB            reduce using rule 57 (expression -> expression DIVIDE expression .)
    (               reduce using rule 57 (expression -> expression DIVIDE expression .)
    INT             reduce using rule 57 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 57 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 57 (expression -> expression DIVIDE expression .)
    KHATE2          reduce using rule 57 (expression -> expression DIVIDE expression .)
    S7I7            reduce using rule 57 (expression -> expression DIVIDE expression .)
    WALO            reduce using rule 57 (expression -> expression DIVIDE expression .)
    JEREB           reduce using rule 57 (expression -> expression DIVIDE expression .)
    ILA             reduce using rule 57 (expression -> expression DIVIDE expression .)
    LKOLA           reduce using rule 57 (expression -> expression DIVIDE expression .)
    MA7ED           reduce using rule 57 (expression -> expression DIVIDE expression .)
    DIR             reduce using rule 57 (expression -> expression DIVIDE expression .)
    QRA             reduce using rule 57 (expression -> expression DIVIDE expression .)
    TOL             reduce using rule 57 (expression -> expression DIVIDE expression .)
    TA3RIF          reduce using rule 57 (expression -> expression DIVIDE expression .)
    RED             reduce using rule 57 (expression -> expression DIVIDE expression .)
    [               reduce using rule 57 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 57 (expression -> expression DIVIDE expression .)
    )               reduce using rule 57 (expression -> expression DIVIDE expression .)
    ]               reduce using rule 57 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 57 (expression -> expression DIVIDE expression .)
    }               reduce using rule 57 (expression -> expression DIVIDE expression .)
    ;               reduce using rule 57 (expression -> expression DIVIDE expression .)
    :               reduce using rule 57 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 57 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 57 (expression -> expression DIVIDE expression .)
    EQUALSCOMP      reduce using rule 57 (expression -> expression DIVIDE expression .)
    SUPEQUALS       reduce using rule 57 (expression -> expression DIVIDE expression .)
    INFEQUALS       reduce using rule 57 (expression -> expression DIVIDE expression .)
    DIFFERENT       reduce using rule 57 (expression -> expression DIVIDE expression .)
    WA              reduce using rule 57 (expression -> expression DIVIDE expression .)
    AW              reduce using rule 57 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 51 ]
  ! TIMES           [ shift and go to state 52 ]
  ! DIVIDE          [ shift and go to state 53 ]
  ! MODULO          [ shift and go to state 54 ]
  ! POWER           [ shift and go to state 55 ]


state 92

    (58) expression -> expression MODULO expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    KHREJ           reduce using rule 58 (expression -> expression MODULO expression .)
    KMEL            reduce using rule 58 (expression -> expression MODULO expression .)
    ID              reduce using rule 58 (expression -> expression MODULO expression .)
    MOJOD           reduce using rule 58 (expression -> expression MODULO expression .)
    KTEB            reduce using rule 58 (expression -> expression MODULO expression .)
    (               reduce using rule 58 (expression -> expression MODULO expression .)
    INT             reduce using rule 58 (expression -> expression MODULO expression .)
    FLOAT           reduce using rule 58 (expression -> expression MODULO expression .)
    STRING          reduce using rule 58 (expression -> expression MODULO expression .)
    KHATE2          reduce using rule 58 (expression -> expression MODULO expression .)
    S7I7            reduce using rule 58 (expression -> expression MODULO expression .)
    WALO            reduce using rule 58 (expression -> expression MODULO expression .)
    JEREB           reduce using rule 58 (expression -> expression MODULO expression .)
    ILA             reduce using rule 58 (expression -> expression MODULO expression .)
    LKOLA           reduce using rule 58 (expression -> expression MODULO expression .)
    MA7ED           reduce using rule 58 (expression -> expression MODULO expression .)
    DIR             reduce using rule 58 (expression -> expression MODULO expression .)
    QRA             reduce using rule 58 (expression -> expression MODULO expression .)
    TOL             reduce using rule 58 (expression -> expression MODULO expression .)
    TA3RIF          reduce using rule 58 (expression -> expression MODULO expression .)
    RED             reduce using rule 58 (expression -> expression MODULO expression .)
    [               reduce using rule 58 (expression -> expression MODULO expression .)
    $end            reduce using rule 58 (expression -> expression MODULO expression .)
    )               reduce using rule 58 (expression -> expression MODULO expression .)
    ]               reduce using rule 58 (expression -> expression MODULO expression .)
    ,               reduce using rule 58 (expression -> expression MODULO expression .)
    }               reduce using rule 58 (expression -> expression MODULO expression .)
    ;               reduce using rule 58 (expression -> expression MODULO expression .)
    :               reduce using rule 58 (expression -> expression MODULO expression .)
    SUP             reduce using rule 58 (expression -> expression MODULO expression .)
    INF             reduce using rule 58 (expression -> expression MODULO expression .)
    EQUALSCOMP      reduce using rule 58 (expression -> expression MODULO expression .)
    SUPEQUALS       reduce using rule 58 (expression -> expression MODULO expression .)
    INFEQUALS       reduce using rule 58 (expression -> expression MODULO expression .)
    DIFFERENT       reduce using rule 58 (expression -> expression MODULO expression .)
    WA              reduce using rule 58 (expression -> expression MODULO expression .)
    AW              reduce using rule 58 (expression -> expression MODULO expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! PLUS            [ reduce using rule 58 (expression -> expression MODULO expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression MODULO expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> expression MODULO expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression -> expression MODULO expression .) ]
  ! MODULO          [ reduce using rule 58 (expression -> expression MODULO expression .) ]
  ! POWER           [ reduce using rule 58 (expression -> expression MODULO expression .) ]


state 93

    (59) expression -> expression POWER expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    KHREJ           reduce using rule 59 (expression -> expression POWER expression .)
    KMEL            reduce using rule 59 (expression -> expression POWER expression .)
    ID              reduce using rule 59 (expression -> expression POWER expression .)
    MOJOD           reduce using rule 59 (expression -> expression POWER expression .)
    KTEB            reduce using rule 59 (expression -> expression POWER expression .)
    (               reduce using rule 59 (expression -> expression POWER expression .)
    INT             reduce using rule 59 (expression -> expression POWER expression .)
    FLOAT           reduce using rule 59 (expression -> expression POWER expression .)
    STRING          reduce using rule 59 (expression -> expression POWER expression .)
    KHATE2          reduce using rule 59 (expression -> expression POWER expression .)
    S7I7            reduce using rule 59 (expression -> expression POWER expression .)
    WALO            reduce using rule 59 (expression -> expression POWER expression .)
    JEREB           reduce using rule 59 (expression -> expression POWER expression .)
    ILA             reduce using rule 59 (expression -> expression POWER expression .)
    LKOLA           reduce using rule 59 (expression -> expression POWER expression .)
    MA7ED           reduce using rule 59 (expression -> expression POWER expression .)
    DIR             reduce using rule 59 (expression -> expression POWER expression .)
    QRA             reduce using rule 59 (expression -> expression POWER expression .)
    TOL             reduce using rule 59 (expression -> expression POWER expression .)
    TA3RIF          reduce using rule 59 (expression -> expression POWER expression .)
    RED             reduce using rule 59 (expression -> expression POWER expression .)
    [               reduce using rule 59 (expression -> expression POWER expression .)
    $end            reduce using rule 59 (expression -> expression POWER expression .)
    )               reduce using rule 59 (expression -> expression POWER expression .)
    ]               reduce using rule 59 (expression -> expression POWER expression .)
    ,               reduce using rule 59 (expression -> expression POWER expression .)
    }               reduce using rule 59 (expression -> expression POWER expression .)
    ;               reduce using rule 59 (expression -> expression POWER expression .)
    :               reduce using rule 59 (expression -> expression POWER expression .)
    SUP             reduce using rule 59 (expression -> expression POWER expression .)
    INF             reduce using rule 59 (expression -> expression POWER expression .)
    EQUALSCOMP      reduce using rule 59 (expression -> expression POWER expression .)
    SUPEQUALS       reduce using rule 59 (expression -> expression POWER expression .)
    INFEQUALS       reduce using rule 59 (expression -> expression POWER expression .)
    DIFFERENT       reduce using rule 59 (expression -> expression POWER expression .)
    WA              reduce using rule 59 (expression -> expression POWER expression .)
    AW              reduce using rule 59 (expression -> expression POWER expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! PLUS            [ reduce using rule 59 (expression -> expression POWER expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression POWER expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression POWER expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression POWER expression .) ]
  ! MODULO          [ reduce using rule 59 (expression -> expression POWER expression .) ]
  ! POWER           [ reduce using rule 59 (expression -> expression POWER expression .) ]


state 94

    (4) var_assign -> ID EQUALS expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KMEL            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ID              reduce using rule 4 (var_assign -> ID EQUALS expression .)
    MOJOD           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KTEB            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    (               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    INT             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    FLOAT           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    STRING          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KHATE2          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    S7I7            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    WALO            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    JEREB           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ILA             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    LKOLA           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    MA7ED           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    DIR             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    QRA             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    TOL             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    TA3RIF          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    RED             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    [               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    $end            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    }               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ;               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! MINUS           [ reduce using rule 4 (var_assign -> ID EQUALS expression .) ]
  ! PLUS            [ reduce using rule 4 (var_assign -> ID EQUALS expression .) ]


state 95

    (5) var_assign -> ID EQUALS input .

    KHREJ           reduce using rule 5 (var_assign -> ID EQUALS input .)
    KMEL            reduce using rule 5 (var_assign -> ID EQUALS input .)
    ID              reduce using rule 5 (var_assign -> ID EQUALS input .)
    MOJOD           reduce using rule 5 (var_assign -> ID EQUALS input .)
    KTEB            reduce using rule 5 (var_assign -> ID EQUALS input .)
    (               reduce using rule 5 (var_assign -> ID EQUALS input .)
    MINUS           reduce using rule 5 (var_assign -> ID EQUALS input .)
    PLUS            reduce using rule 5 (var_assign -> ID EQUALS input .)
    INT             reduce using rule 5 (var_assign -> ID EQUALS input .)
    FLOAT           reduce using rule 5 (var_assign -> ID EQUALS input .)
    STRING          reduce using rule 5 (var_assign -> ID EQUALS input .)
    KHATE2          reduce using rule 5 (var_assign -> ID EQUALS input .)
    S7I7            reduce using rule 5 (var_assign -> ID EQUALS input .)
    WALO            reduce using rule 5 (var_assign -> ID EQUALS input .)
    JEREB           reduce using rule 5 (var_assign -> ID EQUALS input .)
    ILA             reduce using rule 5 (var_assign -> ID EQUALS input .)
    LKOLA           reduce using rule 5 (var_assign -> ID EQUALS input .)
    MA7ED           reduce using rule 5 (var_assign -> ID EQUALS input .)
    DIR             reduce using rule 5 (var_assign -> ID EQUALS input .)
    QRA             reduce using rule 5 (var_assign -> ID EQUALS input .)
    TOL             reduce using rule 5 (var_assign -> ID EQUALS input .)
    TA3RIF          reduce using rule 5 (var_assign -> ID EQUALS input .)
    RED             reduce using rule 5 (var_assign -> ID EQUALS input .)
    [               reduce using rule 5 (var_assign -> ID EQUALS input .)
    $end            reduce using rule 5 (var_assign -> ID EQUALS input .)
    }               reduce using rule 5 (var_assign -> ID EQUALS input .)
    ;               reduce using rule 5 (var_assign -> ID EQUALS input .)


state 96

    (91) arrfn -> ID . ZID . ( expression )

    (               shift and go to state 131


state 97

    (92) arrfn -> ID . KBER . ( array )

    (               shift and go to state 132


state 98

    (93) arrfn -> ID . KHWI . ( )

    (               shift and go to state 133


state 99

    (94) arrfn -> ID . DKHEL . ( expression , expression )

    (               shift and go to state 134


state 100

    (95) arrfn -> ID . MSSE7 . ( expression )
    (96) arrfn -> ID . MSSE7 . ( )

    (               shift and go to state 135


state 101

    (104) appel_func -> ID ( argument_list . )
    (98) argument_list -> argument_list . , expression

    )               shift and go to state 136
    ,               shift and go to state 137


state 102

    (105) appel_func -> ID ( ) .

    PLUS            reduce using rule 105 (appel_func -> ID ( ) .)
    MINUS           reduce using rule 105 (appel_func -> ID ( ) .)
    TIMES           reduce using rule 105 (appel_func -> ID ( ) .)
    DIVIDE          reduce using rule 105 (appel_func -> ID ( ) .)
    MODULO          reduce using rule 105 (appel_func -> ID ( ) .)
    POWER           reduce using rule 105 (appel_func -> ID ( ) .)
    KHREJ           reduce using rule 105 (appel_func -> ID ( ) .)
    KMEL            reduce using rule 105 (appel_func -> ID ( ) .)
    ID              reduce using rule 105 (appel_func -> ID ( ) .)
    MOJOD           reduce using rule 105 (appel_func -> ID ( ) .)
    KTEB            reduce using rule 105 (appel_func -> ID ( ) .)
    (               reduce using rule 105 (appel_func -> ID ( ) .)
    INT             reduce using rule 105 (appel_func -> ID ( ) .)
    FLOAT           reduce using rule 105 (appel_func -> ID ( ) .)
    STRING          reduce using rule 105 (appel_func -> ID ( ) .)
    KHATE2          reduce using rule 105 (appel_func -> ID ( ) .)
    S7I7            reduce using rule 105 (appel_func -> ID ( ) .)
    WALO            reduce using rule 105 (appel_func -> ID ( ) .)
    JEREB           reduce using rule 105 (appel_func -> ID ( ) .)
    ILA             reduce using rule 105 (appel_func -> ID ( ) .)
    LKOLA           reduce using rule 105 (appel_func -> ID ( ) .)
    MA7ED           reduce using rule 105 (appel_func -> ID ( ) .)
    DIR             reduce using rule 105 (appel_func -> ID ( ) .)
    QRA             reduce using rule 105 (appel_func -> ID ( ) .)
    TOL             reduce using rule 105 (appel_func -> ID ( ) .)
    TA3RIF          reduce using rule 105 (appel_func -> ID ( ) .)
    RED             reduce using rule 105 (appel_func -> ID ( ) .)
    [               reduce using rule 105 (appel_func -> ID ( ) .)
    $end            reduce using rule 105 (appel_func -> ID ( ) .)
    )               reduce using rule 105 (appel_func -> ID ( ) .)
    ]               reduce using rule 105 (appel_func -> ID ( ) .)
    ,               reduce using rule 105 (appel_func -> ID ( ) .)
    }               reduce using rule 105 (appel_func -> ID ( ) .)
    ;               reduce using rule 105 (appel_func -> ID ( ) .)
    :               reduce using rule 105 (appel_func -> ID ( ) .)
    SUP             reduce using rule 105 (appel_func -> ID ( ) .)
    INF             reduce using rule 105 (appel_func -> ID ( ) .)
    EQUALSCOMP      reduce using rule 105 (appel_func -> ID ( ) .)
    SUPEQUALS       reduce using rule 105 (appel_func -> ID ( ) .)
    INFEQUALS       reduce using rule 105 (appel_func -> ID ( ) .)
    DIFFERENT       reduce using rule 105 (appel_func -> ID ( ) .)
    WA              reduce using rule 105 (appel_func -> ID ( ) .)
    AW              reduce using rule 105 (appel_func -> ID ( ) .)


state 103

    (97) argument_list -> expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               reduce using rule 97 (argument_list -> expression .)
    ,               reduce using rule 97 (argument_list -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 104

    (86) dimensions -> dimensions [ . expression ]
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 138
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 105

    (87) arrayslice -> ID [ expression . : expression ]
    (89) arrayslice -> ID [ expression . : ]
    (85) dimensions -> [ expression . ]
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    :               shift and go to state 139
    ]               shift and go to state 140
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 106

    (88) arrayslice -> ID [ : . expression ]
    (90) arrayslice -> ID [ : . ]
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    ]               shift and go to state 142
    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 141
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 107

    (7) arrayelt_assign -> arrayelt EQUALS expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    KMEL            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    ID              reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    MOJOD           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    KTEB            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    (               reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    INT             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    FLOAT           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    STRING          reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    KHATE2          reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    S7I7            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    WALO            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    JEREB           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    ILA             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    LKOLA           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    MA7ED           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    DIR             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    QRA             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    TOL             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    TA3RIF          reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    RED             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    [               reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    $end            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    }               reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! MINUS           [ reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .) ]
  ! PLUS            [ reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .) ]


state 108

    (8) arrayelt_assign -> arrayslice EQUALS expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    KMEL            reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    ID              reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    MOJOD           reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    KTEB            reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    (               reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    INT             reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    FLOAT           reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    STRING          reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    KHATE2          reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    S7I7            reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    WALO            reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    JEREB           reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    ILA             reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    LKOLA           reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    MA7ED           reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    DIR             reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    QRA             reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    TOL             reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    TA3RIF          reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    RED             reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    [               reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    $end            reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    }               reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! MINUS           [ reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .) ]
  ! PLUS            [ reduce using rule 8 (arrayelt_assign -> arrayslice EQUALS expression .) ]


state 109

    (38) condition -> ( . condition ) AW ( condition )
    (39) condition -> ( . condition ) WA ( condition )
    (42) condition -> ( . condition ) WA condition
    (43) condition -> ( . condition ) AW condition
    (60) expression -> ( . expression )
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 143
    expression                     shift and go to state 144
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 110

    (107) printing -> KTEB ( condition . )
    (110) printing -> KTEB ( condition . , condition )
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               shift and go to state 145
    ,               shift and go to state 146
    WA              shift and go to state 147
    AW              shift and go to state 148


state 111

    (108) printing -> KTEB ( incrementation . )

    )               shift and go to state 149


state 112

    (109) printing -> KTEB ( decrementation . )

    )               shift and go to state 150


state 113

    (46) condition -> L3AKSS . ( condition )

    (               shift and go to state 151


state 114

    (47) condition -> expression . SUP expression
    (48) condition -> expression . INF expression
    (49) condition -> expression . EQUALSCOMP expression
    (50) condition -> expression . SUPEQUALS expression
    (51) condition -> expression . INFEQUALS expression
    (52) condition -> expression . DIFFERENT expression
    (53) condition -> expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    SUP             shift and go to state 152
    INF             shift and go to state 153
    EQUALSCOMP      shift and go to state 154
    SUPEQUALS       shift and go to state 155
    INFEQUALS       shift and go to state 156
    DIFFERENT       shift and go to state 157
    )               reduce using rule 53 (condition -> expression .)
    ,               reduce using rule 53 (condition -> expression .)
    WA              reduce using rule 53 (condition -> expression .)
    AW              reduce using rule 53 (condition -> expression .)
    ;               reduce using rule 53 (condition -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 115

    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION
    (63) expression -> ID .
    (84) arrayelt -> ID . dimensions
    (87) arrayslice -> ID . [ expression : expression ]
    (88) arrayslice -> ID . [ : expression ]
    (89) arrayslice -> ID . [ expression : ]
    (90) arrayslice -> ID . [ : ]
    (91) arrfn -> ID . . ZID ( expression )
    (92) arrfn -> ID . . KBER ( array )
    (93) arrfn -> ID . . KHWI ( )
    (94) arrfn -> ID . . DKHEL ( expression , expression )
    (95) arrfn -> ID . . MSSE7 ( expression )
    (96) arrfn -> ID . . MSSE7 ( )
    (104) appel_func -> ID . ( argument_list )
    (105) appel_func -> ID . ( )
    (85) dimensions -> . [ expression ]
    (86) dimensions -> . dimensions [ expression ]

    INCREMENTATION  shift and go to state 57
    DECREMENTATION  shift and go to state 58
    SUP             reduce using rule 63 (expression -> ID .)
    INF             reduce using rule 63 (expression -> ID .)
    EQUALSCOMP      reduce using rule 63 (expression -> ID .)
    SUPEQUALS       reduce using rule 63 (expression -> ID .)
    INFEQUALS       reduce using rule 63 (expression -> ID .)
    DIFFERENT       reduce using rule 63 (expression -> ID .)
    PLUS            reduce using rule 63 (expression -> ID .)
    MINUS           reduce using rule 63 (expression -> ID .)
    TIMES           reduce using rule 63 (expression -> ID .)
    DIVIDE          reduce using rule 63 (expression -> ID .)
    MODULO          reduce using rule 63 (expression -> ID .)
    POWER           reduce using rule 63 (expression -> ID .)
    )               reduce using rule 63 (expression -> ID .)
    ,               reduce using rule 63 (expression -> ID .)
    WA              reduce using rule 63 (expression -> ID .)
    AW              reduce using rule 63 (expression -> ID .)
    [               shift and go to state 62
    .               shift and go to state 59
    (               shift and go to state 60

    dimensions                     shift and go to state 61

state 116

    (60) expression -> ( expression ) .

    PLUS            reduce using rule 60 (expression -> ( expression ) .)
    MINUS           reduce using rule 60 (expression -> ( expression ) .)
    TIMES           reduce using rule 60 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 60 (expression -> ( expression ) .)
    MODULO          reduce using rule 60 (expression -> ( expression ) .)
    POWER           reduce using rule 60 (expression -> ( expression ) .)
    KHREJ           reduce using rule 60 (expression -> ( expression ) .)
    KMEL            reduce using rule 60 (expression -> ( expression ) .)
    ID              reduce using rule 60 (expression -> ( expression ) .)
    MOJOD           reduce using rule 60 (expression -> ( expression ) .)
    KTEB            reduce using rule 60 (expression -> ( expression ) .)
    (               reduce using rule 60 (expression -> ( expression ) .)
    INT             reduce using rule 60 (expression -> ( expression ) .)
    FLOAT           reduce using rule 60 (expression -> ( expression ) .)
    STRING          reduce using rule 60 (expression -> ( expression ) .)
    KHATE2          reduce using rule 60 (expression -> ( expression ) .)
    S7I7            reduce using rule 60 (expression -> ( expression ) .)
    WALO            reduce using rule 60 (expression -> ( expression ) .)
    JEREB           reduce using rule 60 (expression -> ( expression ) .)
    ILA             reduce using rule 60 (expression -> ( expression ) .)
    LKOLA           reduce using rule 60 (expression -> ( expression ) .)
    MA7ED           reduce using rule 60 (expression -> ( expression ) .)
    DIR             reduce using rule 60 (expression -> ( expression ) .)
    QRA             reduce using rule 60 (expression -> ( expression ) .)
    TOL             reduce using rule 60 (expression -> ( expression ) .)
    TA3RIF          reduce using rule 60 (expression -> ( expression ) .)
    RED             reduce using rule 60 (expression -> ( expression ) .)
    [               reduce using rule 60 (expression -> ( expression ) .)
    $end            reduce using rule 60 (expression -> ( expression ) .)
    )               reduce using rule 60 (expression -> ( expression ) .)
    ]               reduce using rule 60 (expression -> ( expression ) .)
    ,               reduce using rule 60 (expression -> ( expression ) .)
    }               reduce using rule 60 (expression -> ( expression ) .)
    ;               reduce using rule 60 (expression -> ( expression ) .)
    :               reduce using rule 60 (expression -> ( expression ) .)
    SUP             reduce using rule 60 (expression -> ( expression ) .)
    INF             reduce using rule 60 (expression -> ( expression ) .)
    EQUALSCOMP      reduce using rule 60 (expression -> ( expression ) .)
    SUPEQUALS       reduce using rule 60 (expression -> ( expression ) .)
    INFEQUALS       reduce using rule 60 (expression -> ( expression ) .)
    DIFFERENT       reduce using rule 60 (expression -> ( expression ) .)
    WA              reduce using rule 60 (expression -> ( expression ) .)
    AW              reduce using rule 60 (expression -> ( expression ) .)


state 117

    (66) try -> JEREB { instruction_list . } MASD9CH { instruction_list }
    (67) try -> JEREB { instruction_list . } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 158
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 118

    (9) if -> ILA ( condition . ) { instruction_list }
    (10) if -> ILA ( condition . ) { instruction_list } WLA { instruction_list }
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               shift and go to state 159
    WA              shift and go to state 147
    AW              shift and go to state 148


state 119

    (11) for -> LKOLA ( var_assign . ; condition ; incrementation ) { instruction_list }
    (12) for -> LKOLA ( var_assign . ; condition ; decrementation ) { instruction_list }

    ;               shift and go to state 160


state 120

    (13) for -> LKOLA ( expression . ; condition ; incrementation ) { instruction_list }
    (14) for -> LKOLA ( expression . ; condition ; decrementation ) { instruction_list }
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    ;               shift and go to state 161
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 121

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input
    (63) expression -> ID .
    (84) arrayelt -> ID . dimensions
    (87) arrayslice -> ID . [ expression : expression ]
    (88) arrayslice -> ID . [ : expression ]
    (89) arrayslice -> ID . [ expression : ]
    (90) arrayslice -> ID . [ : ]
    (91) arrfn -> ID . . ZID ( expression )
    (92) arrfn -> ID . . KBER ( array )
    (93) arrfn -> ID . . KHWI ( )
    (94) arrfn -> ID . . DKHEL ( expression , expression )
    (95) arrfn -> ID . . MSSE7 ( expression )
    (96) arrfn -> ID . . MSSE7 ( )
    (104) appel_func -> ID . ( argument_list )
    (105) appel_func -> ID . ( )
    (85) dimensions -> . [ expression ]
    (86) dimensions -> . dimensions [ expression ]

    EQUALS          shift and go to state 56
    ;               reduce using rule 63 (expression -> ID .)
    PLUS            reduce using rule 63 (expression -> ID .)
    MINUS           reduce using rule 63 (expression -> ID .)
    TIMES           reduce using rule 63 (expression -> ID .)
    DIVIDE          reduce using rule 63 (expression -> ID .)
    MODULO          reduce using rule 63 (expression -> ID .)
    POWER           reduce using rule 63 (expression -> ID .)
    [               shift and go to state 62
    .               shift and go to state 59
    (               shift and go to state 60

    dimensions                     shift and go to state 61

state 122

    (15) while -> MA7ED ( condition . ) { instruction_list }
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               shift and go to state 162
    WA              shift and go to state 147
    AW              shift and go to state 148


state 123

    (16) doWhile -> DIR { instruction_list . } MA7ED ( condition )
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 163
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 124

    (64) input -> QRA ( expression . )
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               shift and go to state 164
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 125

    (65) input -> QRA ( ) .

    KHREJ           reduce using rule 65 (input -> QRA ( ) .)
    KMEL            reduce using rule 65 (input -> QRA ( ) .)
    ID              reduce using rule 65 (input -> QRA ( ) .)
    MOJOD           reduce using rule 65 (input -> QRA ( ) .)
    KTEB            reduce using rule 65 (input -> QRA ( ) .)
    (               reduce using rule 65 (input -> QRA ( ) .)
    MINUS           reduce using rule 65 (input -> QRA ( ) .)
    PLUS            reduce using rule 65 (input -> QRA ( ) .)
    INT             reduce using rule 65 (input -> QRA ( ) .)
    FLOAT           reduce using rule 65 (input -> QRA ( ) .)
    STRING          reduce using rule 65 (input -> QRA ( ) .)
    KHATE2          reduce using rule 65 (input -> QRA ( ) .)
    S7I7            reduce using rule 65 (input -> QRA ( ) .)
    WALO            reduce using rule 65 (input -> QRA ( ) .)
    JEREB           reduce using rule 65 (input -> QRA ( ) .)
    ILA             reduce using rule 65 (input -> QRA ( ) .)
    LKOLA           reduce using rule 65 (input -> QRA ( ) .)
    MA7ED           reduce using rule 65 (input -> QRA ( ) .)
    DIR             reduce using rule 65 (input -> QRA ( ) .)
    QRA             reduce using rule 65 (input -> QRA ( ) .)
    TOL             reduce using rule 65 (input -> QRA ( ) .)
    TA3RIF          reduce using rule 65 (input -> QRA ( ) .)
    RED             reduce using rule 65 (input -> QRA ( ) .)
    [               reduce using rule 65 (input -> QRA ( ) .)
    $end            reduce using rule 65 (input -> QRA ( ) .)
    }               reduce using rule 65 (input -> QRA ( ) .)
    ;               reduce using rule 65 (input -> QRA ( ) .)


state 126

    (111) len -> TOL ( expression . )
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               shift and go to state 165
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 127

    (102) func -> TA3RIF ID ( . parameter_list ) { instruction_list }
    (103) func -> TA3RIF ID ( . ) { instruction_list }
    (100) parameter_list -> . parameter
    (101) parameter_list -> . parameter_list , parameter
    (99) parameter -> . ID

    )               shift and go to state 168
    ID              shift and go to state 166

    parameter_list                 shift and go to state 167
    parameter                      shift and go to state 169

state 128

    (106) return -> RED ( expression . )
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               shift and go to state 170
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 129

    (82) array -> [ arraylist ] .

    PLUS            reduce using rule 82 (array -> [ arraylist ] .)
    MINUS           reduce using rule 82 (array -> [ arraylist ] .)
    TIMES           reduce using rule 82 (array -> [ arraylist ] .)
    DIVIDE          reduce using rule 82 (array -> [ arraylist ] .)
    MODULO          reduce using rule 82 (array -> [ arraylist ] .)
    POWER           reduce using rule 82 (array -> [ arraylist ] .)
    KHREJ           reduce using rule 82 (array -> [ arraylist ] .)
    KMEL            reduce using rule 82 (array -> [ arraylist ] .)
    ID              reduce using rule 82 (array -> [ arraylist ] .)
    MOJOD           reduce using rule 82 (array -> [ arraylist ] .)
    KTEB            reduce using rule 82 (array -> [ arraylist ] .)
    (               reduce using rule 82 (array -> [ arraylist ] .)
    INT             reduce using rule 82 (array -> [ arraylist ] .)
    FLOAT           reduce using rule 82 (array -> [ arraylist ] .)
    STRING          reduce using rule 82 (array -> [ arraylist ] .)
    KHATE2          reduce using rule 82 (array -> [ arraylist ] .)
    S7I7            reduce using rule 82 (array -> [ arraylist ] .)
    WALO            reduce using rule 82 (array -> [ arraylist ] .)
    JEREB           reduce using rule 82 (array -> [ arraylist ] .)
    ILA             reduce using rule 82 (array -> [ arraylist ] .)
    LKOLA           reduce using rule 82 (array -> [ arraylist ] .)
    MA7ED           reduce using rule 82 (array -> [ arraylist ] .)
    DIR             reduce using rule 82 (array -> [ arraylist ] .)
    QRA             reduce using rule 82 (array -> [ arraylist ] .)
    TOL             reduce using rule 82 (array -> [ arraylist ] .)
    TA3RIF          reduce using rule 82 (array -> [ arraylist ] .)
    RED             reduce using rule 82 (array -> [ arraylist ] .)
    [               reduce using rule 82 (array -> [ arraylist ] .)
    $end            reduce using rule 82 (array -> [ arraylist ] .)
    )               reduce using rule 82 (array -> [ arraylist ] .)
    ]               reduce using rule 82 (array -> [ arraylist ] .)
    ,               reduce using rule 82 (array -> [ arraylist ] .)
    }               reduce using rule 82 (array -> [ arraylist ] .)
    ;               reduce using rule 82 (array -> [ arraylist ] .)
    :               reduce using rule 82 (array -> [ arraylist ] .)
    SUP             reduce using rule 82 (array -> [ arraylist ] .)
    INF             reduce using rule 82 (array -> [ arraylist ] .)
    EQUALSCOMP      reduce using rule 82 (array -> [ arraylist ] .)
    SUPEQUALS       reduce using rule 82 (array -> [ arraylist ] .)
    INFEQUALS       reduce using rule 82 (array -> [ arraylist ] .)
    DIFFERENT       reduce using rule 82 (array -> [ arraylist ] .)
    WA              reduce using rule 82 (array -> [ arraylist ] .)
    AW              reduce using rule 82 (array -> [ arraylist ] .)


state 130

    (81) arraylist -> arraylist , . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 171
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 131

    (91) arrfn -> ID . ZID ( . expression )
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 172
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 132

    (92) arrfn -> ID . KBER ( . array )
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]

    [               shift and go to state 48

    array                          shift and go to state 173

state 133

    (93) arrfn -> ID . KHWI ( . )

    )               shift and go to state 174


state 134

    (94) arrfn -> ID . DKHEL ( . expression , expression )
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 175
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 135

    (95) arrfn -> ID . MSSE7 ( . expression )
    (96) arrfn -> ID . MSSE7 ( . )
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    )               shift and go to state 177
    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 176
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 136

    (104) appel_func -> ID ( argument_list ) .

    PLUS            reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    MINUS           reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    TIMES           reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    DIVIDE          reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    MODULO          reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    POWER           reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    KHREJ           reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    KMEL            reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    ID              reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    MOJOD           reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    KTEB            reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    (               reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    INT             reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    FLOAT           reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    STRING          reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    KHATE2          reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    S7I7            reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    WALO            reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    JEREB           reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    ILA             reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    LKOLA           reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    MA7ED           reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    DIR             reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    QRA             reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    TOL             reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    TA3RIF          reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    RED             reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    [               reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    $end            reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    )               reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    ]               reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    ,               reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    }               reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    ;               reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    :               reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    SUP             reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    INF             reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    EQUALSCOMP      reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    SUPEQUALS       reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    INFEQUALS       reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    DIFFERENT       reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    WA              reduce using rule 104 (appel_func -> ID ( argument_list ) .)
    AW              reduce using rule 104 (appel_func -> ID ( argument_list ) .)


state 137

    (98) argument_list -> argument_list , . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 178
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 138

    (86) dimensions -> dimensions [ expression . ]
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    ]               shift and go to state 179
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 139

    (87) arrayslice -> ID [ expression : . expression ]
    (89) arrayslice -> ID [ expression : . ]
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    ]               shift and go to state 181
    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 180
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 140

    (85) dimensions -> [ expression ] .

    [               reduce using rule 85 (dimensions -> [ expression ] .)
    EQUALS          reduce using rule 85 (dimensions -> [ expression ] .)
    PLUS            reduce using rule 85 (dimensions -> [ expression ] .)
    MINUS           reduce using rule 85 (dimensions -> [ expression ] .)
    TIMES           reduce using rule 85 (dimensions -> [ expression ] .)
    DIVIDE          reduce using rule 85 (dimensions -> [ expression ] .)
    MODULO          reduce using rule 85 (dimensions -> [ expression ] .)
    POWER           reduce using rule 85 (dimensions -> [ expression ] .)
    KHREJ           reduce using rule 85 (dimensions -> [ expression ] .)
    KMEL            reduce using rule 85 (dimensions -> [ expression ] .)
    ID              reduce using rule 85 (dimensions -> [ expression ] .)
    MOJOD           reduce using rule 85 (dimensions -> [ expression ] .)
    KTEB            reduce using rule 85 (dimensions -> [ expression ] .)
    (               reduce using rule 85 (dimensions -> [ expression ] .)
    INT             reduce using rule 85 (dimensions -> [ expression ] .)
    FLOAT           reduce using rule 85 (dimensions -> [ expression ] .)
    STRING          reduce using rule 85 (dimensions -> [ expression ] .)
    KHATE2          reduce using rule 85 (dimensions -> [ expression ] .)
    S7I7            reduce using rule 85 (dimensions -> [ expression ] .)
    WALO            reduce using rule 85 (dimensions -> [ expression ] .)
    JEREB           reduce using rule 85 (dimensions -> [ expression ] .)
    ILA             reduce using rule 85 (dimensions -> [ expression ] .)
    LKOLA           reduce using rule 85 (dimensions -> [ expression ] .)
    MA7ED           reduce using rule 85 (dimensions -> [ expression ] .)
    DIR             reduce using rule 85 (dimensions -> [ expression ] .)
    QRA             reduce using rule 85 (dimensions -> [ expression ] .)
    TOL             reduce using rule 85 (dimensions -> [ expression ] .)
    TA3RIF          reduce using rule 85 (dimensions -> [ expression ] .)
    RED             reduce using rule 85 (dimensions -> [ expression ] .)
    $end            reduce using rule 85 (dimensions -> [ expression ] .)
    }               reduce using rule 85 (dimensions -> [ expression ] .)
    )               reduce using rule 85 (dimensions -> [ expression ] .)
    ]               reduce using rule 85 (dimensions -> [ expression ] .)
    ,               reduce using rule 85 (dimensions -> [ expression ] .)
    ;               reduce using rule 85 (dimensions -> [ expression ] .)
    :               reduce using rule 85 (dimensions -> [ expression ] .)
    SUP             reduce using rule 85 (dimensions -> [ expression ] .)
    INF             reduce using rule 85 (dimensions -> [ expression ] .)
    EQUALSCOMP      reduce using rule 85 (dimensions -> [ expression ] .)
    SUPEQUALS       reduce using rule 85 (dimensions -> [ expression ] .)
    INFEQUALS       reduce using rule 85 (dimensions -> [ expression ] .)
    DIFFERENT       reduce using rule 85 (dimensions -> [ expression ] .)
    WA              reduce using rule 85 (dimensions -> [ expression ] .)
    AW              reduce using rule 85 (dimensions -> [ expression ] .)


state 141

    (88) arrayslice -> ID [ : expression . ]
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    ]               shift and go to state 182
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 142

    (90) arrayslice -> ID [ : ] .

    EQUALS          reduce using rule 90 (arrayslice -> ID [ : ] .)
    PLUS            reduce using rule 90 (arrayslice -> ID [ : ] .)
    MINUS           reduce using rule 90 (arrayslice -> ID [ : ] .)
    TIMES           reduce using rule 90 (arrayslice -> ID [ : ] .)
    DIVIDE          reduce using rule 90 (arrayslice -> ID [ : ] .)
    MODULO          reduce using rule 90 (arrayslice -> ID [ : ] .)
    POWER           reduce using rule 90 (arrayslice -> ID [ : ] .)
    KHREJ           reduce using rule 90 (arrayslice -> ID [ : ] .)
    KMEL            reduce using rule 90 (arrayslice -> ID [ : ] .)
    ID              reduce using rule 90 (arrayslice -> ID [ : ] .)
    MOJOD           reduce using rule 90 (arrayslice -> ID [ : ] .)
    KTEB            reduce using rule 90 (arrayslice -> ID [ : ] .)
    (               reduce using rule 90 (arrayslice -> ID [ : ] .)
    INT             reduce using rule 90 (arrayslice -> ID [ : ] .)
    FLOAT           reduce using rule 90 (arrayslice -> ID [ : ] .)
    STRING          reduce using rule 90 (arrayslice -> ID [ : ] .)
    KHATE2          reduce using rule 90 (arrayslice -> ID [ : ] .)
    S7I7            reduce using rule 90 (arrayslice -> ID [ : ] .)
    WALO            reduce using rule 90 (arrayslice -> ID [ : ] .)
    JEREB           reduce using rule 90 (arrayslice -> ID [ : ] .)
    ILA             reduce using rule 90 (arrayslice -> ID [ : ] .)
    LKOLA           reduce using rule 90 (arrayslice -> ID [ : ] .)
    MA7ED           reduce using rule 90 (arrayslice -> ID [ : ] .)
    DIR             reduce using rule 90 (arrayslice -> ID [ : ] .)
    QRA             reduce using rule 90 (arrayslice -> ID [ : ] .)
    TOL             reduce using rule 90 (arrayslice -> ID [ : ] .)
    TA3RIF          reduce using rule 90 (arrayslice -> ID [ : ] .)
    RED             reduce using rule 90 (arrayslice -> ID [ : ] .)
    [               reduce using rule 90 (arrayslice -> ID [ : ] .)
    $end            reduce using rule 90 (arrayslice -> ID [ : ] .)
    )               reduce using rule 90 (arrayslice -> ID [ : ] .)
    ]               reduce using rule 90 (arrayslice -> ID [ : ] .)
    ,               reduce using rule 90 (arrayslice -> ID [ : ] .)
    }               reduce using rule 90 (arrayslice -> ID [ : ] .)
    ;               reduce using rule 90 (arrayslice -> ID [ : ] .)
    :               reduce using rule 90 (arrayslice -> ID [ : ] .)
    SUP             reduce using rule 90 (arrayslice -> ID [ : ] .)
    INF             reduce using rule 90 (arrayslice -> ID [ : ] .)
    EQUALSCOMP      reduce using rule 90 (arrayslice -> ID [ : ] .)
    SUPEQUALS       reduce using rule 90 (arrayslice -> ID [ : ] .)
    INFEQUALS       reduce using rule 90 (arrayslice -> ID [ : ] .)
    DIFFERENT       reduce using rule 90 (arrayslice -> ID [ : ] .)
    WA              reduce using rule 90 (arrayslice -> ID [ : ] .)
    AW              reduce using rule 90 (arrayslice -> ID [ : ] .)


state 143

    (38) condition -> ( condition . ) AW ( condition )
    (39) condition -> ( condition . ) WA ( condition )
    (42) condition -> ( condition . ) WA condition
    (43) condition -> ( condition . ) AW condition
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               shift and go to state 183
    WA              shift and go to state 147
    AW              shift and go to state 148


state 144

    (60) expression -> ( expression . )
    (47) condition -> expression . SUP expression
    (48) condition -> expression . INF expression
    (49) condition -> expression . EQUALSCOMP expression
    (50) condition -> expression . SUPEQUALS expression
    (51) condition -> expression . INFEQUALS expression
    (52) condition -> expression . DIFFERENT expression
    (53) condition -> expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               shift and go to state 116
    SUP             shift and go to state 152
    INF             shift and go to state 153
    EQUALSCOMP      shift and go to state 154
    SUPEQUALS       shift and go to state 155
    INFEQUALS       shift and go to state 156
    DIFFERENT       shift and go to state 157
    WA              reduce using rule 53 (condition -> expression .)
    AW              reduce using rule 53 (condition -> expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55

  ! )               [ reduce using rule 53 (condition -> expression .) ]


state 145

    (107) printing -> KTEB ( condition ) .

    KHREJ           reduce using rule 107 (printing -> KTEB ( condition ) .)
    KMEL            reduce using rule 107 (printing -> KTEB ( condition ) .)
    ID              reduce using rule 107 (printing -> KTEB ( condition ) .)
    MOJOD           reduce using rule 107 (printing -> KTEB ( condition ) .)
    KTEB            reduce using rule 107 (printing -> KTEB ( condition ) .)
    (               reduce using rule 107 (printing -> KTEB ( condition ) .)
    MINUS           reduce using rule 107 (printing -> KTEB ( condition ) .)
    PLUS            reduce using rule 107 (printing -> KTEB ( condition ) .)
    INT             reduce using rule 107 (printing -> KTEB ( condition ) .)
    FLOAT           reduce using rule 107 (printing -> KTEB ( condition ) .)
    STRING          reduce using rule 107 (printing -> KTEB ( condition ) .)
    KHATE2          reduce using rule 107 (printing -> KTEB ( condition ) .)
    S7I7            reduce using rule 107 (printing -> KTEB ( condition ) .)
    WALO            reduce using rule 107 (printing -> KTEB ( condition ) .)
    JEREB           reduce using rule 107 (printing -> KTEB ( condition ) .)
    ILA             reduce using rule 107 (printing -> KTEB ( condition ) .)
    LKOLA           reduce using rule 107 (printing -> KTEB ( condition ) .)
    MA7ED           reduce using rule 107 (printing -> KTEB ( condition ) .)
    DIR             reduce using rule 107 (printing -> KTEB ( condition ) .)
    QRA             reduce using rule 107 (printing -> KTEB ( condition ) .)
    TOL             reduce using rule 107 (printing -> KTEB ( condition ) .)
    TA3RIF          reduce using rule 107 (printing -> KTEB ( condition ) .)
    RED             reduce using rule 107 (printing -> KTEB ( condition ) .)
    [               reduce using rule 107 (printing -> KTEB ( condition ) .)
    $end            reduce using rule 107 (printing -> KTEB ( condition ) .)
    }               reduce using rule 107 (printing -> KTEB ( condition ) .)


state 146

    (110) printing -> KTEB ( condition , . condition )
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 184
    expression                     shift and go to state 114
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 147

    (40) condition -> condition WA . ( condition )
    (44) condition -> condition WA . condition
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 186
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 185
    expression                     shift and go to state 114
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 148

    (41) condition -> condition AW . ( condition )
    (45) condition -> condition AW . condition
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 188
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 187
    expression                     shift and go to state 114
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 149

    (108) printing -> KTEB ( incrementation ) .

    KHREJ           reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    KMEL            reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    ID              reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    MOJOD           reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    KTEB            reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    (               reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    MINUS           reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    PLUS            reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    INT             reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    FLOAT           reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    STRING          reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    KHATE2          reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    S7I7            reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    WALO            reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    JEREB           reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    ILA             reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    LKOLA           reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    MA7ED           reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    DIR             reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    QRA             reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    TOL             reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    TA3RIF          reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    RED             reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    [               reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    $end            reduce using rule 108 (printing -> KTEB ( incrementation ) .)
    }               reduce using rule 108 (printing -> KTEB ( incrementation ) .)


state 150

    (109) printing -> KTEB ( decrementation ) .

    KHREJ           reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    KMEL            reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    ID              reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    MOJOD           reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    KTEB            reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    (               reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    MINUS           reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    PLUS            reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    INT             reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    FLOAT           reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    STRING          reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    KHATE2          reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    S7I7            reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    WALO            reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    JEREB           reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    ILA             reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    LKOLA           reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    MA7ED           reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    DIR             reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    QRA             reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    TOL             reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    TA3RIF          reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    RED             reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    [               reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    $end            reduce using rule 109 (printing -> KTEB ( decrementation ) .)
    }               reduce using rule 109 (printing -> KTEB ( decrementation ) .)


state 151

    (46) condition -> L3AKSS ( . condition )
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 189
    expression                     shift and go to state 114
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 152

    (47) condition -> expression SUP . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 190
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 153

    (48) condition -> expression INF . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 191
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 154

    (49) condition -> expression EQUALSCOMP . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 192
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 155

    (50) condition -> expression SUPEQUALS . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 193
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 156

    (51) condition -> expression INFEQUALS . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 194
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 157

    (52) condition -> expression DIFFERENT . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 195
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 158

    (66) try -> JEREB { instruction_list } . MASD9CH { instruction_list }
    (67) try -> JEREB { instruction_list } . MASD9CH { instruction_list } AKHIRAN { instruction_list }

    MASD9CH         shift and go to state 196


state 159

    (9) if -> ILA ( condition ) . { instruction_list }
    (10) if -> ILA ( condition ) . { instruction_list } WLA { instruction_list }

    {               shift and go to state 197


state 160

    (11) for -> LKOLA ( var_assign ; . condition ; incrementation ) { instruction_list }
    (12) for -> LKOLA ( var_assign ; . condition ; decrementation ) { instruction_list }
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 198
    expression                     shift and go to state 114
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 161

    (13) for -> LKOLA ( expression ; . condition ; incrementation ) { instruction_list }
    (14) for -> LKOLA ( expression ; . condition ; decrementation ) { instruction_list }
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 114
    condition                      shift and go to state 199
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 162

    (15) while -> MA7ED ( condition ) . { instruction_list }

    {               shift and go to state 200


state 163

    (16) doWhile -> DIR { instruction_list } . MA7ED ( condition )

    MA7ED           shift and go to state 201


state 164

    (64) input -> QRA ( expression ) .

    KHREJ           reduce using rule 64 (input -> QRA ( expression ) .)
    KMEL            reduce using rule 64 (input -> QRA ( expression ) .)
    ID              reduce using rule 64 (input -> QRA ( expression ) .)
    MOJOD           reduce using rule 64 (input -> QRA ( expression ) .)
    KTEB            reduce using rule 64 (input -> QRA ( expression ) .)
    (               reduce using rule 64 (input -> QRA ( expression ) .)
    MINUS           reduce using rule 64 (input -> QRA ( expression ) .)
    PLUS            reduce using rule 64 (input -> QRA ( expression ) .)
    INT             reduce using rule 64 (input -> QRA ( expression ) .)
    FLOAT           reduce using rule 64 (input -> QRA ( expression ) .)
    STRING          reduce using rule 64 (input -> QRA ( expression ) .)
    KHATE2          reduce using rule 64 (input -> QRA ( expression ) .)
    S7I7            reduce using rule 64 (input -> QRA ( expression ) .)
    WALO            reduce using rule 64 (input -> QRA ( expression ) .)
    JEREB           reduce using rule 64 (input -> QRA ( expression ) .)
    ILA             reduce using rule 64 (input -> QRA ( expression ) .)
    LKOLA           reduce using rule 64 (input -> QRA ( expression ) .)
    MA7ED           reduce using rule 64 (input -> QRA ( expression ) .)
    DIR             reduce using rule 64 (input -> QRA ( expression ) .)
    QRA             reduce using rule 64 (input -> QRA ( expression ) .)
    TOL             reduce using rule 64 (input -> QRA ( expression ) .)
    TA3RIF          reduce using rule 64 (input -> QRA ( expression ) .)
    RED             reduce using rule 64 (input -> QRA ( expression ) .)
    [               reduce using rule 64 (input -> QRA ( expression ) .)
    $end            reduce using rule 64 (input -> QRA ( expression ) .)
    }               reduce using rule 64 (input -> QRA ( expression ) .)
    ;               reduce using rule 64 (input -> QRA ( expression ) .)


state 165

    (111) len -> TOL ( expression ) .

    KHREJ           reduce using rule 111 (len -> TOL ( expression ) .)
    KMEL            reduce using rule 111 (len -> TOL ( expression ) .)
    ID              reduce using rule 111 (len -> TOL ( expression ) .)
    MOJOD           reduce using rule 111 (len -> TOL ( expression ) .)
    KTEB            reduce using rule 111 (len -> TOL ( expression ) .)
    (               reduce using rule 111 (len -> TOL ( expression ) .)
    MINUS           reduce using rule 111 (len -> TOL ( expression ) .)
    PLUS            reduce using rule 111 (len -> TOL ( expression ) .)
    INT             reduce using rule 111 (len -> TOL ( expression ) .)
    FLOAT           reduce using rule 111 (len -> TOL ( expression ) .)
    STRING          reduce using rule 111 (len -> TOL ( expression ) .)
    KHATE2          reduce using rule 111 (len -> TOL ( expression ) .)
    S7I7            reduce using rule 111 (len -> TOL ( expression ) .)
    WALO            reduce using rule 111 (len -> TOL ( expression ) .)
    JEREB           reduce using rule 111 (len -> TOL ( expression ) .)
    ILA             reduce using rule 111 (len -> TOL ( expression ) .)
    LKOLA           reduce using rule 111 (len -> TOL ( expression ) .)
    MA7ED           reduce using rule 111 (len -> TOL ( expression ) .)
    DIR             reduce using rule 111 (len -> TOL ( expression ) .)
    QRA             reduce using rule 111 (len -> TOL ( expression ) .)
    TOL             reduce using rule 111 (len -> TOL ( expression ) .)
    TA3RIF          reduce using rule 111 (len -> TOL ( expression ) .)
    RED             reduce using rule 111 (len -> TOL ( expression ) .)
    [               reduce using rule 111 (len -> TOL ( expression ) .)
    $end            reduce using rule 111 (len -> TOL ( expression ) .)
    TIMES           reduce using rule 111 (len -> TOL ( expression ) .)
    DIVIDE          reduce using rule 111 (len -> TOL ( expression ) .)
    MODULO          reduce using rule 111 (len -> TOL ( expression ) .)
    POWER           reduce using rule 111 (len -> TOL ( expression ) .)
    )               reduce using rule 111 (len -> TOL ( expression ) .)
    ]               reduce using rule 111 (len -> TOL ( expression ) .)
    ,               reduce using rule 111 (len -> TOL ( expression ) .)
    }               reduce using rule 111 (len -> TOL ( expression ) .)
    ;               reduce using rule 111 (len -> TOL ( expression ) .)
    :               reduce using rule 111 (len -> TOL ( expression ) .)
    SUP             reduce using rule 111 (len -> TOL ( expression ) .)
    INF             reduce using rule 111 (len -> TOL ( expression ) .)
    EQUALSCOMP      reduce using rule 111 (len -> TOL ( expression ) .)
    SUPEQUALS       reduce using rule 111 (len -> TOL ( expression ) .)
    INFEQUALS       reduce using rule 111 (len -> TOL ( expression ) .)
    DIFFERENT       reduce using rule 111 (len -> TOL ( expression ) .)
    WA              reduce using rule 111 (len -> TOL ( expression ) .)
    AW              reduce using rule 111 (len -> TOL ( expression ) .)


state 166

    (99) parameter -> ID .

    )               reduce using rule 99 (parameter -> ID .)
    ,               reduce using rule 99 (parameter -> ID .)


state 167

    (102) func -> TA3RIF ID ( parameter_list . ) { instruction_list }
    (101) parameter_list -> parameter_list . , parameter

    )               shift and go to state 202
    ,               shift and go to state 203


state 168

    (103) func -> TA3RIF ID ( ) . { instruction_list }

    {               shift and go to state 204


state 169

    (100) parameter_list -> parameter .

    )               reduce using rule 100 (parameter_list -> parameter .)
    ,               reduce using rule 100 (parameter_list -> parameter .)


state 170

    (106) return -> RED ( expression ) .

    KHREJ           reduce using rule 106 (return -> RED ( expression ) .)
    KMEL            reduce using rule 106 (return -> RED ( expression ) .)
    ID              reduce using rule 106 (return -> RED ( expression ) .)
    MOJOD           reduce using rule 106 (return -> RED ( expression ) .)
    KTEB            reduce using rule 106 (return -> RED ( expression ) .)
    (               reduce using rule 106 (return -> RED ( expression ) .)
    MINUS           reduce using rule 106 (return -> RED ( expression ) .)
    PLUS            reduce using rule 106 (return -> RED ( expression ) .)
    INT             reduce using rule 106 (return -> RED ( expression ) .)
    FLOAT           reduce using rule 106 (return -> RED ( expression ) .)
    STRING          reduce using rule 106 (return -> RED ( expression ) .)
    KHATE2          reduce using rule 106 (return -> RED ( expression ) .)
    S7I7            reduce using rule 106 (return -> RED ( expression ) .)
    WALO            reduce using rule 106 (return -> RED ( expression ) .)
    JEREB           reduce using rule 106 (return -> RED ( expression ) .)
    ILA             reduce using rule 106 (return -> RED ( expression ) .)
    LKOLA           reduce using rule 106 (return -> RED ( expression ) .)
    MA7ED           reduce using rule 106 (return -> RED ( expression ) .)
    DIR             reduce using rule 106 (return -> RED ( expression ) .)
    QRA             reduce using rule 106 (return -> RED ( expression ) .)
    TOL             reduce using rule 106 (return -> RED ( expression ) .)
    TA3RIF          reduce using rule 106 (return -> RED ( expression ) .)
    RED             reduce using rule 106 (return -> RED ( expression ) .)
    [               reduce using rule 106 (return -> RED ( expression ) .)
    $end            reduce using rule 106 (return -> RED ( expression ) .)
    }               reduce using rule 106 (return -> RED ( expression ) .)


state 171

    (81) arraylist -> arraylist , expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    ]               reduce using rule 81 (arraylist -> arraylist , expression .)
    ,               reduce using rule 81 (arraylist -> arraylist , expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 172

    (91) arrfn -> ID . ZID ( expression . )
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               shift and go to state 205
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 173

    (92) arrfn -> ID . KBER ( array . )

    )               shift and go to state 206


state 174

    (93) arrfn -> ID . KHWI ( ) .

    KHREJ           reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    KMEL            reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    ID              reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    MOJOD           reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    KTEB            reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    (               reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    MINUS           reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    PLUS            reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    INT             reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    FLOAT           reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    STRING          reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    KHATE2          reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    S7I7            reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    WALO            reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    JEREB           reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    ILA             reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    LKOLA           reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    MA7ED           reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    DIR             reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    QRA             reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    TOL             reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    TA3RIF          reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    RED             reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    [               reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    $end            reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    TIMES           reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    DIVIDE          reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    MODULO          reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    POWER           reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    )               reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    ]               reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    ,               reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    }               reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    ;               reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    :               reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    SUP             reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    INF             reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    EQUALSCOMP      reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    SUPEQUALS       reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    INFEQUALS       reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    DIFFERENT       reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    WA              reduce using rule 93 (arrfn -> ID . KHWI ( ) .)
    AW              reduce using rule 93 (arrfn -> ID . KHWI ( ) .)


state 175

    (94) arrfn -> ID . DKHEL ( expression . , expression )
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    ,               shift and go to state 207
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 176

    (95) arrfn -> ID . MSSE7 ( expression . )
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               shift and go to state 208
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 177

    (96) arrfn -> ID . MSSE7 ( ) .

    KHREJ           reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    KMEL            reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    ID              reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    MOJOD           reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    KTEB            reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    (               reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    MINUS           reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    PLUS            reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    INT             reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    FLOAT           reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    STRING          reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    KHATE2          reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    S7I7            reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    WALO            reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    JEREB           reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    ILA             reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    LKOLA           reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    MA7ED           reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    DIR             reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    QRA             reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    TOL             reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    TA3RIF          reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    RED             reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    [               reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    $end            reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    TIMES           reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    DIVIDE          reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    MODULO          reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    POWER           reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    )               reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    ]               reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    ,               reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    }               reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    ;               reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    :               reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    SUP             reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    INF             reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    EQUALSCOMP      reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    SUPEQUALS       reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    INFEQUALS       reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    DIFFERENT       reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    WA              reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)
    AW              reduce using rule 96 (arrfn -> ID . MSSE7 ( ) .)


state 178

    (98) argument_list -> argument_list , expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               reduce using rule 98 (argument_list -> argument_list , expression .)
    ,               reduce using rule 98 (argument_list -> argument_list , expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 179

    (86) dimensions -> dimensions [ expression ] .

    [               reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    EQUALS          reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    PLUS            reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    MINUS           reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    TIMES           reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    DIVIDE          reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    MODULO          reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    POWER           reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    KHREJ           reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    KMEL            reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    ID              reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    MOJOD           reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    KTEB            reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    (               reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    INT             reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    FLOAT           reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    STRING          reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    KHATE2          reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    S7I7            reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    WALO            reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    JEREB           reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    ILA             reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    LKOLA           reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    MA7ED           reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    DIR             reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    QRA             reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    TOL             reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    TA3RIF          reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    RED             reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    $end            reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    }               reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    )               reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    ]               reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    ,               reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    ;               reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    :               reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    SUP             reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    INF             reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    EQUALSCOMP      reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    SUPEQUALS       reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    INFEQUALS       reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    DIFFERENT       reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    WA              reduce using rule 86 (dimensions -> dimensions [ expression ] .)
    AW              reduce using rule 86 (dimensions -> dimensions [ expression ] .)


state 180

    (87) arrayslice -> ID [ expression : expression . ]
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    ]               shift and go to state 209
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 181

    (89) arrayslice -> ID [ expression : ] .

    EQUALS          reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    PLUS            reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    MINUS           reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    TIMES           reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    DIVIDE          reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    MODULO          reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    POWER           reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    KHREJ           reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    KMEL            reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    ID              reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    MOJOD           reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    KTEB            reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    (               reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    INT             reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    FLOAT           reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    STRING          reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    KHATE2          reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    S7I7            reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    WALO            reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    JEREB           reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    ILA             reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    LKOLA           reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    MA7ED           reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    DIR             reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    QRA             reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    TOL             reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    TA3RIF          reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    RED             reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    [               reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    $end            reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    )               reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    ]               reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    ,               reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    }               reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    ;               reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    :               reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    SUP             reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    INF             reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    EQUALSCOMP      reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    SUPEQUALS       reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    INFEQUALS       reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    DIFFERENT       reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    WA              reduce using rule 89 (arrayslice -> ID [ expression : ] .)
    AW              reduce using rule 89 (arrayslice -> ID [ expression : ] .)


state 182

    (88) arrayslice -> ID [ : expression ] .

    EQUALS          reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    PLUS            reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    MINUS           reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    TIMES           reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    DIVIDE          reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    MODULO          reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    POWER           reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    KHREJ           reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    KMEL            reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    ID              reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    MOJOD           reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    KTEB            reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    (               reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    INT             reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    FLOAT           reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    STRING          reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    KHATE2          reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    S7I7            reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    WALO            reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    JEREB           reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    ILA             reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    LKOLA           reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    MA7ED           reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    DIR             reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    QRA             reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    TOL             reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    TA3RIF          reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    RED             reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    [               reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    $end            reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    )               reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    ]               reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    ,               reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    }               reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    ;               reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    :               reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    SUP             reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    INF             reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    EQUALSCOMP      reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    SUPEQUALS       reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    INFEQUALS       reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    DIFFERENT       reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    WA              reduce using rule 88 (arrayslice -> ID [ : expression ] .)
    AW              reduce using rule 88 (arrayslice -> ID [ : expression ] .)


state 183

    (38) condition -> ( condition ) . AW ( condition )
    (39) condition -> ( condition ) . WA ( condition )
    (42) condition -> ( condition ) . WA condition
    (43) condition -> ( condition ) . AW condition

    AW              shift and go to state 210
    WA              shift and go to state 211


state 184

    (110) printing -> KTEB ( condition , condition . )
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               shift and go to state 212
    WA              shift and go to state 147
    AW              shift and go to state 148


state 185

    (44) condition -> condition WA condition .
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               reduce using rule 44 (condition -> condition WA condition .)
    ,               reduce using rule 44 (condition -> condition WA condition .)
    WA              reduce using rule 44 (condition -> condition WA condition .)
    AW              reduce using rule 44 (condition -> condition WA condition .)
    ;               reduce using rule 44 (condition -> condition WA condition .)

  ! WA              [ shift and go to state 147 ]
  ! AW              [ shift and go to state 148 ]


state 186

    (40) condition -> condition WA ( . condition )
    (38) condition -> ( . condition ) AW ( condition )
    (39) condition -> ( . condition ) WA ( condition )
    (42) condition -> ( . condition ) WA condition
    (43) condition -> ( . condition ) AW condition
    (60) expression -> ( . expression )
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 213
    expression                     shift and go to state 144
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 187

    (45) condition -> condition AW condition .
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               reduce using rule 45 (condition -> condition AW condition .)
    ,               reduce using rule 45 (condition -> condition AW condition .)
    WA              reduce using rule 45 (condition -> condition AW condition .)
    AW              reduce using rule 45 (condition -> condition AW condition .)
    ;               reduce using rule 45 (condition -> condition AW condition .)

  ! WA              [ shift and go to state 147 ]
  ! AW              [ shift and go to state 148 ]


state 188

    (41) condition -> condition AW ( . condition )
    (38) condition -> ( . condition ) AW ( condition )
    (39) condition -> ( . condition ) WA ( condition )
    (42) condition -> ( . condition ) WA condition
    (43) condition -> ( . condition ) AW condition
    (60) expression -> ( . expression )
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 214
    expression                     shift and go to state 144
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 189

    (46) condition -> L3AKSS ( condition . )
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               shift and go to state 215
    WA              shift and go to state 147
    AW              shift and go to state 148


state 190

    (47) condition -> expression SUP expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               reduce using rule 47 (condition -> expression SUP expression .)
    ,               reduce using rule 47 (condition -> expression SUP expression .)
    WA              reduce using rule 47 (condition -> expression SUP expression .)
    AW              reduce using rule 47 (condition -> expression SUP expression .)
    ;               reduce using rule 47 (condition -> expression SUP expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 191

    (48) condition -> expression INF expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               reduce using rule 48 (condition -> expression INF expression .)
    ,               reduce using rule 48 (condition -> expression INF expression .)
    WA              reduce using rule 48 (condition -> expression INF expression .)
    AW              reduce using rule 48 (condition -> expression INF expression .)
    ;               reduce using rule 48 (condition -> expression INF expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 192

    (49) condition -> expression EQUALSCOMP expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               reduce using rule 49 (condition -> expression EQUALSCOMP expression .)
    ,               reduce using rule 49 (condition -> expression EQUALSCOMP expression .)
    WA              reduce using rule 49 (condition -> expression EQUALSCOMP expression .)
    AW              reduce using rule 49 (condition -> expression EQUALSCOMP expression .)
    ;               reduce using rule 49 (condition -> expression EQUALSCOMP expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 193

    (50) condition -> expression SUPEQUALS expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               reduce using rule 50 (condition -> expression SUPEQUALS expression .)
    ,               reduce using rule 50 (condition -> expression SUPEQUALS expression .)
    WA              reduce using rule 50 (condition -> expression SUPEQUALS expression .)
    AW              reduce using rule 50 (condition -> expression SUPEQUALS expression .)
    ;               reduce using rule 50 (condition -> expression SUPEQUALS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 194

    (51) condition -> expression INFEQUALS expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               reduce using rule 51 (condition -> expression INFEQUALS expression .)
    ,               reduce using rule 51 (condition -> expression INFEQUALS expression .)
    WA              reduce using rule 51 (condition -> expression INFEQUALS expression .)
    AW              reduce using rule 51 (condition -> expression INFEQUALS expression .)
    ;               reduce using rule 51 (condition -> expression INFEQUALS expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 195

    (52) condition -> expression DIFFERENT expression .
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               reduce using rule 52 (condition -> expression DIFFERENT expression .)
    ,               reduce using rule 52 (condition -> expression DIFFERENT expression .)
    WA              reduce using rule 52 (condition -> expression DIFFERENT expression .)
    AW              reduce using rule 52 (condition -> expression DIFFERENT expression .)
    ;               reduce using rule 52 (condition -> expression DIFFERENT expression .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 196

    (66) try -> JEREB { instruction_list } MASD9CH . { instruction_list }
    (67) try -> JEREB { instruction_list } MASD9CH . { instruction_list } AKHIRAN { instruction_list }

    {               shift and go to state 216


state 197

    (9) if -> ILA ( condition ) { . instruction_list }
    (10) if -> ILA ( condition ) { . instruction_list } WLA { instruction_list }
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction_list               shift and go to state 217
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 198

    (11) for -> LKOLA ( var_assign ; condition . ; incrementation ) { instruction_list }
    (12) for -> LKOLA ( var_assign ; condition . ; decrementation ) { instruction_list }
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    ;               shift and go to state 218
    WA              shift and go to state 147
    AW              shift and go to state 148


state 199

    (13) for -> LKOLA ( expression ; condition . ; incrementation ) { instruction_list }
    (14) for -> LKOLA ( expression ; condition . ; decrementation ) { instruction_list }
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    ;               shift and go to state 219
    WA              shift and go to state 147
    AW              shift and go to state 148


state 200

    (15) while -> MA7ED ( condition ) { . instruction_list }
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction_list               shift and go to state 220
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 201

    (16) doWhile -> DIR { instruction_list } MA7ED . ( condition )

    (               shift and go to state 221


state 202

    (102) func -> TA3RIF ID ( parameter_list ) . { instruction_list }

    {               shift and go to state 222


state 203

    (101) parameter_list -> parameter_list , . parameter
    (99) parameter -> . ID

    ID              shift and go to state 166

    parameter                      shift and go to state 223

state 204

    (103) func -> TA3RIF ID ( ) { . instruction_list }
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction_list               shift and go to state 224
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 205

    (91) arrfn -> ID . ZID ( expression ) .

    KHREJ           reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    KMEL            reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    ID              reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    MOJOD           reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    KTEB            reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    (               reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    MINUS           reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    PLUS            reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    INT             reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    FLOAT           reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    STRING          reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    KHATE2          reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    S7I7            reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    WALO            reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    JEREB           reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    ILA             reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    LKOLA           reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    MA7ED           reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    DIR             reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    QRA             reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    TOL             reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    TA3RIF          reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    RED             reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    [               reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    $end            reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    TIMES           reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    DIVIDE          reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    MODULO          reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    POWER           reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    )               reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    ]               reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    ,               reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    }               reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    ;               reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    :               reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    SUP             reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    INF             reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    EQUALSCOMP      reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    SUPEQUALS       reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    INFEQUALS       reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    DIFFERENT       reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    WA              reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)
    AW              reduce using rule 91 (arrfn -> ID . ZID ( expression ) .)


state 206

    (92) arrfn -> ID . KBER ( array ) .

    KHREJ           reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    KMEL            reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    ID              reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    MOJOD           reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    KTEB            reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    (               reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    MINUS           reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    PLUS            reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    INT             reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    FLOAT           reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    STRING          reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    KHATE2          reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    S7I7            reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    WALO            reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    JEREB           reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    ILA             reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    LKOLA           reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    MA7ED           reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    DIR             reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    QRA             reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    TOL             reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    TA3RIF          reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    RED             reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    [               reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    $end            reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    TIMES           reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    DIVIDE          reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    MODULO          reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    POWER           reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    )               reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    ]               reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    ,               reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    }               reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    ;               reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    :               reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    SUP             reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    INF             reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    EQUALSCOMP      reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    SUPEQUALS       reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    INFEQUALS       reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    DIFFERENT       reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    WA              reduce using rule 92 (arrfn -> ID . KBER ( array ) .)
    AW              reduce using rule 92 (arrfn -> ID . KBER ( array ) .)


state 207

    (94) arrfn -> ID . DKHEL ( expression , . expression )
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 28
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    expression                     shift and go to state 225
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 208

    (95) arrfn -> ID . MSSE7 ( expression ) .

    KHREJ           reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    KMEL            reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    ID              reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    MOJOD           reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    KTEB            reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    (               reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    MINUS           reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    PLUS            reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    INT             reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    FLOAT           reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    STRING          reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    KHATE2          reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    S7I7            reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    WALO            reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    JEREB           reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    ILA             reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    LKOLA           reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    MA7ED           reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    DIR             reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    QRA             reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    TOL             reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    TA3RIF          reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    RED             reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    [               reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    $end            reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    TIMES           reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    DIVIDE          reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    MODULO          reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    POWER           reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    )               reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    ]               reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    ,               reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    }               reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    ;               reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    :               reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    SUP             reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    INF             reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    EQUALSCOMP      reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    SUPEQUALS       reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    INFEQUALS       reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    DIFFERENT       reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    WA              reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)
    AW              reduce using rule 95 (arrfn -> ID . MSSE7 ( expression ) .)


state 209

    (87) arrayslice -> ID [ expression : expression ] .

    EQUALS          reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    PLUS            reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    MINUS           reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    TIMES           reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    DIVIDE          reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    MODULO          reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    POWER           reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    KHREJ           reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    KMEL            reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    ID              reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    MOJOD           reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    KTEB            reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    (               reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    INT             reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    FLOAT           reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    STRING          reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    KHATE2          reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    S7I7            reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    WALO            reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    JEREB           reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    ILA             reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    LKOLA           reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    MA7ED           reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    DIR             reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    QRA             reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    TOL             reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    TA3RIF          reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    RED             reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    [               reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    $end            reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    )               reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    ]               reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    ,               reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    }               reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    ;               reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    :               reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    SUP             reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    INF             reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    EQUALSCOMP      reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    SUPEQUALS       reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    INFEQUALS       reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    DIFFERENT       reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    WA              reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)
    AW              reduce using rule 87 (arrayslice -> ID [ expression : expression ] .)


state 210

    (38) condition -> ( condition ) AW . ( condition )
    (43) condition -> ( condition ) AW . condition
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 226
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 227
    expression                     shift and go to state 114
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 211

    (39) condition -> ( condition ) WA . ( condition )
    (42) condition -> ( condition ) WA . condition
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 228
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 229
    expression                     shift and go to state 114
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 212

    (110) printing -> KTEB ( condition , condition ) .

    KHREJ           reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    KMEL            reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    ID              reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    MOJOD           reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    KTEB            reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    (               reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    MINUS           reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    PLUS            reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    INT             reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    FLOAT           reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    STRING          reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    KHATE2          reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    S7I7            reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    WALO            reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    JEREB           reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    ILA             reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    LKOLA           reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    MA7ED           reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    DIR             reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    QRA             reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    TOL             reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    TA3RIF          reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    RED             reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    [               reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    $end            reduce using rule 110 (printing -> KTEB ( condition , condition ) .)
    }               reduce using rule 110 (printing -> KTEB ( condition , condition ) .)


state 213

    (40) condition -> condition WA ( condition . )
    (38) condition -> ( condition . ) AW ( condition )
    (39) condition -> ( condition . ) WA ( condition )
    (42) condition -> ( condition . ) WA condition
    (43) condition -> ( condition . ) AW condition
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               shift and go to state 230
    WA              shift and go to state 147
    AW              shift and go to state 148


state 214

    (41) condition -> condition AW ( condition . )
    (38) condition -> ( condition . ) AW ( condition )
    (39) condition -> ( condition . ) WA ( condition )
    (42) condition -> ( condition . ) WA condition
    (43) condition -> ( condition . ) AW condition
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               shift and go to state 231
    WA              shift and go to state 147
    AW              shift and go to state 148


state 215

    (46) condition -> L3AKSS ( condition ) .

    )               reduce using rule 46 (condition -> L3AKSS ( condition ) .)
    ,               reduce using rule 46 (condition -> L3AKSS ( condition ) .)
    WA              reduce using rule 46 (condition -> L3AKSS ( condition ) .)
    AW              reduce using rule 46 (condition -> L3AKSS ( condition ) .)
    ;               reduce using rule 46 (condition -> L3AKSS ( condition ) .)


state 216

    (66) try -> JEREB { instruction_list } MASD9CH { . instruction_list }
    (67) try -> JEREB { instruction_list } MASD9CH { . instruction_list } AKHIRAN { instruction_list }
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction_list               shift and go to state 232
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 217

    (9) if -> ILA ( condition ) { instruction_list . }
    (10) if -> ILA ( condition ) { instruction_list . } WLA { instruction_list }
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 233
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 218

    (11) for -> LKOLA ( var_assign ; condition ; . incrementation ) { instruction_list }
    (12) for -> LKOLA ( var_assign ; condition ; . decrementation ) { instruction_list }
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION

    ID              shift and go to state 236

    incrementation                 shift and go to state 234
    decrementation                 shift and go to state 235

state 219

    (13) for -> LKOLA ( expression ; condition ; . incrementation ) { instruction_list }
    (14) for -> LKOLA ( expression ; condition ; . decrementation ) { instruction_list }
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION

    ID              shift and go to state 236

    incrementation                 shift and go to state 237
    decrementation                 shift and go to state 238

state 220

    (15) while -> MA7ED ( condition ) { instruction_list . }
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 239
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 221

    (16) doWhile -> DIR { instruction_list } MA7ED ( . condition )
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 240
    expression                     shift and go to state 114
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 222

    (102) func -> TA3RIF ID ( parameter_list ) { . instruction_list }
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction_list               shift and go to state 241
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 223

    (101) parameter_list -> parameter_list , parameter .

    )               reduce using rule 101 (parameter_list -> parameter_list , parameter .)
    ,               reduce using rule 101 (parameter_list -> parameter_list , parameter .)


state 224

    (103) func -> TA3RIF ID ( ) { instruction_list . }
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 242
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 225

    (94) arrfn -> ID . DKHEL ( expression , expression . )
    (54) expression -> expression . PLUS expression
    (55) expression -> expression . MINUS expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . MODULO expression
    (59) expression -> expression . POWER expression

    )               shift and go to state 243
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53
    MODULO          shift and go to state 54
    POWER           shift and go to state 55


state 226

    (38) condition -> ( condition ) AW ( . condition )
    (38) condition -> ( . condition ) AW ( condition )
    (39) condition -> ( . condition ) WA ( condition )
    (42) condition -> ( . condition ) WA condition
    (43) condition -> ( . condition ) AW condition
    (60) expression -> ( . expression )
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 244
    expression                     shift and go to state 144
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 227

    (43) condition -> ( condition ) AW condition .
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               reduce using rule 43 (condition -> ( condition ) AW condition .)
    ,               reduce using rule 43 (condition -> ( condition ) AW condition .)
    WA              reduce using rule 43 (condition -> ( condition ) AW condition .)
    AW              reduce using rule 43 (condition -> ( condition ) AW condition .)
    ;               reduce using rule 43 (condition -> ( condition ) AW condition .)

  ! WA              [ shift and go to state 147 ]
  ! AW              [ shift and go to state 148 ]


state 228

    (39) condition -> ( condition ) WA ( . condition )
    (38) condition -> ( . condition ) AW ( condition )
    (39) condition -> ( . condition ) WA ( condition )
    (42) condition -> ( . condition ) WA condition
    (43) condition -> ( . condition ) AW condition
    (60) expression -> ( . expression )
    (38) condition -> . ( condition ) AW ( condition )
    (39) condition -> . ( condition ) WA ( condition )
    (40) condition -> . condition WA ( condition )
    (41) condition -> . condition AW ( condition )
    (42) condition -> . ( condition ) WA condition
    (43) condition -> . ( condition ) AW condition
    (44) condition -> . condition WA condition
    (45) condition -> . condition AW condition
    (46) condition -> . L3AKSS ( condition )
    (47) condition -> . expression SUP expression
    (48) condition -> . expression INF expression
    (49) condition -> . expression EQUALSCOMP expression
    (50) condition -> . expression SUPEQUALS expression
    (51) condition -> . expression INFEQUALS expression
    (52) condition -> . expression DIFFERENT expression
    (53) condition -> . expression
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (111) len -> . TOL ( expression )
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

    (               shift and go to state 109
    L3AKSS          shift and go to state 113
    MINUS           shift and go to state 30
    PLUS            shift and go to state 29
    ID              shift and go to state 69
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    [               shift and go to state 48
    TOL             shift and go to state 45

    condition                      shift and go to state 245
    expression                     shift and go to state 144
    array                          shift and go to state 37
    arrayelt                       shift and go to state 70
    arrayslice                     shift and go to state 71
    arrfn                          shift and go to state 72
    len                            shift and go to state 73
    appel_func                     shift and go to state 38

state 229

    (42) condition -> ( condition ) WA condition .
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               reduce using rule 42 (condition -> ( condition ) WA condition .)
    ,               reduce using rule 42 (condition -> ( condition ) WA condition .)
    WA              reduce using rule 42 (condition -> ( condition ) WA condition .)
    AW              reduce using rule 42 (condition -> ( condition ) WA condition .)
    ;               reduce using rule 42 (condition -> ( condition ) WA condition .)

  ! WA              [ shift and go to state 147 ]
  ! AW              [ shift and go to state 148 ]


state 230

    (40) condition -> condition WA ( condition ) .
    (38) condition -> ( condition ) . AW ( condition )
    (39) condition -> ( condition ) . WA ( condition )
    (42) condition -> ( condition ) . WA condition
    (43) condition -> ( condition ) . AW condition

    )               reduce using rule 40 (condition -> condition WA ( condition ) .)
    ,               reduce using rule 40 (condition -> condition WA ( condition ) .)
    WA              reduce using rule 40 (condition -> condition WA ( condition ) .)
    AW              reduce using rule 40 (condition -> condition WA ( condition ) .)
    ;               reduce using rule 40 (condition -> condition WA ( condition ) .)

  ! AW              [ shift and go to state 210 ]
  ! WA              [ shift and go to state 211 ]


state 231

    (41) condition -> condition AW ( condition ) .
    (38) condition -> ( condition ) . AW ( condition )
    (39) condition -> ( condition ) . WA ( condition )
    (42) condition -> ( condition ) . WA condition
    (43) condition -> ( condition ) . AW condition

    )               reduce using rule 41 (condition -> condition AW ( condition ) .)
    ,               reduce using rule 41 (condition -> condition AW ( condition ) .)
    WA              reduce using rule 41 (condition -> condition AW ( condition ) .)
    AW              reduce using rule 41 (condition -> condition AW ( condition ) .)
    ;               reduce using rule 41 (condition -> condition AW ( condition ) .)

  ! AW              [ shift and go to state 210 ]
  ! WA              [ shift and go to state 211 ]


state 232

    (66) try -> JEREB { instruction_list } MASD9CH { instruction_list . }
    (67) try -> JEREB { instruction_list } MASD9CH { instruction_list . } AKHIRAN { instruction_list }
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 246
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 233

    (9) if -> ILA ( condition ) { instruction_list } .
    (10) if -> ILA ( condition ) { instruction_list } . WLA { instruction_list }

    KHREJ           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    KMEL            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    ID              reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    MOJOD           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    KTEB            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    (               reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    MINUS           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    PLUS            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    INT             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    FLOAT           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    STRING          reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    KHATE2          reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    S7I7            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    WALO            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    JEREB           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    ILA             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    LKOLA           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    MA7ED           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    DIR             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    QRA             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    TOL             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    TA3RIF          reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    RED             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    [               reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    $end            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    }               reduce using rule 9 (if -> ILA ( condition ) { instruction_list } .)
    WLA             shift and go to state 247


state 234

    (11) for -> LKOLA ( var_assign ; condition ; incrementation . ) { instruction_list }

    )               shift and go to state 248


state 235

    (12) for -> LKOLA ( var_assign ; condition ; decrementation . ) { instruction_list }

    )               shift and go to state 249


state 236

    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION

    INCREMENTATION  shift and go to state 57
    DECREMENTATION  shift and go to state 58


state 237

    (13) for -> LKOLA ( expression ; condition ; incrementation . ) { instruction_list }

    )               shift and go to state 250


state 238

    (14) for -> LKOLA ( expression ; condition ; decrementation . ) { instruction_list }

    )               shift and go to state 251


state 239

    (15) while -> MA7ED ( condition ) { instruction_list } .

    KHREJ           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    KMEL            reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    ID              reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    MOJOD           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    KTEB            reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    (               reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    MINUS           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    PLUS            reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    INT             reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    FLOAT           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    STRING          reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    KHATE2          reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    S7I7            reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    WALO            reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    JEREB           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    ILA             reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    LKOLA           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    MA7ED           reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    DIR             reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    QRA             reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    TOL             reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    TA3RIF          reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    RED             reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    [               reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    $end            reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)
    }               reduce using rule 15 (while -> MA7ED ( condition ) { instruction_list } .)


state 240

    (16) doWhile -> DIR { instruction_list } MA7ED ( condition . )
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               shift and go to state 252
    WA              shift and go to state 147
    AW              shift and go to state 148


state 241

    (102) func -> TA3RIF ID ( parameter_list ) { instruction_list . }
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 253
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 242

    (103) func -> TA3RIF ID ( ) { instruction_list } .

    KHREJ           reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    KMEL            reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    ID              reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    MOJOD           reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    KTEB            reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    (               reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    MINUS           reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    PLUS            reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    INT             reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    FLOAT           reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    STRING          reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    KHATE2          reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    S7I7            reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    WALO            reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    JEREB           reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    ILA             reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    LKOLA           reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    MA7ED           reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    DIR             reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    QRA             reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    TOL             reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    TA3RIF          reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    RED             reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    [               reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    $end            reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)
    }               reduce using rule 103 (func -> TA3RIF ID ( ) { instruction_list } .)


state 243

    (94) arrfn -> ID . DKHEL ( expression , expression ) .

    KHREJ           reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    KMEL            reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    ID              reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    MOJOD           reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    KTEB            reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    (               reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    MINUS           reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    PLUS            reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    INT             reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    FLOAT           reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    STRING          reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    KHATE2          reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    S7I7            reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    WALO            reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    JEREB           reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    ILA             reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    LKOLA           reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    MA7ED           reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    DIR             reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    QRA             reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    TOL             reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    TA3RIF          reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    RED             reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    [               reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    $end            reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    TIMES           reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    DIVIDE          reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    MODULO          reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    POWER           reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    )               reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    ]               reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    ,               reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    }               reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    ;               reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    :               reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    SUP             reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    INF             reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    EQUALSCOMP      reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    SUPEQUALS       reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    INFEQUALS       reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    DIFFERENT       reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    WA              reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)
    AW              reduce using rule 94 (arrfn -> ID . DKHEL ( expression , expression ) .)


state 244

    (38) condition -> ( condition ) AW ( condition . )
    (38) condition -> ( condition . ) AW ( condition )
    (39) condition -> ( condition . ) WA ( condition )
    (42) condition -> ( condition . ) WA condition
    (43) condition -> ( condition . ) AW condition
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               shift and go to state 254
    WA              shift and go to state 147
    AW              shift and go to state 148


state 245

    (39) condition -> ( condition ) WA ( condition . )
    (38) condition -> ( condition . ) AW ( condition )
    (39) condition -> ( condition . ) WA ( condition )
    (42) condition -> ( condition . ) WA condition
    (43) condition -> ( condition . ) AW condition
    (40) condition -> condition . WA ( condition )
    (41) condition -> condition . AW ( condition )
    (44) condition -> condition . WA condition
    (45) condition -> condition . AW condition

    )               shift and go to state 255
    WA              shift and go to state 147
    AW              shift and go to state 148


state 246

    (66) try -> JEREB { instruction_list } MASD9CH { instruction_list } .
    (67) try -> JEREB { instruction_list } MASD9CH { instruction_list } . AKHIRAN { instruction_list }

    KHREJ           reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KMEL            reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    ID              reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MOJOD           reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KTEB            reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    (               reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MINUS           reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    PLUS            reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    INT             reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    FLOAT           reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    STRING          reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KHATE2          reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    S7I7            reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    WALO            reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    JEREB           reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    ILA             reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    LKOLA           reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MA7ED           reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    DIR             reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    QRA             reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    TOL             reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    TA3RIF          reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    RED             reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    [               reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    $end            reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    }               reduce using rule 66 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    AKHIRAN         shift and go to state 256


state 247

    (10) if -> ILA ( condition ) { instruction_list } WLA . { instruction_list }

    {               shift and go to state 257


state 248

    (11) for -> LKOLA ( var_assign ; condition ; incrementation ) . { instruction_list }

    {               shift and go to state 258


state 249

    (12) for -> LKOLA ( var_assign ; condition ; decrementation ) . { instruction_list }

    {               shift and go to state 259


state 250

    (13) for -> LKOLA ( expression ; condition ; incrementation ) . { instruction_list }

    {               shift and go to state 260


state 251

    (14) for -> LKOLA ( expression ; condition ; decrementation ) . { instruction_list }

    {               shift and go to state 261


state 252

    (16) doWhile -> DIR { instruction_list } MA7ED ( condition ) .

    KHREJ           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KMEL            reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    ID              reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MOJOD           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KTEB            reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    (               reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MINUS           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    PLUS            reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    INT             reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    FLOAT           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    STRING          reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KHATE2          reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    S7I7            reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    WALO            reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    JEREB           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    ILA             reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    LKOLA           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MA7ED           reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    DIR             reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    QRA             reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    TOL             reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    TA3RIF          reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    RED             reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    [               reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    $end            reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    }               reduce using rule 16 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)


state 253

    (102) func -> TA3RIF ID ( parameter_list ) { instruction_list } .

    KHREJ           reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    KMEL            reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    ID              reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    MOJOD           reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    KTEB            reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    (               reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    MINUS           reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    PLUS            reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    INT             reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    FLOAT           reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    STRING          reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    KHATE2          reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    S7I7            reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    WALO            reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    JEREB           reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    ILA             reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    LKOLA           reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    MA7ED           reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    DIR             reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    QRA             reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    TOL             reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    TA3RIF          reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    RED             reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    [               reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    $end            reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)
    }               reduce using rule 102 (func -> TA3RIF ID ( parameter_list ) { instruction_list } .)


state 254

    (38) condition -> ( condition ) AW ( condition ) .
    (38) condition -> ( condition ) . AW ( condition )
    (39) condition -> ( condition ) . WA ( condition )
    (42) condition -> ( condition ) . WA condition
    (43) condition -> ( condition ) . AW condition

    )               reduce using rule 38 (condition -> ( condition ) AW ( condition ) .)
    ,               reduce using rule 38 (condition -> ( condition ) AW ( condition ) .)
    WA              reduce using rule 38 (condition -> ( condition ) AW ( condition ) .)
    AW              reduce using rule 38 (condition -> ( condition ) AW ( condition ) .)
    ;               reduce using rule 38 (condition -> ( condition ) AW ( condition ) .)

  ! AW              [ shift and go to state 210 ]
  ! WA              [ shift and go to state 211 ]


state 255

    (39) condition -> ( condition ) WA ( condition ) .
    (38) condition -> ( condition ) . AW ( condition )
    (39) condition -> ( condition ) . WA ( condition )
    (42) condition -> ( condition ) . WA condition
    (43) condition -> ( condition ) . AW condition

    )               reduce using rule 39 (condition -> ( condition ) WA ( condition ) .)
    ,               reduce using rule 39 (condition -> ( condition ) WA ( condition ) .)
    WA              reduce using rule 39 (condition -> ( condition ) WA ( condition ) .)
    AW              reduce using rule 39 (condition -> ( condition ) WA ( condition ) .)
    ;               reduce using rule 39 (condition -> ( condition ) WA ( condition ) .)

  ! AW              [ shift and go to state 210 ]
  ! WA              [ shift and go to state 211 ]


state 256

    (67) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN . { instruction_list }

    {               shift and go to state 262


state 257

    (10) if -> ILA ( condition ) { instruction_list } WLA { . instruction_list }
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction_list               shift and go to state 263
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 258

    (11) for -> LKOLA ( var_assign ; condition ; incrementation ) { . instruction_list }
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    var_assign                     shift and go to state 4
    incrementation                 shift and go to state 7
    instruction_list               shift and go to state 264
    instruction                    shift and go to state 3
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 259

    (12) for -> LKOLA ( var_assign ; condition ; decrementation ) { . instruction_list }
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    var_assign                     shift and go to state 4
    decrementation                 shift and go to state 8
    instruction_list               shift and go to state 265
    instruction                    shift and go to state 3
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 260

    (13) for -> LKOLA ( expression ; condition ; incrementation ) { . instruction_list }
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    expression                     shift and go to state 9
    incrementation                 shift and go to state 7
    instruction_list               shift and go to state 266
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 261

    (14) for -> LKOLA ( expression ; condition ; decrementation ) { . instruction_list }
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    expression                     shift and go to state 9
    decrementation                 shift and go to state 8
    instruction_list               shift and go to state 267
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 262

    (67) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { . instruction_list }
    (36) instruction_list -> . instruction
    (37) instruction_list -> . instruction_list instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    }               reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction_list               shift and go to state 268
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 263

    (10) if -> ILA ( condition ) { instruction_list } WLA { instruction_list . }
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 269
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 264

    (11) for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list . }
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 270
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    var_assign                     shift and go to state 4
    incrementation                 shift and go to state 7
    instruction                    shift and go to state 49
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 265

    (12) for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list . }
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 271
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    var_assign                     shift and go to state 4
    decrementation                 shift and go to state 8
    instruction                    shift and go to state 49
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 266

    (13) for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list . }
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 272
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    expression                     shift and go to state 9
    incrementation                 shift and go to state 7
    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 267

    (14) for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list . }
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 273
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    expression                     shift and go to state 9
    decrementation                 shift and go to state 8
    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 268

    (67) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list . }
    (37) instruction_list -> instruction_list . instruction
    (17) instruction -> . var_assign
    (18) instruction -> . arrayelt_assign
    (19) instruction -> . printing
    (20) instruction -> . incrementation
    (21) instruction -> . decrementation
    (22) instruction -> . expression
    (23) instruction -> . try
    (24) instruction -> . if
    (25) instruction -> . for
    (26) instruction -> . KHREJ
    (27) instruction -> . KMEL
    (28) instruction -> . while
    (29) instruction -> . doWhile
    (30) instruction -> . input
    (31) instruction -> . len
    (32) instruction -> . empty
    (33) instruction -> . func
    (34) instruction -> . return
    (35) instruction -> . arrfn
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (8) arrayelt_assign -> . arrayslice EQUALS expression
    (107) printing -> . KTEB ( condition )
    (108) printing -> . KTEB ( incrementation )
    (109) printing -> . KTEB ( decrementation )
    (110) printing -> . KTEB ( condition , condition )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (54) expression -> . expression PLUS expression
    (55) expression -> . expression MINUS expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . expression POWER expression
    (60) expression -> . ( expression )
    (61) expression -> . MINUS expression
    (62) expression -> . PLUS expression
    (63) expression -> . ID
    (68) expression -> . INT
    (69) expression -> . FLOAT
    (70) expression -> . STRING
    (71) expression -> . KHATE2
    (72) expression -> . S7I7
    (73) expression -> . WALO
    (74) expression -> . array
    (75) expression -> . arrayelt
    (76) expression -> . arrayslice
    (77) expression -> . arrfn
    (78) expression -> . len
    (79) expression -> . appel_func
    (66) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (67) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list }
    (10) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (14) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (15) while -> . MA7ED ( condition ) { instruction_list }
    (16) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (64) input -> . QRA ( expression )
    (65) input -> . QRA ( )
    (111) len -> . TOL ( expression )
    (112) empty -> .
    (102) func -> . TA3RIF ID ( parameter_list ) { instruction_list }
    (103) func -> . TA3RIF ID ( ) { instruction_list }
    (106) return -> . RED ( expression )
    (91) arrfn -> . ID . ZID ( expression )
    (92) arrfn -> . ID . KBER ( array )
    (93) arrfn -> . ID . KHWI ( )
    (94) arrfn -> . ID . DKHEL ( expression , expression )
    (95) arrfn -> . ID . MSSE7 ( expression )
    (96) arrfn -> . ID . MSSE7 ( )
    (84) arrayelt -> . ID dimensions
    (87) arrayslice -> . ID [ expression : expression ]
    (88) arrayslice -> . ID [ : expression ]
    (89) arrayslice -> . ID [ expression : ]
    (90) arrayslice -> . ID [ : ]
    (82) array -> . [ arraylist ]
    (83) array -> . [ ]
    (104) appel_func -> . ID ( argument_list )
    (105) appel_func -> . ID ( )

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for TA3RIF resolved as shift
  ! shift/reduce conflict for RED resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 274
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 23
    MOJOD           shift and go to state 24
    KTEB            shift and go to state 27
    (               shift and go to state 28
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    KHATE2          shift and go to state 34
    S7I7            shift and go to state 35
    WALO            shift and go to state 36
    JEREB           shift and go to state 39
    ILA             shift and go to state 40
    LKOLA           shift and go to state 41
    MA7ED           shift and go to state 42
    DIR             shift and go to state 43
    QRA             shift and go to state 44
    TOL             shift and go to state 45
    MINUS           reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    TA3RIF          shift and go to state 46
    RED             shift and go to state 47
    [               shift and go to state 48

  ! MINUS           [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 29 ]
  ! }               [ reduce using rule 112 (empty -> .) ]
  ! KHREJ           [ reduce using rule 112 (empty -> .) ]
  ! KMEL            [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! MOJOD           [ reduce using rule 112 (empty -> .) ]
  ! KTEB            [ reduce using rule 112 (empty -> .) ]
  ! (               [ reduce using rule 112 (empty -> .) ]
  ! INT             [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
  ! STRING          [ reduce using rule 112 (empty -> .) ]
  ! KHATE2          [ reduce using rule 112 (empty -> .) ]
  ! S7I7            [ reduce using rule 112 (empty -> .) ]
  ! WALO            [ reduce using rule 112 (empty -> .) ]
  ! JEREB           [ reduce using rule 112 (empty -> .) ]
  ! ILA             [ reduce using rule 112 (empty -> .) ]
  ! LKOLA           [ reduce using rule 112 (empty -> .) ]
  ! MA7ED           [ reduce using rule 112 (empty -> .) ]
  ! DIR             [ reduce using rule 112 (empty -> .) ]
  ! QRA             [ reduce using rule 112 (empty -> .) ]
  ! TOL             [ reduce using rule 112 (empty -> .) ]
  ! TA3RIF          [ reduce using rule 112 (empty -> .) ]
  ! RED             [ reduce using rule 112 (empty -> .) ]
  ! [               [ reduce using rule 112 (empty -> .) ]

    instruction                    shift and go to state 49
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    func                           shift and go to state 20
    return                         shift and go to state 21
    arrfn                          shift and go to state 22
    arrayelt                       shift and go to state 25
    arrayslice                     shift and go to state 26
    array                          shift and go to state 37
    appel_func                     shift and go to state 38

state 269

    (10) if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .

    KHREJ           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KMEL            reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    ID              reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MOJOD           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KTEB            reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    (               reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MINUS           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    PLUS            reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    INT             reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    FLOAT           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    STRING          reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KHATE2          reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    S7I7            reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    WALO            reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    JEREB           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    ILA             reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    LKOLA           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MA7ED           reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    DIR             reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    QRA             reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    TOL             reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    TA3RIF          reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    RED             reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    [               reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    $end            reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    }               reduce using rule 10 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)


state 270

    (11) for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .

    KHREJ           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KMEL            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    ID              reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MOJOD           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KTEB            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    (               reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MINUS           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    PLUS            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    INT             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    FLOAT           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    STRING          reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KHATE2          reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    S7I7            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    WALO            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    JEREB           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    ILA             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    LKOLA           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MA7ED           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    DIR             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    QRA             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    TOL             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    TA3RIF          reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    RED             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    [               reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    $end            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    }               reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)


state 271

    (12) for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .

    KHREJ           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KMEL            reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    ID              reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MOJOD           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KTEB            reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    (               reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MINUS           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    PLUS            reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    INT             reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    FLOAT           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    STRING          reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KHATE2          reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    S7I7            reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    WALO            reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    JEREB           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    ILA             reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    LKOLA           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MA7ED           reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    DIR             reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    QRA             reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    TOL             reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    TA3RIF          reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    RED             reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    [               reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    $end            reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    }               reduce using rule 12 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)


state 272

    (13) for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .

    KHREJ           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KMEL            reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    ID              reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MOJOD           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KTEB            reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    (               reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MINUS           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    PLUS            reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    INT             reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    FLOAT           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    STRING          reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KHATE2          reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    S7I7            reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    WALO            reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    JEREB           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    ILA             reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    LKOLA           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MA7ED           reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    DIR             reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    QRA             reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    TOL             reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    TA3RIF          reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    RED             reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    [               reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    $end            reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    }               reduce using rule 13 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)


state 273

    (14) for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .

    KHREJ           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KMEL            reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    ID              reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MOJOD           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KTEB            reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    (               reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MINUS           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    PLUS            reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    INT             reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    FLOAT           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    STRING          reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KHATE2          reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    S7I7            reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    WALO            reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    JEREB           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    ILA             reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    LKOLA           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MA7ED           reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    DIR             reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    QRA             reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    TOL             reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    TA3RIF          reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    RED             reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    [               reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    $end            reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    }               reduce using rule 14 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)


state 274

    (67) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .

    KHREJ           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KMEL            reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    ID              reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MOJOD           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KTEB            reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    (               reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MINUS           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    PLUS            reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    INT             reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    FLOAT           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    STRING          reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KHATE2          reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    S7I7            reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    WALO            reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    JEREB           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    ILA             reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    LKOLA           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MA7ED           reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    DIR             reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    QRA             reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    TOL             reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    TA3RIF          reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    RED             reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    [               reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    $end            reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    }               reduce using rule 67 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KHREJ in state 0 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 0 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 0 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 0 resolved as shift
WARNING: shift/reduce conflict for WALO in state 0 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 0 resolved as shift
WARNING: shift/reduce conflict for ILA in state 0 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 0 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 0 resolved as shift
WARNING: shift/reduce conflict for DIR in state 0 resolved as shift
WARNING: shift/reduce conflict for QRA in state 0 resolved as shift
WARNING: shift/reduce conflict for TOL in state 0 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 0 resolved as shift
WARNING: shift/reduce conflict for RED in state 0 resolved as shift
WARNING: shift/reduce conflict for [ in state 0 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 2 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 2 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 2 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 2 resolved as shift
WARNING: shift/reduce conflict for WALO in state 2 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 2 resolved as shift
WARNING: shift/reduce conflict for ILA in state 2 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 2 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 2 resolved as shift
WARNING: shift/reduce conflict for DIR in state 2 resolved as shift
WARNING: shift/reduce conflict for QRA in state 2 resolved as shift
WARNING: shift/reduce conflict for TOL in state 2 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 2 resolved as shift
WARNING: shift/reduce conflict for RED in state 2 resolved as shift
WARNING: shift/reduce conflict for [ in state 2 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 9 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 9 resolved as shift
WARNING: shift/reduce conflict for [ in state 23 resolved as shift
WARNING: shift/reduce conflict for ( in state 23 resolved as shift
WARNING: shift/reduce conflict for [ in state 61 resolved as shift
WARNING: shift/reduce conflict for [ in state 69 resolved as shift
WARNING: shift/reduce conflict for ( in state 69 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 76 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 76 resolved as shift
WARNING: shift/reduce conflict for ID in state 76 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 76 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 76 resolved as shift
WARNING: shift/reduce conflict for INT in state 76 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING in state 76 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 76 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 76 resolved as shift
WARNING: shift/reduce conflict for WALO in state 76 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 76 resolved as shift
WARNING: shift/reduce conflict for ILA in state 76 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 76 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 76 resolved as shift
WARNING: shift/reduce conflict for DIR in state 76 resolved as shift
WARNING: shift/reduce conflict for QRA in state 76 resolved as shift
WARNING: shift/reduce conflict for TOL in state 76 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 76 resolved as shift
WARNING: shift/reduce conflict for RED in state 76 resolved as shift
WARNING: shift/reduce conflict for [ in state 76 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 80 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 80 resolved as shift
WARNING: shift/reduce conflict for ID in state 80 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 80 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING in state 80 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 80 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 80 resolved as shift
WARNING: shift/reduce conflict for WALO in state 80 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 80 resolved as shift
WARNING: shift/reduce conflict for ILA in state 80 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 80 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 80 resolved as shift
WARNING: shift/reduce conflict for DIR in state 80 resolved as shift
WARNING: shift/reduce conflict for QRA in state 80 resolved as shift
WARNING: shift/reduce conflict for TOL in state 80 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 80 resolved as shift
WARNING: shift/reduce conflict for RED in state 80 resolved as shift
WARNING: shift/reduce conflict for [ in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 92 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 92 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 92 resolved as shift
WARNING: shift/reduce conflict for POWER in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 93 resolved as shift
WARNING: shift/reduce conflict for POWER in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for } in state 117 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 117 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 117 resolved as shift
WARNING: shift/reduce conflict for ID in state 117 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 117 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 117 resolved as shift
WARNING: shift/reduce conflict for INT in state 117 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 117 resolved as shift
WARNING: shift/reduce conflict for STRING in state 117 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 117 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 117 resolved as shift
WARNING: shift/reduce conflict for WALO in state 117 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 117 resolved as shift
WARNING: shift/reduce conflict for ILA in state 117 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 117 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 117 resolved as shift
WARNING: shift/reduce conflict for DIR in state 117 resolved as shift
WARNING: shift/reduce conflict for QRA in state 117 resolved as shift
WARNING: shift/reduce conflict for TOL in state 117 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 117 resolved as shift
WARNING: shift/reduce conflict for RED in state 117 resolved as shift
WARNING: shift/reduce conflict for [ in state 117 resolved as shift
WARNING: shift/reduce conflict for } in state 123 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 123 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 123 resolved as shift
WARNING: shift/reduce conflict for ID in state 123 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 123 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 123 resolved as shift
WARNING: shift/reduce conflict for INT in state 123 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 123 resolved as shift
WARNING: shift/reduce conflict for STRING in state 123 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 123 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 123 resolved as shift
WARNING: shift/reduce conflict for WALO in state 123 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 123 resolved as shift
WARNING: shift/reduce conflict for ILA in state 123 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 123 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 123 resolved as shift
WARNING: shift/reduce conflict for DIR in state 123 resolved as shift
WARNING: shift/reduce conflict for QRA in state 123 resolved as shift
WARNING: shift/reduce conflict for TOL in state 123 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 123 resolved as shift
WARNING: shift/reduce conflict for RED in state 123 resolved as shift
WARNING: shift/reduce conflict for [ in state 123 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 197 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 197 resolved as shift
WARNING: shift/reduce conflict for ID in state 197 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 197 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 197 resolved as shift
WARNING: shift/reduce conflict for INT in state 197 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 197 resolved as shift
WARNING: shift/reduce conflict for STRING in state 197 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 197 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 197 resolved as shift
WARNING: shift/reduce conflict for WALO in state 197 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 197 resolved as shift
WARNING: shift/reduce conflict for ILA in state 197 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 197 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 197 resolved as shift
WARNING: shift/reduce conflict for DIR in state 197 resolved as shift
WARNING: shift/reduce conflict for QRA in state 197 resolved as shift
WARNING: shift/reduce conflict for TOL in state 197 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 197 resolved as shift
WARNING: shift/reduce conflict for RED in state 197 resolved as shift
WARNING: shift/reduce conflict for [ in state 197 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 200 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 200 resolved as shift
WARNING: shift/reduce conflict for ID in state 200 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 200 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 200 resolved as shift
WARNING: shift/reduce conflict for INT in state 200 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 200 resolved as shift
WARNING: shift/reduce conflict for STRING in state 200 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 200 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 200 resolved as shift
WARNING: shift/reduce conflict for WALO in state 200 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 200 resolved as shift
WARNING: shift/reduce conflict for ILA in state 200 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 200 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 200 resolved as shift
WARNING: shift/reduce conflict for DIR in state 200 resolved as shift
WARNING: shift/reduce conflict for QRA in state 200 resolved as shift
WARNING: shift/reduce conflict for TOL in state 200 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 200 resolved as shift
WARNING: shift/reduce conflict for RED in state 200 resolved as shift
WARNING: shift/reduce conflict for [ in state 200 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 204 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 204 resolved as shift
WARNING: shift/reduce conflict for ID in state 204 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 204 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 204 resolved as shift
WARNING: shift/reduce conflict for INT in state 204 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 204 resolved as shift
WARNING: shift/reduce conflict for STRING in state 204 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 204 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 204 resolved as shift
WARNING: shift/reduce conflict for WALO in state 204 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 204 resolved as shift
WARNING: shift/reduce conflict for ILA in state 204 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 204 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 204 resolved as shift
WARNING: shift/reduce conflict for DIR in state 204 resolved as shift
WARNING: shift/reduce conflict for QRA in state 204 resolved as shift
WARNING: shift/reduce conflict for TOL in state 204 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 204 resolved as shift
WARNING: shift/reduce conflict for RED in state 204 resolved as shift
WARNING: shift/reduce conflict for [ in state 204 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 216 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 216 resolved as shift
WARNING: shift/reduce conflict for ID in state 216 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 216 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 216 resolved as shift
WARNING: shift/reduce conflict for INT in state 216 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 216 resolved as shift
WARNING: shift/reduce conflict for STRING in state 216 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 216 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 216 resolved as shift
WARNING: shift/reduce conflict for WALO in state 216 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 216 resolved as shift
WARNING: shift/reduce conflict for ILA in state 216 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 216 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 216 resolved as shift
WARNING: shift/reduce conflict for DIR in state 216 resolved as shift
WARNING: shift/reduce conflict for QRA in state 216 resolved as shift
WARNING: shift/reduce conflict for TOL in state 216 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 216 resolved as shift
WARNING: shift/reduce conflict for RED in state 216 resolved as shift
WARNING: shift/reduce conflict for [ in state 216 resolved as shift
WARNING: shift/reduce conflict for } in state 217 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 217 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 217 resolved as shift
WARNING: shift/reduce conflict for ID in state 217 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 217 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 217 resolved as shift
WARNING: shift/reduce conflict for INT in state 217 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 217 resolved as shift
WARNING: shift/reduce conflict for STRING in state 217 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 217 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 217 resolved as shift
WARNING: shift/reduce conflict for WALO in state 217 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 217 resolved as shift
WARNING: shift/reduce conflict for ILA in state 217 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 217 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 217 resolved as shift
WARNING: shift/reduce conflict for DIR in state 217 resolved as shift
WARNING: shift/reduce conflict for QRA in state 217 resolved as shift
WARNING: shift/reduce conflict for TOL in state 217 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 217 resolved as shift
WARNING: shift/reduce conflict for RED in state 217 resolved as shift
WARNING: shift/reduce conflict for [ in state 217 resolved as shift
WARNING: shift/reduce conflict for } in state 220 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 220 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 220 resolved as shift
WARNING: shift/reduce conflict for ID in state 220 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 220 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 220 resolved as shift
WARNING: shift/reduce conflict for INT in state 220 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 220 resolved as shift
WARNING: shift/reduce conflict for STRING in state 220 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 220 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 220 resolved as shift
WARNING: shift/reduce conflict for WALO in state 220 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 220 resolved as shift
WARNING: shift/reduce conflict for ILA in state 220 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 220 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 220 resolved as shift
WARNING: shift/reduce conflict for DIR in state 220 resolved as shift
WARNING: shift/reduce conflict for QRA in state 220 resolved as shift
WARNING: shift/reduce conflict for TOL in state 220 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 220 resolved as shift
WARNING: shift/reduce conflict for RED in state 220 resolved as shift
WARNING: shift/reduce conflict for [ in state 220 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 222 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 222 resolved as shift
WARNING: shift/reduce conflict for ID in state 222 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 222 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 222 resolved as shift
WARNING: shift/reduce conflict for INT in state 222 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 222 resolved as shift
WARNING: shift/reduce conflict for STRING in state 222 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 222 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 222 resolved as shift
WARNING: shift/reduce conflict for WALO in state 222 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 222 resolved as shift
WARNING: shift/reduce conflict for ILA in state 222 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 222 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 222 resolved as shift
WARNING: shift/reduce conflict for DIR in state 222 resolved as shift
WARNING: shift/reduce conflict for QRA in state 222 resolved as shift
WARNING: shift/reduce conflict for TOL in state 222 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 222 resolved as shift
WARNING: shift/reduce conflict for RED in state 222 resolved as shift
WARNING: shift/reduce conflict for [ in state 222 resolved as shift
WARNING: shift/reduce conflict for } in state 224 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 224 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 224 resolved as shift
WARNING: shift/reduce conflict for ID in state 224 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 224 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 224 resolved as shift
WARNING: shift/reduce conflict for INT in state 224 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 224 resolved as shift
WARNING: shift/reduce conflict for STRING in state 224 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 224 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 224 resolved as shift
WARNING: shift/reduce conflict for WALO in state 224 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 224 resolved as shift
WARNING: shift/reduce conflict for ILA in state 224 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 224 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 224 resolved as shift
WARNING: shift/reduce conflict for DIR in state 224 resolved as shift
WARNING: shift/reduce conflict for QRA in state 224 resolved as shift
WARNING: shift/reduce conflict for TOL in state 224 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 224 resolved as shift
WARNING: shift/reduce conflict for RED in state 224 resolved as shift
WARNING: shift/reduce conflict for [ in state 224 resolved as shift
WARNING: shift/reduce conflict for } in state 232 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 232 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 232 resolved as shift
WARNING: shift/reduce conflict for ID in state 232 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 232 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 232 resolved as shift
WARNING: shift/reduce conflict for INT in state 232 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 232 resolved as shift
WARNING: shift/reduce conflict for STRING in state 232 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 232 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 232 resolved as shift
WARNING: shift/reduce conflict for WALO in state 232 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 232 resolved as shift
WARNING: shift/reduce conflict for ILA in state 232 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 232 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 232 resolved as shift
WARNING: shift/reduce conflict for DIR in state 232 resolved as shift
WARNING: shift/reduce conflict for QRA in state 232 resolved as shift
WARNING: shift/reduce conflict for TOL in state 232 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 232 resolved as shift
WARNING: shift/reduce conflict for RED in state 232 resolved as shift
WARNING: shift/reduce conflict for [ in state 232 resolved as shift
WARNING: shift/reduce conflict for } in state 241 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 241 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 241 resolved as shift
WARNING: shift/reduce conflict for ID in state 241 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 241 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 241 resolved as shift
WARNING: shift/reduce conflict for INT in state 241 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 241 resolved as shift
WARNING: shift/reduce conflict for STRING in state 241 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 241 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 241 resolved as shift
WARNING: shift/reduce conflict for WALO in state 241 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 241 resolved as shift
WARNING: shift/reduce conflict for ILA in state 241 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 241 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 241 resolved as shift
WARNING: shift/reduce conflict for DIR in state 241 resolved as shift
WARNING: shift/reduce conflict for QRA in state 241 resolved as shift
WARNING: shift/reduce conflict for TOL in state 241 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 241 resolved as shift
WARNING: shift/reduce conflict for RED in state 241 resolved as shift
WARNING: shift/reduce conflict for [ in state 241 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 257 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 257 resolved as shift
WARNING: shift/reduce conflict for ID in state 257 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 257 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 257 resolved as shift
WARNING: shift/reduce conflict for INT in state 257 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 257 resolved as shift
WARNING: shift/reduce conflict for STRING in state 257 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 257 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 257 resolved as shift
WARNING: shift/reduce conflict for WALO in state 257 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 257 resolved as shift
WARNING: shift/reduce conflict for ILA in state 257 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 257 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 257 resolved as shift
WARNING: shift/reduce conflict for DIR in state 257 resolved as shift
WARNING: shift/reduce conflict for QRA in state 257 resolved as shift
WARNING: shift/reduce conflict for TOL in state 257 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 257 resolved as shift
WARNING: shift/reduce conflict for RED in state 257 resolved as shift
WARNING: shift/reduce conflict for [ in state 257 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 258 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 258 resolved as shift
WARNING: shift/reduce conflict for ID in state 258 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 258 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 258 resolved as shift
WARNING: shift/reduce conflict for INT in state 258 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 258 resolved as shift
WARNING: shift/reduce conflict for STRING in state 258 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 258 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 258 resolved as shift
WARNING: shift/reduce conflict for WALO in state 258 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 258 resolved as shift
WARNING: shift/reduce conflict for ILA in state 258 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 258 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 258 resolved as shift
WARNING: shift/reduce conflict for DIR in state 258 resolved as shift
WARNING: shift/reduce conflict for QRA in state 258 resolved as shift
WARNING: shift/reduce conflict for TOL in state 258 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 258 resolved as shift
WARNING: shift/reduce conflict for RED in state 258 resolved as shift
WARNING: shift/reduce conflict for [ in state 258 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 259 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 259 resolved as shift
WARNING: shift/reduce conflict for ID in state 259 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 259 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 259 resolved as shift
WARNING: shift/reduce conflict for INT in state 259 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 259 resolved as shift
WARNING: shift/reduce conflict for STRING in state 259 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 259 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 259 resolved as shift
WARNING: shift/reduce conflict for WALO in state 259 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 259 resolved as shift
WARNING: shift/reduce conflict for ILA in state 259 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 259 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 259 resolved as shift
WARNING: shift/reduce conflict for DIR in state 259 resolved as shift
WARNING: shift/reduce conflict for QRA in state 259 resolved as shift
WARNING: shift/reduce conflict for TOL in state 259 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 259 resolved as shift
WARNING: shift/reduce conflict for RED in state 259 resolved as shift
WARNING: shift/reduce conflict for [ in state 259 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 260 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 260 resolved as shift
WARNING: shift/reduce conflict for ID in state 260 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 260 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 260 resolved as shift
WARNING: shift/reduce conflict for INT in state 260 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 260 resolved as shift
WARNING: shift/reduce conflict for STRING in state 260 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 260 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 260 resolved as shift
WARNING: shift/reduce conflict for WALO in state 260 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 260 resolved as shift
WARNING: shift/reduce conflict for ILA in state 260 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 260 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 260 resolved as shift
WARNING: shift/reduce conflict for DIR in state 260 resolved as shift
WARNING: shift/reduce conflict for QRA in state 260 resolved as shift
WARNING: shift/reduce conflict for TOL in state 260 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 260 resolved as shift
WARNING: shift/reduce conflict for RED in state 260 resolved as shift
WARNING: shift/reduce conflict for [ in state 260 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 261 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 261 resolved as shift
WARNING: shift/reduce conflict for ID in state 261 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 261 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 261 resolved as shift
WARNING: shift/reduce conflict for INT in state 261 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 261 resolved as shift
WARNING: shift/reduce conflict for STRING in state 261 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 261 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 261 resolved as shift
WARNING: shift/reduce conflict for WALO in state 261 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 261 resolved as shift
WARNING: shift/reduce conflict for ILA in state 261 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 261 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 261 resolved as shift
WARNING: shift/reduce conflict for DIR in state 261 resolved as shift
WARNING: shift/reduce conflict for QRA in state 261 resolved as shift
WARNING: shift/reduce conflict for TOL in state 261 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 261 resolved as shift
WARNING: shift/reduce conflict for RED in state 261 resolved as shift
WARNING: shift/reduce conflict for [ in state 261 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 262 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 262 resolved as shift
WARNING: shift/reduce conflict for ID in state 262 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 262 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 262 resolved as shift
WARNING: shift/reduce conflict for INT in state 262 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 262 resolved as shift
WARNING: shift/reduce conflict for STRING in state 262 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 262 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 262 resolved as shift
WARNING: shift/reduce conflict for WALO in state 262 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 262 resolved as shift
WARNING: shift/reduce conflict for ILA in state 262 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 262 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 262 resolved as shift
WARNING: shift/reduce conflict for DIR in state 262 resolved as shift
WARNING: shift/reduce conflict for QRA in state 262 resolved as shift
WARNING: shift/reduce conflict for TOL in state 262 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 262 resolved as shift
WARNING: shift/reduce conflict for RED in state 262 resolved as shift
WARNING: shift/reduce conflict for [ in state 262 resolved as shift
WARNING: shift/reduce conflict for } in state 263 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 263 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 263 resolved as shift
WARNING: shift/reduce conflict for ID in state 263 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 263 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 263 resolved as shift
WARNING: shift/reduce conflict for INT in state 263 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 263 resolved as shift
WARNING: shift/reduce conflict for STRING in state 263 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 263 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 263 resolved as shift
WARNING: shift/reduce conflict for WALO in state 263 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 263 resolved as shift
WARNING: shift/reduce conflict for ILA in state 263 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 263 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 263 resolved as shift
WARNING: shift/reduce conflict for DIR in state 263 resolved as shift
WARNING: shift/reduce conflict for QRA in state 263 resolved as shift
WARNING: shift/reduce conflict for TOL in state 263 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 263 resolved as shift
WARNING: shift/reduce conflict for RED in state 263 resolved as shift
WARNING: shift/reduce conflict for [ in state 263 resolved as shift
WARNING: shift/reduce conflict for } in state 264 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 264 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 264 resolved as shift
WARNING: shift/reduce conflict for ID in state 264 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 264 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 264 resolved as shift
WARNING: shift/reduce conflict for INT in state 264 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 264 resolved as shift
WARNING: shift/reduce conflict for STRING in state 264 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 264 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 264 resolved as shift
WARNING: shift/reduce conflict for WALO in state 264 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 264 resolved as shift
WARNING: shift/reduce conflict for ILA in state 264 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 264 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 264 resolved as shift
WARNING: shift/reduce conflict for DIR in state 264 resolved as shift
WARNING: shift/reduce conflict for QRA in state 264 resolved as shift
WARNING: shift/reduce conflict for TOL in state 264 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 264 resolved as shift
WARNING: shift/reduce conflict for RED in state 264 resolved as shift
WARNING: shift/reduce conflict for [ in state 264 resolved as shift
WARNING: shift/reduce conflict for } in state 265 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 265 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 265 resolved as shift
WARNING: shift/reduce conflict for ID in state 265 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 265 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 265 resolved as shift
WARNING: shift/reduce conflict for INT in state 265 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 265 resolved as shift
WARNING: shift/reduce conflict for STRING in state 265 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 265 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 265 resolved as shift
WARNING: shift/reduce conflict for WALO in state 265 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 265 resolved as shift
WARNING: shift/reduce conflict for ILA in state 265 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 265 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 265 resolved as shift
WARNING: shift/reduce conflict for DIR in state 265 resolved as shift
WARNING: shift/reduce conflict for QRA in state 265 resolved as shift
WARNING: shift/reduce conflict for TOL in state 265 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 265 resolved as shift
WARNING: shift/reduce conflict for RED in state 265 resolved as shift
WARNING: shift/reduce conflict for [ in state 265 resolved as shift
WARNING: shift/reduce conflict for } in state 266 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 266 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 266 resolved as shift
WARNING: shift/reduce conflict for ID in state 266 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 266 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 266 resolved as shift
WARNING: shift/reduce conflict for INT in state 266 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 266 resolved as shift
WARNING: shift/reduce conflict for STRING in state 266 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 266 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 266 resolved as shift
WARNING: shift/reduce conflict for WALO in state 266 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 266 resolved as shift
WARNING: shift/reduce conflict for ILA in state 266 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 266 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 266 resolved as shift
WARNING: shift/reduce conflict for DIR in state 266 resolved as shift
WARNING: shift/reduce conflict for QRA in state 266 resolved as shift
WARNING: shift/reduce conflict for TOL in state 266 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 266 resolved as shift
WARNING: shift/reduce conflict for RED in state 266 resolved as shift
WARNING: shift/reduce conflict for [ in state 266 resolved as shift
WARNING: shift/reduce conflict for } in state 267 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 267 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 267 resolved as shift
WARNING: shift/reduce conflict for ID in state 267 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 267 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 267 resolved as shift
WARNING: shift/reduce conflict for INT in state 267 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 267 resolved as shift
WARNING: shift/reduce conflict for STRING in state 267 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 267 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 267 resolved as shift
WARNING: shift/reduce conflict for WALO in state 267 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 267 resolved as shift
WARNING: shift/reduce conflict for ILA in state 267 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 267 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 267 resolved as shift
WARNING: shift/reduce conflict for DIR in state 267 resolved as shift
WARNING: shift/reduce conflict for QRA in state 267 resolved as shift
WARNING: shift/reduce conflict for TOL in state 267 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 267 resolved as shift
WARNING: shift/reduce conflict for RED in state 267 resolved as shift
WARNING: shift/reduce conflict for [ in state 267 resolved as shift
WARNING: shift/reduce conflict for } in state 268 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 268 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 268 resolved as shift
WARNING: shift/reduce conflict for ID in state 268 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 268 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 268 resolved as shift
WARNING: shift/reduce conflict for INT in state 268 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 268 resolved as shift
WARNING: shift/reduce conflict for STRING in state 268 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 268 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 268 resolved as shift
WARNING: shift/reduce conflict for WALO in state 268 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 268 resolved as shift
WARNING: shift/reduce conflict for ILA in state 268 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 268 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 268 resolved as shift
WARNING: shift/reduce conflict for DIR in state 268 resolved as shift
WARNING: shift/reduce conflict for QRA in state 268 resolved as shift
WARNING: shift/reduce conflict for TOL in state 268 resolved as shift
WARNING: shift/reduce conflict for TA3RIF in state 268 resolved as shift
WARNING: shift/reduce conflict for RED in state 268 resolved as shift
WARNING: shift/reduce conflict for [ in state 268 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (program -> instruction_list)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 18 resolved using rule (instruction -> len)
WARNING: rejected rule (expression -> len) in state 18
WARNING: reduce/reduce conflict in state 22 resolved using rule (instruction -> arrfn)
WARNING: rejected rule (expression -> arrfn) in state 22
