Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    DOUZ
    3AREF
    RED
    TELE3
    NAW3

Grammar

Rule 0     S' -> program
Rule 1     program -> instruction_list
Rule 2     incrementation -> ID INCREMENTATION
Rule 3     decrementation -> ID DECREMENTATION
Rule 4     var_assign -> ID EQUALS expression
Rule 5     var_assign -> ID EQUALS input
Rule 6     var_assign -> MOJOD var_assign
Rule 7     arrayelt_assign -> arrayelt EQUALS expression
Rule 8     if -> ILA ( condition ) { instruction_list }
Rule 9     if -> ILA ( condition ) { instruction_list } WLA { instruction_list }
Rule 10    for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
Rule 11    for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
Rule 12    for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list }
Rule 13    for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list }
Rule 14    while -> MA7ED ( condition ) { instruction_list }
Rule 15    doWhile -> DIR { instruction_list } MA7ED ( condition )
Rule 16    instruction -> var_assign
Rule 17    instruction -> arrayelt_assign
Rule 18    instruction -> printing
Rule 19    instruction -> incrementation
Rule 20    instruction -> decrementation
Rule 21    instruction -> expression
Rule 22    instruction -> try
Rule 23    instruction -> if
Rule 24    instruction -> for
Rule 25    instruction -> KHREJ
Rule 26    instruction -> KMEL
Rule 27    instruction -> while
Rule 28    instruction -> doWhile
Rule 29    instruction -> input
Rule 30    instruction -> len
Rule 31    instruction -> empty
Rule 32    instruction_list -> instruction
Rule 33    instruction_list -> instruction_list instruction
Rule 34    condition -> ( condition ) AW ( condition )
Rule 35    condition -> ( condition ) WA ( condition )
Rule 36    condition -> condition WA ( condition )
Rule 37    condition -> condition AW ( condition )
Rule 38    condition -> ( condition ) WA condition
Rule 39    condition -> ( condition ) AW condition
Rule 40    condition -> L3AKSS ( condition )
Rule 41    condition -> expression SUP expression
Rule 42    condition -> expression INF expression
Rule 43    condition -> expression EQUALSCOMP expression
Rule 44    condition -> expression SUPEQUALS expression
Rule 45    condition -> expression INFEQUALS expression
Rule 46    condition -> expression DIFFERENT expression
Rule 47    condition -> expression
Rule 48    expression -> expression PLUS expression
Rule 49    expression -> expression MINUS expression
Rule 50    expression -> expression TIMES expression
Rule 51    expression -> expression DIVIDE expression
Rule 52    expression -> ( expression )
Rule 53    expression -> MINUS expression
Rule 54    expression -> PLUS expression
Rule 55    expression -> ID
Rule 56    input -> QRA ( expression )
Rule 57    input -> QRA ( )
Rule 58    try -> JEREB { instruction_list } MASD9CH { instruction_list }
Rule 59    try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
Rule 60    expression -> INT
Rule 61    expression -> FLOAT
Rule 62    expression -> STRING
Rule 63    expression -> KHATE2
Rule 64    expression -> S7I7
Rule 65    expression -> WALO
Rule 66    expression -> array
Rule 67    expression -> arrayelt
Rule 68    expression -> arrayslice
Rule 69    arraylist -> expression
Rule 70    arraylist -> arraylist , expression
Rule 71    array -> [ arraylist ]
Rule 72    array -> [ ]
Rule 73    arrayelt -> ID dimensions
Rule 74    dimensions -> [ expression ]
Rule 75    dimensions -> dimensions [ expression ]
Rule 76    arrayslice -> ID [ expression : expression ]
Rule 77    arrayslice -> ID [ : expression ]
Rule 78    arrayslice -> ID [ expression : ]
Rule 79    arrayslice -> ID [ : ]
Rule 80    printing -> KTEB ( condition )
Rule 81    printing -> KTEB ( incrementation )
Rule 82    printing -> KTEB ( decrementation )
Rule 83    len -> TOL ( expression )
Rule 84    empty -> <empty>

Terminals, with rules where they appear

(                    : 8 9 10 11 12 13 14 15 34 34 35 35 36 37 38 39 40 52 56 57 80 81 82 83
)                    : 8 9 10 11 12 13 14 15 34 34 35 35 36 37 38 39 40 52 56 57 80 81 82 83
,                    : 70
3AREF                : 
:                    : 76 77 78 79
;                    : 10 10 11 11 12 12 13 13
AKHIRAN              : 59
AW                   : 34 37 39
DECREMENTATION       : 3
DIFFERENT            : 46
DIR                  : 15
DIVIDE               : 51
DOUZ                 : 
EQUALS               : 4 5 7
EQUALSCOMP           : 43
FLOAT                : 61
ID                   : 2 3 4 5 55 73 76 77 78 79
ILA                  : 8 9
INCREMENTATION       : 2
INF                  : 42
INFEQUALS            : 45
INT                  : 60
JEREB                : 58 59
KHATE2               : 63
KHREJ                : 25
KMEL                 : 26
KTEB                 : 80 81 82
L3AKSS               : 40
LKOLA                : 10 11 12 13
MA7ED                : 14 15
MASD9CH              : 58 59
MINUS                : 49 53
MOJOD                : 6
NAW3                 : 
PLUS                 : 48 54
QRA                  : 56 57
RED                  : 
S7I7                 : 64
STRING               : 62
SUP                  : 41
SUPEQUALS            : 44
TELE3                : 
TIMES                : 50
TOL                  : 83
WA                   : 35 36 38
WALO                 : 65
WLA                  : 9
[                    : 71 72 74 75 76 77 78 79
]                    : 71 72 74 75 76 77 78 79
error                : 
{                    : 8 9 9 10 11 12 13 14 15 58 58 59 59 59
}                    : 8 9 9 10 11 12 13 14 15 58 58 59 59 59

Nonterminals, with rules where they appear

array                : 66
arrayelt             : 7 67
arrayelt_assign      : 17
arraylist            : 70 71
arrayslice           : 68
condition            : 8 9 10 11 12 13 14 15 34 34 35 35 36 36 37 37 38 38 39 39 40 80
decrementation       : 11 13 20 82
dimensions           : 73 75
doWhile              : 28
empty                : 31
expression           : 4 7 12 13 21 41 41 42 42 43 43 44 44 45 45 46 46 47 48 48 49 49 50 50 51 51 52 53 54 56 69 70 74 75 76 76 77 78 83
for                  : 24
if                   : 23
incrementation       : 10 12 19 81
input                : 5 29
instruction          : 32 33
instruction_list     : 1 8 9 9 10 11 12 13 14 15 33 58 58 59 59 59
len                  : 30
printing             : 18
program              : 0
try                  : 22
var_assign           : 6 10 11 16
while                : 27

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instruction_list
    (32) instruction_list -> . instruction
    (33) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    $end            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    program                        shift and go to state 1
    instruction_list               shift and go to state 2
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 1

    (0) S' -> program .



state 2

    (1) program -> instruction_list .
    (33) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (program -> instruction_list .)
  ! shift/reduce conflict for [ resolved as shift
    $end            reduce using rule 1 (program -> instruction_list .)
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]
  ! $end            [ reduce using rule 84 (empty -> .) ]

    instruction                    shift and go to state 43
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 3

    (32) instruction_list -> instruction .

    KHREJ           reduce using rule 32 (instruction_list -> instruction .)
    KMEL            reduce using rule 32 (instruction_list -> instruction .)
    ID              reduce using rule 32 (instruction_list -> instruction .)
    MOJOD           reduce using rule 32 (instruction_list -> instruction .)
    KTEB            reduce using rule 32 (instruction_list -> instruction .)
    (               reduce using rule 32 (instruction_list -> instruction .)
    MINUS           reduce using rule 32 (instruction_list -> instruction .)
    PLUS            reduce using rule 32 (instruction_list -> instruction .)
    INT             reduce using rule 32 (instruction_list -> instruction .)
    FLOAT           reduce using rule 32 (instruction_list -> instruction .)
    STRING          reduce using rule 32 (instruction_list -> instruction .)
    KHATE2          reduce using rule 32 (instruction_list -> instruction .)
    S7I7            reduce using rule 32 (instruction_list -> instruction .)
    WALO            reduce using rule 32 (instruction_list -> instruction .)
    JEREB           reduce using rule 32 (instruction_list -> instruction .)
    ILA             reduce using rule 32 (instruction_list -> instruction .)
    LKOLA           reduce using rule 32 (instruction_list -> instruction .)
    MA7ED           reduce using rule 32 (instruction_list -> instruction .)
    DIR             reduce using rule 32 (instruction_list -> instruction .)
    QRA             reduce using rule 32 (instruction_list -> instruction .)
    TOL             reduce using rule 32 (instruction_list -> instruction .)
    [               reduce using rule 32 (instruction_list -> instruction .)
    $end            reduce using rule 32 (instruction_list -> instruction .)
    }               reduce using rule 32 (instruction_list -> instruction .)


state 4

    (16) instruction -> var_assign .

    KHREJ           reduce using rule 16 (instruction -> var_assign .)
    KMEL            reduce using rule 16 (instruction -> var_assign .)
    ID              reduce using rule 16 (instruction -> var_assign .)
    MOJOD           reduce using rule 16 (instruction -> var_assign .)
    KTEB            reduce using rule 16 (instruction -> var_assign .)
    (               reduce using rule 16 (instruction -> var_assign .)
    MINUS           reduce using rule 16 (instruction -> var_assign .)
    PLUS            reduce using rule 16 (instruction -> var_assign .)
    INT             reduce using rule 16 (instruction -> var_assign .)
    FLOAT           reduce using rule 16 (instruction -> var_assign .)
    STRING          reduce using rule 16 (instruction -> var_assign .)
    KHATE2          reduce using rule 16 (instruction -> var_assign .)
    S7I7            reduce using rule 16 (instruction -> var_assign .)
    WALO            reduce using rule 16 (instruction -> var_assign .)
    JEREB           reduce using rule 16 (instruction -> var_assign .)
    ILA             reduce using rule 16 (instruction -> var_assign .)
    LKOLA           reduce using rule 16 (instruction -> var_assign .)
    MA7ED           reduce using rule 16 (instruction -> var_assign .)
    DIR             reduce using rule 16 (instruction -> var_assign .)
    QRA             reduce using rule 16 (instruction -> var_assign .)
    TOL             reduce using rule 16 (instruction -> var_assign .)
    [               reduce using rule 16 (instruction -> var_assign .)
    $end            reduce using rule 16 (instruction -> var_assign .)
    }               reduce using rule 16 (instruction -> var_assign .)


state 5

    (17) instruction -> arrayelt_assign .

    KHREJ           reduce using rule 17 (instruction -> arrayelt_assign .)
    KMEL            reduce using rule 17 (instruction -> arrayelt_assign .)
    ID              reduce using rule 17 (instruction -> arrayelt_assign .)
    MOJOD           reduce using rule 17 (instruction -> arrayelt_assign .)
    KTEB            reduce using rule 17 (instruction -> arrayelt_assign .)
    (               reduce using rule 17 (instruction -> arrayelt_assign .)
    MINUS           reduce using rule 17 (instruction -> arrayelt_assign .)
    PLUS            reduce using rule 17 (instruction -> arrayelt_assign .)
    INT             reduce using rule 17 (instruction -> arrayelt_assign .)
    FLOAT           reduce using rule 17 (instruction -> arrayelt_assign .)
    STRING          reduce using rule 17 (instruction -> arrayelt_assign .)
    KHATE2          reduce using rule 17 (instruction -> arrayelt_assign .)
    S7I7            reduce using rule 17 (instruction -> arrayelt_assign .)
    WALO            reduce using rule 17 (instruction -> arrayelt_assign .)
    JEREB           reduce using rule 17 (instruction -> arrayelt_assign .)
    ILA             reduce using rule 17 (instruction -> arrayelt_assign .)
    LKOLA           reduce using rule 17 (instruction -> arrayelt_assign .)
    MA7ED           reduce using rule 17 (instruction -> arrayelt_assign .)
    DIR             reduce using rule 17 (instruction -> arrayelt_assign .)
    QRA             reduce using rule 17 (instruction -> arrayelt_assign .)
    TOL             reduce using rule 17 (instruction -> arrayelt_assign .)
    [               reduce using rule 17 (instruction -> arrayelt_assign .)
    $end            reduce using rule 17 (instruction -> arrayelt_assign .)
    }               reduce using rule 17 (instruction -> arrayelt_assign .)


state 6

    (18) instruction -> printing .

    KHREJ           reduce using rule 18 (instruction -> printing .)
    KMEL            reduce using rule 18 (instruction -> printing .)
    ID              reduce using rule 18 (instruction -> printing .)
    MOJOD           reduce using rule 18 (instruction -> printing .)
    KTEB            reduce using rule 18 (instruction -> printing .)
    (               reduce using rule 18 (instruction -> printing .)
    MINUS           reduce using rule 18 (instruction -> printing .)
    PLUS            reduce using rule 18 (instruction -> printing .)
    INT             reduce using rule 18 (instruction -> printing .)
    FLOAT           reduce using rule 18 (instruction -> printing .)
    STRING          reduce using rule 18 (instruction -> printing .)
    KHATE2          reduce using rule 18 (instruction -> printing .)
    S7I7            reduce using rule 18 (instruction -> printing .)
    WALO            reduce using rule 18 (instruction -> printing .)
    JEREB           reduce using rule 18 (instruction -> printing .)
    ILA             reduce using rule 18 (instruction -> printing .)
    LKOLA           reduce using rule 18 (instruction -> printing .)
    MA7ED           reduce using rule 18 (instruction -> printing .)
    DIR             reduce using rule 18 (instruction -> printing .)
    QRA             reduce using rule 18 (instruction -> printing .)
    TOL             reduce using rule 18 (instruction -> printing .)
    [               reduce using rule 18 (instruction -> printing .)
    $end            reduce using rule 18 (instruction -> printing .)
    }               reduce using rule 18 (instruction -> printing .)


state 7

    (19) instruction -> incrementation .

    KHREJ           reduce using rule 19 (instruction -> incrementation .)
    KMEL            reduce using rule 19 (instruction -> incrementation .)
    ID              reduce using rule 19 (instruction -> incrementation .)
    MOJOD           reduce using rule 19 (instruction -> incrementation .)
    KTEB            reduce using rule 19 (instruction -> incrementation .)
    (               reduce using rule 19 (instruction -> incrementation .)
    MINUS           reduce using rule 19 (instruction -> incrementation .)
    PLUS            reduce using rule 19 (instruction -> incrementation .)
    INT             reduce using rule 19 (instruction -> incrementation .)
    FLOAT           reduce using rule 19 (instruction -> incrementation .)
    STRING          reduce using rule 19 (instruction -> incrementation .)
    KHATE2          reduce using rule 19 (instruction -> incrementation .)
    S7I7            reduce using rule 19 (instruction -> incrementation .)
    WALO            reduce using rule 19 (instruction -> incrementation .)
    JEREB           reduce using rule 19 (instruction -> incrementation .)
    ILA             reduce using rule 19 (instruction -> incrementation .)
    LKOLA           reduce using rule 19 (instruction -> incrementation .)
    MA7ED           reduce using rule 19 (instruction -> incrementation .)
    DIR             reduce using rule 19 (instruction -> incrementation .)
    QRA             reduce using rule 19 (instruction -> incrementation .)
    TOL             reduce using rule 19 (instruction -> incrementation .)
    [               reduce using rule 19 (instruction -> incrementation .)
    $end            reduce using rule 19 (instruction -> incrementation .)
    }               reduce using rule 19 (instruction -> incrementation .)


state 8

    (20) instruction -> decrementation .

    KHREJ           reduce using rule 20 (instruction -> decrementation .)
    KMEL            reduce using rule 20 (instruction -> decrementation .)
    ID              reduce using rule 20 (instruction -> decrementation .)
    MOJOD           reduce using rule 20 (instruction -> decrementation .)
    KTEB            reduce using rule 20 (instruction -> decrementation .)
    (               reduce using rule 20 (instruction -> decrementation .)
    MINUS           reduce using rule 20 (instruction -> decrementation .)
    PLUS            reduce using rule 20 (instruction -> decrementation .)
    INT             reduce using rule 20 (instruction -> decrementation .)
    FLOAT           reduce using rule 20 (instruction -> decrementation .)
    STRING          reduce using rule 20 (instruction -> decrementation .)
    KHATE2          reduce using rule 20 (instruction -> decrementation .)
    S7I7            reduce using rule 20 (instruction -> decrementation .)
    WALO            reduce using rule 20 (instruction -> decrementation .)
    JEREB           reduce using rule 20 (instruction -> decrementation .)
    ILA             reduce using rule 20 (instruction -> decrementation .)
    LKOLA           reduce using rule 20 (instruction -> decrementation .)
    MA7ED           reduce using rule 20 (instruction -> decrementation .)
    DIR             reduce using rule 20 (instruction -> decrementation .)
    QRA             reduce using rule 20 (instruction -> decrementation .)
    TOL             reduce using rule 20 (instruction -> decrementation .)
    [               reduce using rule 20 (instruction -> decrementation .)
    $end            reduce using rule 20 (instruction -> decrementation .)
    }               reduce using rule 20 (instruction -> decrementation .)


state 9

    (21) instruction -> expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 21 (instruction -> expression .)
    KMEL            reduce using rule 21 (instruction -> expression .)
    ID              reduce using rule 21 (instruction -> expression .)
    MOJOD           reduce using rule 21 (instruction -> expression .)
    KTEB            reduce using rule 21 (instruction -> expression .)
    (               reduce using rule 21 (instruction -> expression .)
    INT             reduce using rule 21 (instruction -> expression .)
    FLOAT           reduce using rule 21 (instruction -> expression .)
    STRING          reduce using rule 21 (instruction -> expression .)
    KHATE2          reduce using rule 21 (instruction -> expression .)
    S7I7            reduce using rule 21 (instruction -> expression .)
    WALO            reduce using rule 21 (instruction -> expression .)
    JEREB           reduce using rule 21 (instruction -> expression .)
    ILA             reduce using rule 21 (instruction -> expression .)
    LKOLA           reduce using rule 21 (instruction -> expression .)
    MA7ED           reduce using rule 21 (instruction -> expression .)
    DIR             reduce using rule 21 (instruction -> expression .)
    QRA             reduce using rule 21 (instruction -> expression .)
    TOL             reduce using rule 21 (instruction -> expression .)
    [               reduce using rule 21 (instruction -> expression .)
    $end            reduce using rule 21 (instruction -> expression .)
    }               reduce using rule 21 (instruction -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! MINUS           [ reduce using rule 21 (instruction -> expression .) ]
  ! PLUS            [ reduce using rule 21 (instruction -> expression .) ]


state 10

    (22) instruction -> try .

    KHREJ           reduce using rule 22 (instruction -> try .)
    KMEL            reduce using rule 22 (instruction -> try .)
    ID              reduce using rule 22 (instruction -> try .)
    MOJOD           reduce using rule 22 (instruction -> try .)
    KTEB            reduce using rule 22 (instruction -> try .)
    (               reduce using rule 22 (instruction -> try .)
    MINUS           reduce using rule 22 (instruction -> try .)
    PLUS            reduce using rule 22 (instruction -> try .)
    INT             reduce using rule 22 (instruction -> try .)
    FLOAT           reduce using rule 22 (instruction -> try .)
    STRING          reduce using rule 22 (instruction -> try .)
    KHATE2          reduce using rule 22 (instruction -> try .)
    S7I7            reduce using rule 22 (instruction -> try .)
    WALO            reduce using rule 22 (instruction -> try .)
    JEREB           reduce using rule 22 (instruction -> try .)
    ILA             reduce using rule 22 (instruction -> try .)
    LKOLA           reduce using rule 22 (instruction -> try .)
    MA7ED           reduce using rule 22 (instruction -> try .)
    DIR             reduce using rule 22 (instruction -> try .)
    QRA             reduce using rule 22 (instruction -> try .)
    TOL             reduce using rule 22 (instruction -> try .)
    [               reduce using rule 22 (instruction -> try .)
    $end            reduce using rule 22 (instruction -> try .)
    }               reduce using rule 22 (instruction -> try .)


state 11

    (23) instruction -> if .

    KHREJ           reduce using rule 23 (instruction -> if .)
    KMEL            reduce using rule 23 (instruction -> if .)
    ID              reduce using rule 23 (instruction -> if .)
    MOJOD           reduce using rule 23 (instruction -> if .)
    KTEB            reduce using rule 23 (instruction -> if .)
    (               reduce using rule 23 (instruction -> if .)
    MINUS           reduce using rule 23 (instruction -> if .)
    PLUS            reduce using rule 23 (instruction -> if .)
    INT             reduce using rule 23 (instruction -> if .)
    FLOAT           reduce using rule 23 (instruction -> if .)
    STRING          reduce using rule 23 (instruction -> if .)
    KHATE2          reduce using rule 23 (instruction -> if .)
    S7I7            reduce using rule 23 (instruction -> if .)
    WALO            reduce using rule 23 (instruction -> if .)
    JEREB           reduce using rule 23 (instruction -> if .)
    ILA             reduce using rule 23 (instruction -> if .)
    LKOLA           reduce using rule 23 (instruction -> if .)
    MA7ED           reduce using rule 23 (instruction -> if .)
    DIR             reduce using rule 23 (instruction -> if .)
    QRA             reduce using rule 23 (instruction -> if .)
    TOL             reduce using rule 23 (instruction -> if .)
    [               reduce using rule 23 (instruction -> if .)
    $end            reduce using rule 23 (instruction -> if .)
    }               reduce using rule 23 (instruction -> if .)


state 12

    (24) instruction -> for .

    KHREJ           reduce using rule 24 (instruction -> for .)
    KMEL            reduce using rule 24 (instruction -> for .)
    ID              reduce using rule 24 (instruction -> for .)
    MOJOD           reduce using rule 24 (instruction -> for .)
    KTEB            reduce using rule 24 (instruction -> for .)
    (               reduce using rule 24 (instruction -> for .)
    MINUS           reduce using rule 24 (instruction -> for .)
    PLUS            reduce using rule 24 (instruction -> for .)
    INT             reduce using rule 24 (instruction -> for .)
    FLOAT           reduce using rule 24 (instruction -> for .)
    STRING          reduce using rule 24 (instruction -> for .)
    KHATE2          reduce using rule 24 (instruction -> for .)
    S7I7            reduce using rule 24 (instruction -> for .)
    WALO            reduce using rule 24 (instruction -> for .)
    JEREB           reduce using rule 24 (instruction -> for .)
    ILA             reduce using rule 24 (instruction -> for .)
    LKOLA           reduce using rule 24 (instruction -> for .)
    MA7ED           reduce using rule 24 (instruction -> for .)
    DIR             reduce using rule 24 (instruction -> for .)
    QRA             reduce using rule 24 (instruction -> for .)
    TOL             reduce using rule 24 (instruction -> for .)
    [               reduce using rule 24 (instruction -> for .)
    $end            reduce using rule 24 (instruction -> for .)
    }               reduce using rule 24 (instruction -> for .)


state 13

    (25) instruction -> KHREJ .

    KHREJ           reduce using rule 25 (instruction -> KHREJ .)
    KMEL            reduce using rule 25 (instruction -> KHREJ .)
    ID              reduce using rule 25 (instruction -> KHREJ .)
    MOJOD           reduce using rule 25 (instruction -> KHREJ .)
    KTEB            reduce using rule 25 (instruction -> KHREJ .)
    (               reduce using rule 25 (instruction -> KHREJ .)
    MINUS           reduce using rule 25 (instruction -> KHREJ .)
    PLUS            reduce using rule 25 (instruction -> KHREJ .)
    INT             reduce using rule 25 (instruction -> KHREJ .)
    FLOAT           reduce using rule 25 (instruction -> KHREJ .)
    STRING          reduce using rule 25 (instruction -> KHREJ .)
    KHATE2          reduce using rule 25 (instruction -> KHREJ .)
    S7I7            reduce using rule 25 (instruction -> KHREJ .)
    WALO            reduce using rule 25 (instruction -> KHREJ .)
    JEREB           reduce using rule 25 (instruction -> KHREJ .)
    ILA             reduce using rule 25 (instruction -> KHREJ .)
    LKOLA           reduce using rule 25 (instruction -> KHREJ .)
    MA7ED           reduce using rule 25 (instruction -> KHREJ .)
    DIR             reduce using rule 25 (instruction -> KHREJ .)
    QRA             reduce using rule 25 (instruction -> KHREJ .)
    TOL             reduce using rule 25 (instruction -> KHREJ .)
    [               reduce using rule 25 (instruction -> KHREJ .)
    $end            reduce using rule 25 (instruction -> KHREJ .)
    }               reduce using rule 25 (instruction -> KHREJ .)


state 14

    (26) instruction -> KMEL .

    KHREJ           reduce using rule 26 (instruction -> KMEL .)
    KMEL            reduce using rule 26 (instruction -> KMEL .)
    ID              reduce using rule 26 (instruction -> KMEL .)
    MOJOD           reduce using rule 26 (instruction -> KMEL .)
    KTEB            reduce using rule 26 (instruction -> KMEL .)
    (               reduce using rule 26 (instruction -> KMEL .)
    MINUS           reduce using rule 26 (instruction -> KMEL .)
    PLUS            reduce using rule 26 (instruction -> KMEL .)
    INT             reduce using rule 26 (instruction -> KMEL .)
    FLOAT           reduce using rule 26 (instruction -> KMEL .)
    STRING          reduce using rule 26 (instruction -> KMEL .)
    KHATE2          reduce using rule 26 (instruction -> KMEL .)
    S7I7            reduce using rule 26 (instruction -> KMEL .)
    WALO            reduce using rule 26 (instruction -> KMEL .)
    JEREB           reduce using rule 26 (instruction -> KMEL .)
    ILA             reduce using rule 26 (instruction -> KMEL .)
    LKOLA           reduce using rule 26 (instruction -> KMEL .)
    MA7ED           reduce using rule 26 (instruction -> KMEL .)
    DIR             reduce using rule 26 (instruction -> KMEL .)
    QRA             reduce using rule 26 (instruction -> KMEL .)
    TOL             reduce using rule 26 (instruction -> KMEL .)
    [               reduce using rule 26 (instruction -> KMEL .)
    $end            reduce using rule 26 (instruction -> KMEL .)
    }               reduce using rule 26 (instruction -> KMEL .)


state 15

    (27) instruction -> while .

    KHREJ           reduce using rule 27 (instruction -> while .)
    KMEL            reduce using rule 27 (instruction -> while .)
    ID              reduce using rule 27 (instruction -> while .)
    MOJOD           reduce using rule 27 (instruction -> while .)
    KTEB            reduce using rule 27 (instruction -> while .)
    (               reduce using rule 27 (instruction -> while .)
    MINUS           reduce using rule 27 (instruction -> while .)
    PLUS            reduce using rule 27 (instruction -> while .)
    INT             reduce using rule 27 (instruction -> while .)
    FLOAT           reduce using rule 27 (instruction -> while .)
    STRING          reduce using rule 27 (instruction -> while .)
    KHATE2          reduce using rule 27 (instruction -> while .)
    S7I7            reduce using rule 27 (instruction -> while .)
    WALO            reduce using rule 27 (instruction -> while .)
    JEREB           reduce using rule 27 (instruction -> while .)
    ILA             reduce using rule 27 (instruction -> while .)
    LKOLA           reduce using rule 27 (instruction -> while .)
    MA7ED           reduce using rule 27 (instruction -> while .)
    DIR             reduce using rule 27 (instruction -> while .)
    QRA             reduce using rule 27 (instruction -> while .)
    TOL             reduce using rule 27 (instruction -> while .)
    [               reduce using rule 27 (instruction -> while .)
    $end            reduce using rule 27 (instruction -> while .)
    }               reduce using rule 27 (instruction -> while .)


state 16

    (28) instruction -> doWhile .

    KHREJ           reduce using rule 28 (instruction -> doWhile .)
    KMEL            reduce using rule 28 (instruction -> doWhile .)
    ID              reduce using rule 28 (instruction -> doWhile .)
    MOJOD           reduce using rule 28 (instruction -> doWhile .)
    KTEB            reduce using rule 28 (instruction -> doWhile .)
    (               reduce using rule 28 (instruction -> doWhile .)
    MINUS           reduce using rule 28 (instruction -> doWhile .)
    PLUS            reduce using rule 28 (instruction -> doWhile .)
    INT             reduce using rule 28 (instruction -> doWhile .)
    FLOAT           reduce using rule 28 (instruction -> doWhile .)
    STRING          reduce using rule 28 (instruction -> doWhile .)
    KHATE2          reduce using rule 28 (instruction -> doWhile .)
    S7I7            reduce using rule 28 (instruction -> doWhile .)
    WALO            reduce using rule 28 (instruction -> doWhile .)
    JEREB           reduce using rule 28 (instruction -> doWhile .)
    ILA             reduce using rule 28 (instruction -> doWhile .)
    LKOLA           reduce using rule 28 (instruction -> doWhile .)
    MA7ED           reduce using rule 28 (instruction -> doWhile .)
    DIR             reduce using rule 28 (instruction -> doWhile .)
    QRA             reduce using rule 28 (instruction -> doWhile .)
    TOL             reduce using rule 28 (instruction -> doWhile .)
    [               reduce using rule 28 (instruction -> doWhile .)
    $end            reduce using rule 28 (instruction -> doWhile .)
    }               reduce using rule 28 (instruction -> doWhile .)


state 17

    (29) instruction -> input .

    KHREJ           reduce using rule 29 (instruction -> input .)
    KMEL            reduce using rule 29 (instruction -> input .)
    ID              reduce using rule 29 (instruction -> input .)
    MOJOD           reduce using rule 29 (instruction -> input .)
    KTEB            reduce using rule 29 (instruction -> input .)
    (               reduce using rule 29 (instruction -> input .)
    MINUS           reduce using rule 29 (instruction -> input .)
    PLUS            reduce using rule 29 (instruction -> input .)
    INT             reduce using rule 29 (instruction -> input .)
    FLOAT           reduce using rule 29 (instruction -> input .)
    STRING          reduce using rule 29 (instruction -> input .)
    KHATE2          reduce using rule 29 (instruction -> input .)
    S7I7            reduce using rule 29 (instruction -> input .)
    WALO            reduce using rule 29 (instruction -> input .)
    JEREB           reduce using rule 29 (instruction -> input .)
    ILA             reduce using rule 29 (instruction -> input .)
    LKOLA           reduce using rule 29 (instruction -> input .)
    MA7ED           reduce using rule 29 (instruction -> input .)
    DIR             reduce using rule 29 (instruction -> input .)
    QRA             reduce using rule 29 (instruction -> input .)
    TOL             reduce using rule 29 (instruction -> input .)
    [               reduce using rule 29 (instruction -> input .)
    $end            reduce using rule 29 (instruction -> input .)
    }               reduce using rule 29 (instruction -> input .)


state 18

    (30) instruction -> len .

    KHREJ           reduce using rule 30 (instruction -> len .)
    KMEL            reduce using rule 30 (instruction -> len .)
    ID              reduce using rule 30 (instruction -> len .)
    MOJOD           reduce using rule 30 (instruction -> len .)
    KTEB            reduce using rule 30 (instruction -> len .)
    (               reduce using rule 30 (instruction -> len .)
    MINUS           reduce using rule 30 (instruction -> len .)
    PLUS            reduce using rule 30 (instruction -> len .)
    INT             reduce using rule 30 (instruction -> len .)
    FLOAT           reduce using rule 30 (instruction -> len .)
    STRING          reduce using rule 30 (instruction -> len .)
    KHATE2          reduce using rule 30 (instruction -> len .)
    S7I7            reduce using rule 30 (instruction -> len .)
    WALO            reduce using rule 30 (instruction -> len .)
    JEREB           reduce using rule 30 (instruction -> len .)
    ILA             reduce using rule 30 (instruction -> len .)
    LKOLA           reduce using rule 30 (instruction -> len .)
    MA7ED           reduce using rule 30 (instruction -> len .)
    DIR             reduce using rule 30 (instruction -> len .)
    QRA             reduce using rule 30 (instruction -> len .)
    TOL             reduce using rule 30 (instruction -> len .)
    [               reduce using rule 30 (instruction -> len .)
    $end            reduce using rule 30 (instruction -> len .)
    }               reduce using rule 30 (instruction -> len .)


state 19

    (31) instruction -> empty .

    KHREJ           reduce using rule 31 (instruction -> empty .)
    KMEL            reduce using rule 31 (instruction -> empty .)
    ID              reduce using rule 31 (instruction -> empty .)
    MOJOD           reduce using rule 31 (instruction -> empty .)
    KTEB            reduce using rule 31 (instruction -> empty .)
    (               reduce using rule 31 (instruction -> empty .)
    MINUS           reduce using rule 31 (instruction -> empty .)
    PLUS            reduce using rule 31 (instruction -> empty .)
    INT             reduce using rule 31 (instruction -> empty .)
    FLOAT           reduce using rule 31 (instruction -> empty .)
    STRING          reduce using rule 31 (instruction -> empty .)
    KHATE2          reduce using rule 31 (instruction -> empty .)
    S7I7            reduce using rule 31 (instruction -> empty .)
    WALO            reduce using rule 31 (instruction -> empty .)
    JEREB           reduce using rule 31 (instruction -> empty .)
    ILA             reduce using rule 31 (instruction -> empty .)
    LKOLA           reduce using rule 31 (instruction -> empty .)
    MA7ED           reduce using rule 31 (instruction -> empty .)
    DIR             reduce using rule 31 (instruction -> empty .)
    QRA             reduce using rule 31 (instruction -> empty .)
    TOL             reduce using rule 31 (instruction -> empty .)
    [               reduce using rule 31 (instruction -> empty .)
    $end            reduce using rule 31 (instruction -> empty .)
    }               reduce using rule 31 (instruction -> empty .)


state 20

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input
    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION
    (55) expression -> ID .
    (73) arrayelt -> ID . dimensions
    (76) arrayslice -> ID . [ expression : expression ]
    (77) arrayslice -> ID . [ : expression ]
    (78) arrayslice -> ID . [ expression : ]
    (79) arrayslice -> ID . [ : ]
    (74) dimensions -> . [ expression ]
    (75) dimensions -> . dimensions [ expression ]

  ! shift/reduce conflict for [ resolved as shift
    EQUALS          shift and go to state 48
    INCREMENTATION  shift and go to state 49
    DECREMENTATION  shift and go to state 50
    PLUS            reduce using rule 55 (expression -> ID .)
    MINUS           reduce using rule 55 (expression -> ID .)
    TIMES           reduce using rule 55 (expression -> ID .)
    DIVIDE          reduce using rule 55 (expression -> ID .)
    KHREJ           reduce using rule 55 (expression -> ID .)
    KMEL            reduce using rule 55 (expression -> ID .)
    ID              reduce using rule 55 (expression -> ID .)
    MOJOD           reduce using rule 55 (expression -> ID .)
    KTEB            reduce using rule 55 (expression -> ID .)
    (               reduce using rule 55 (expression -> ID .)
    INT             reduce using rule 55 (expression -> ID .)
    FLOAT           reduce using rule 55 (expression -> ID .)
    STRING          reduce using rule 55 (expression -> ID .)
    KHATE2          reduce using rule 55 (expression -> ID .)
    S7I7            reduce using rule 55 (expression -> ID .)
    WALO            reduce using rule 55 (expression -> ID .)
    JEREB           reduce using rule 55 (expression -> ID .)
    ILA             reduce using rule 55 (expression -> ID .)
    LKOLA           reduce using rule 55 (expression -> ID .)
    MA7ED           reduce using rule 55 (expression -> ID .)
    DIR             reduce using rule 55 (expression -> ID .)
    QRA             reduce using rule 55 (expression -> ID .)
    TOL             reduce using rule 55 (expression -> ID .)
    $end            reduce using rule 55 (expression -> ID .)
    }               reduce using rule 55 (expression -> ID .)
    [               shift and go to state 52

  ! [               [ reduce using rule 55 (expression -> ID .) ]

    dimensions                     shift and go to state 51

state 21

    (6) var_assign -> MOJOD . var_assign
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign

    ID              shift and go to state 54
    MOJOD           shift and go to state 21

    var_assign                     shift and go to state 53

state 22

    (7) arrayelt_assign -> arrayelt . EQUALS expression
    (67) expression -> arrayelt .

    EQUALS          shift and go to state 55
    PLUS            reduce using rule 67 (expression -> arrayelt .)
    MINUS           reduce using rule 67 (expression -> arrayelt .)
    TIMES           reduce using rule 67 (expression -> arrayelt .)
    DIVIDE          reduce using rule 67 (expression -> arrayelt .)
    KHREJ           reduce using rule 67 (expression -> arrayelt .)
    KMEL            reduce using rule 67 (expression -> arrayelt .)
    ID              reduce using rule 67 (expression -> arrayelt .)
    MOJOD           reduce using rule 67 (expression -> arrayelt .)
    KTEB            reduce using rule 67 (expression -> arrayelt .)
    (               reduce using rule 67 (expression -> arrayelt .)
    INT             reduce using rule 67 (expression -> arrayelt .)
    FLOAT           reduce using rule 67 (expression -> arrayelt .)
    STRING          reduce using rule 67 (expression -> arrayelt .)
    KHATE2          reduce using rule 67 (expression -> arrayelt .)
    S7I7            reduce using rule 67 (expression -> arrayelt .)
    WALO            reduce using rule 67 (expression -> arrayelt .)
    JEREB           reduce using rule 67 (expression -> arrayelt .)
    ILA             reduce using rule 67 (expression -> arrayelt .)
    LKOLA           reduce using rule 67 (expression -> arrayelt .)
    MA7ED           reduce using rule 67 (expression -> arrayelt .)
    DIR             reduce using rule 67 (expression -> arrayelt .)
    QRA             reduce using rule 67 (expression -> arrayelt .)
    TOL             reduce using rule 67 (expression -> arrayelt .)
    [               reduce using rule 67 (expression -> arrayelt .)
    $end            reduce using rule 67 (expression -> arrayelt .)
    }               reduce using rule 67 (expression -> arrayelt .)


state 23

    (80) printing -> KTEB . ( condition )
    (81) printing -> KTEB . ( incrementation )
    (82) printing -> KTEB . ( decrementation )

    (               shift and go to state 56


state 24

    (52) expression -> ( . expression )
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 57
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 25

    (54) expression -> PLUS . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 60
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 26

    (53) expression -> MINUS . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 61
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 27

    (60) expression -> INT .

    PLUS            reduce using rule 60 (expression -> INT .)
    MINUS           reduce using rule 60 (expression -> INT .)
    TIMES           reduce using rule 60 (expression -> INT .)
    DIVIDE          reduce using rule 60 (expression -> INT .)
    KHREJ           reduce using rule 60 (expression -> INT .)
    KMEL            reduce using rule 60 (expression -> INT .)
    ID              reduce using rule 60 (expression -> INT .)
    MOJOD           reduce using rule 60 (expression -> INT .)
    KTEB            reduce using rule 60 (expression -> INT .)
    (               reduce using rule 60 (expression -> INT .)
    INT             reduce using rule 60 (expression -> INT .)
    FLOAT           reduce using rule 60 (expression -> INT .)
    STRING          reduce using rule 60 (expression -> INT .)
    KHATE2          reduce using rule 60 (expression -> INT .)
    S7I7            reduce using rule 60 (expression -> INT .)
    WALO            reduce using rule 60 (expression -> INT .)
    JEREB           reduce using rule 60 (expression -> INT .)
    ILA             reduce using rule 60 (expression -> INT .)
    LKOLA           reduce using rule 60 (expression -> INT .)
    MA7ED           reduce using rule 60 (expression -> INT .)
    DIR             reduce using rule 60 (expression -> INT .)
    QRA             reduce using rule 60 (expression -> INT .)
    TOL             reduce using rule 60 (expression -> INT .)
    [               reduce using rule 60 (expression -> INT .)
    $end            reduce using rule 60 (expression -> INT .)
    )               reduce using rule 60 (expression -> INT .)
    ]               reduce using rule 60 (expression -> INT .)
    ,               reduce using rule 60 (expression -> INT .)
    }               reduce using rule 60 (expression -> INT .)
    ;               reduce using rule 60 (expression -> INT .)
    :               reduce using rule 60 (expression -> INT .)
    SUP             reduce using rule 60 (expression -> INT .)
    INF             reduce using rule 60 (expression -> INT .)
    EQUALSCOMP      reduce using rule 60 (expression -> INT .)
    SUPEQUALS       reduce using rule 60 (expression -> INT .)
    INFEQUALS       reduce using rule 60 (expression -> INT .)
    DIFFERENT       reduce using rule 60 (expression -> INT .)
    WA              reduce using rule 60 (expression -> INT .)
    AW              reduce using rule 60 (expression -> INT .)


state 28

    (61) expression -> FLOAT .

    PLUS            reduce using rule 61 (expression -> FLOAT .)
    MINUS           reduce using rule 61 (expression -> FLOAT .)
    TIMES           reduce using rule 61 (expression -> FLOAT .)
    DIVIDE          reduce using rule 61 (expression -> FLOAT .)
    KHREJ           reduce using rule 61 (expression -> FLOAT .)
    KMEL            reduce using rule 61 (expression -> FLOAT .)
    ID              reduce using rule 61 (expression -> FLOAT .)
    MOJOD           reduce using rule 61 (expression -> FLOAT .)
    KTEB            reduce using rule 61 (expression -> FLOAT .)
    (               reduce using rule 61 (expression -> FLOAT .)
    INT             reduce using rule 61 (expression -> FLOAT .)
    FLOAT           reduce using rule 61 (expression -> FLOAT .)
    STRING          reduce using rule 61 (expression -> FLOAT .)
    KHATE2          reduce using rule 61 (expression -> FLOAT .)
    S7I7            reduce using rule 61 (expression -> FLOAT .)
    WALO            reduce using rule 61 (expression -> FLOAT .)
    JEREB           reduce using rule 61 (expression -> FLOAT .)
    ILA             reduce using rule 61 (expression -> FLOAT .)
    LKOLA           reduce using rule 61 (expression -> FLOAT .)
    MA7ED           reduce using rule 61 (expression -> FLOAT .)
    DIR             reduce using rule 61 (expression -> FLOAT .)
    QRA             reduce using rule 61 (expression -> FLOAT .)
    TOL             reduce using rule 61 (expression -> FLOAT .)
    [               reduce using rule 61 (expression -> FLOAT .)
    $end            reduce using rule 61 (expression -> FLOAT .)
    )               reduce using rule 61 (expression -> FLOAT .)
    ]               reduce using rule 61 (expression -> FLOAT .)
    ,               reduce using rule 61 (expression -> FLOAT .)
    }               reduce using rule 61 (expression -> FLOAT .)
    ;               reduce using rule 61 (expression -> FLOAT .)
    :               reduce using rule 61 (expression -> FLOAT .)
    SUP             reduce using rule 61 (expression -> FLOAT .)
    INF             reduce using rule 61 (expression -> FLOAT .)
    EQUALSCOMP      reduce using rule 61 (expression -> FLOAT .)
    SUPEQUALS       reduce using rule 61 (expression -> FLOAT .)
    INFEQUALS       reduce using rule 61 (expression -> FLOAT .)
    DIFFERENT       reduce using rule 61 (expression -> FLOAT .)
    WA              reduce using rule 61 (expression -> FLOAT .)
    AW              reduce using rule 61 (expression -> FLOAT .)


state 29

    (62) expression -> STRING .

    PLUS            reduce using rule 62 (expression -> STRING .)
    MINUS           reduce using rule 62 (expression -> STRING .)
    TIMES           reduce using rule 62 (expression -> STRING .)
    DIVIDE          reduce using rule 62 (expression -> STRING .)
    KHREJ           reduce using rule 62 (expression -> STRING .)
    KMEL            reduce using rule 62 (expression -> STRING .)
    ID              reduce using rule 62 (expression -> STRING .)
    MOJOD           reduce using rule 62 (expression -> STRING .)
    KTEB            reduce using rule 62 (expression -> STRING .)
    (               reduce using rule 62 (expression -> STRING .)
    INT             reduce using rule 62 (expression -> STRING .)
    FLOAT           reduce using rule 62 (expression -> STRING .)
    STRING          reduce using rule 62 (expression -> STRING .)
    KHATE2          reduce using rule 62 (expression -> STRING .)
    S7I7            reduce using rule 62 (expression -> STRING .)
    WALO            reduce using rule 62 (expression -> STRING .)
    JEREB           reduce using rule 62 (expression -> STRING .)
    ILA             reduce using rule 62 (expression -> STRING .)
    LKOLA           reduce using rule 62 (expression -> STRING .)
    MA7ED           reduce using rule 62 (expression -> STRING .)
    DIR             reduce using rule 62 (expression -> STRING .)
    QRA             reduce using rule 62 (expression -> STRING .)
    TOL             reduce using rule 62 (expression -> STRING .)
    [               reduce using rule 62 (expression -> STRING .)
    $end            reduce using rule 62 (expression -> STRING .)
    )               reduce using rule 62 (expression -> STRING .)
    ]               reduce using rule 62 (expression -> STRING .)
    ,               reduce using rule 62 (expression -> STRING .)
    }               reduce using rule 62 (expression -> STRING .)
    ;               reduce using rule 62 (expression -> STRING .)
    :               reduce using rule 62 (expression -> STRING .)
    SUP             reduce using rule 62 (expression -> STRING .)
    INF             reduce using rule 62 (expression -> STRING .)
    EQUALSCOMP      reduce using rule 62 (expression -> STRING .)
    SUPEQUALS       reduce using rule 62 (expression -> STRING .)
    INFEQUALS       reduce using rule 62 (expression -> STRING .)
    DIFFERENT       reduce using rule 62 (expression -> STRING .)
    WA              reduce using rule 62 (expression -> STRING .)
    AW              reduce using rule 62 (expression -> STRING .)


state 30

    (63) expression -> KHATE2 .

    PLUS            reduce using rule 63 (expression -> KHATE2 .)
    MINUS           reduce using rule 63 (expression -> KHATE2 .)
    TIMES           reduce using rule 63 (expression -> KHATE2 .)
    DIVIDE          reduce using rule 63 (expression -> KHATE2 .)
    KHREJ           reduce using rule 63 (expression -> KHATE2 .)
    KMEL            reduce using rule 63 (expression -> KHATE2 .)
    ID              reduce using rule 63 (expression -> KHATE2 .)
    MOJOD           reduce using rule 63 (expression -> KHATE2 .)
    KTEB            reduce using rule 63 (expression -> KHATE2 .)
    (               reduce using rule 63 (expression -> KHATE2 .)
    INT             reduce using rule 63 (expression -> KHATE2 .)
    FLOAT           reduce using rule 63 (expression -> KHATE2 .)
    STRING          reduce using rule 63 (expression -> KHATE2 .)
    KHATE2          reduce using rule 63 (expression -> KHATE2 .)
    S7I7            reduce using rule 63 (expression -> KHATE2 .)
    WALO            reduce using rule 63 (expression -> KHATE2 .)
    JEREB           reduce using rule 63 (expression -> KHATE2 .)
    ILA             reduce using rule 63 (expression -> KHATE2 .)
    LKOLA           reduce using rule 63 (expression -> KHATE2 .)
    MA7ED           reduce using rule 63 (expression -> KHATE2 .)
    DIR             reduce using rule 63 (expression -> KHATE2 .)
    QRA             reduce using rule 63 (expression -> KHATE2 .)
    TOL             reduce using rule 63 (expression -> KHATE2 .)
    [               reduce using rule 63 (expression -> KHATE2 .)
    $end            reduce using rule 63 (expression -> KHATE2 .)
    )               reduce using rule 63 (expression -> KHATE2 .)
    ]               reduce using rule 63 (expression -> KHATE2 .)
    ,               reduce using rule 63 (expression -> KHATE2 .)
    }               reduce using rule 63 (expression -> KHATE2 .)
    ;               reduce using rule 63 (expression -> KHATE2 .)
    :               reduce using rule 63 (expression -> KHATE2 .)
    SUP             reduce using rule 63 (expression -> KHATE2 .)
    INF             reduce using rule 63 (expression -> KHATE2 .)
    EQUALSCOMP      reduce using rule 63 (expression -> KHATE2 .)
    SUPEQUALS       reduce using rule 63 (expression -> KHATE2 .)
    INFEQUALS       reduce using rule 63 (expression -> KHATE2 .)
    DIFFERENT       reduce using rule 63 (expression -> KHATE2 .)
    WA              reduce using rule 63 (expression -> KHATE2 .)
    AW              reduce using rule 63 (expression -> KHATE2 .)


state 31

    (64) expression -> S7I7 .

    PLUS            reduce using rule 64 (expression -> S7I7 .)
    MINUS           reduce using rule 64 (expression -> S7I7 .)
    TIMES           reduce using rule 64 (expression -> S7I7 .)
    DIVIDE          reduce using rule 64 (expression -> S7I7 .)
    KHREJ           reduce using rule 64 (expression -> S7I7 .)
    KMEL            reduce using rule 64 (expression -> S7I7 .)
    ID              reduce using rule 64 (expression -> S7I7 .)
    MOJOD           reduce using rule 64 (expression -> S7I7 .)
    KTEB            reduce using rule 64 (expression -> S7I7 .)
    (               reduce using rule 64 (expression -> S7I7 .)
    INT             reduce using rule 64 (expression -> S7I7 .)
    FLOAT           reduce using rule 64 (expression -> S7I7 .)
    STRING          reduce using rule 64 (expression -> S7I7 .)
    KHATE2          reduce using rule 64 (expression -> S7I7 .)
    S7I7            reduce using rule 64 (expression -> S7I7 .)
    WALO            reduce using rule 64 (expression -> S7I7 .)
    JEREB           reduce using rule 64 (expression -> S7I7 .)
    ILA             reduce using rule 64 (expression -> S7I7 .)
    LKOLA           reduce using rule 64 (expression -> S7I7 .)
    MA7ED           reduce using rule 64 (expression -> S7I7 .)
    DIR             reduce using rule 64 (expression -> S7I7 .)
    QRA             reduce using rule 64 (expression -> S7I7 .)
    TOL             reduce using rule 64 (expression -> S7I7 .)
    [               reduce using rule 64 (expression -> S7I7 .)
    $end            reduce using rule 64 (expression -> S7I7 .)
    )               reduce using rule 64 (expression -> S7I7 .)
    ]               reduce using rule 64 (expression -> S7I7 .)
    ,               reduce using rule 64 (expression -> S7I7 .)
    }               reduce using rule 64 (expression -> S7I7 .)
    ;               reduce using rule 64 (expression -> S7I7 .)
    :               reduce using rule 64 (expression -> S7I7 .)
    SUP             reduce using rule 64 (expression -> S7I7 .)
    INF             reduce using rule 64 (expression -> S7I7 .)
    EQUALSCOMP      reduce using rule 64 (expression -> S7I7 .)
    SUPEQUALS       reduce using rule 64 (expression -> S7I7 .)
    INFEQUALS       reduce using rule 64 (expression -> S7I7 .)
    DIFFERENT       reduce using rule 64 (expression -> S7I7 .)
    WA              reduce using rule 64 (expression -> S7I7 .)
    AW              reduce using rule 64 (expression -> S7I7 .)


state 32

    (65) expression -> WALO .

    PLUS            reduce using rule 65 (expression -> WALO .)
    MINUS           reduce using rule 65 (expression -> WALO .)
    TIMES           reduce using rule 65 (expression -> WALO .)
    DIVIDE          reduce using rule 65 (expression -> WALO .)
    KHREJ           reduce using rule 65 (expression -> WALO .)
    KMEL            reduce using rule 65 (expression -> WALO .)
    ID              reduce using rule 65 (expression -> WALO .)
    MOJOD           reduce using rule 65 (expression -> WALO .)
    KTEB            reduce using rule 65 (expression -> WALO .)
    (               reduce using rule 65 (expression -> WALO .)
    INT             reduce using rule 65 (expression -> WALO .)
    FLOAT           reduce using rule 65 (expression -> WALO .)
    STRING          reduce using rule 65 (expression -> WALO .)
    KHATE2          reduce using rule 65 (expression -> WALO .)
    S7I7            reduce using rule 65 (expression -> WALO .)
    WALO            reduce using rule 65 (expression -> WALO .)
    JEREB           reduce using rule 65 (expression -> WALO .)
    ILA             reduce using rule 65 (expression -> WALO .)
    LKOLA           reduce using rule 65 (expression -> WALO .)
    MA7ED           reduce using rule 65 (expression -> WALO .)
    DIR             reduce using rule 65 (expression -> WALO .)
    QRA             reduce using rule 65 (expression -> WALO .)
    TOL             reduce using rule 65 (expression -> WALO .)
    [               reduce using rule 65 (expression -> WALO .)
    $end            reduce using rule 65 (expression -> WALO .)
    )               reduce using rule 65 (expression -> WALO .)
    ]               reduce using rule 65 (expression -> WALO .)
    ,               reduce using rule 65 (expression -> WALO .)
    }               reduce using rule 65 (expression -> WALO .)
    ;               reduce using rule 65 (expression -> WALO .)
    :               reduce using rule 65 (expression -> WALO .)
    SUP             reduce using rule 65 (expression -> WALO .)
    INF             reduce using rule 65 (expression -> WALO .)
    EQUALSCOMP      reduce using rule 65 (expression -> WALO .)
    SUPEQUALS       reduce using rule 65 (expression -> WALO .)
    INFEQUALS       reduce using rule 65 (expression -> WALO .)
    DIFFERENT       reduce using rule 65 (expression -> WALO .)
    WA              reduce using rule 65 (expression -> WALO .)
    AW              reduce using rule 65 (expression -> WALO .)


state 33

    (66) expression -> array .

    PLUS            reduce using rule 66 (expression -> array .)
    MINUS           reduce using rule 66 (expression -> array .)
    TIMES           reduce using rule 66 (expression -> array .)
    DIVIDE          reduce using rule 66 (expression -> array .)
    KHREJ           reduce using rule 66 (expression -> array .)
    KMEL            reduce using rule 66 (expression -> array .)
    ID              reduce using rule 66 (expression -> array .)
    MOJOD           reduce using rule 66 (expression -> array .)
    KTEB            reduce using rule 66 (expression -> array .)
    (               reduce using rule 66 (expression -> array .)
    INT             reduce using rule 66 (expression -> array .)
    FLOAT           reduce using rule 66 (expression -> array .)
    STRING          reduce using rule 66 (expression -> array .)
    KHATE2          reduce using rule 66 (expression -> array .)
    S7I7            reduce using rule 66 (expression -> array .)
    WALO            reduce using rule 66 (expression -> array .)
    JEREB           reduce using rule 66 (expression -> array .)
    ILA             reduce using rule 66 (expression -> array .)
    LKOLA           reduce using rule 66 (expression -> array .)
    MA7ED           reduce using rule 66 (expression -> array .)
    DIR             reduce using rule 66 (expression -> array .)
    QRA             reduce using rule 66 (expression -> array .)
    TOL             reduce using rule 66 (expression -> array .)
    [               reduce using rule 66 (expression -> array .)
    $end            reduce using rule 66 (expression -> array .)
    )               reduce using rule 66 (expression -> array .)
    ]               reduce using rule 66 (expression -> array .)
    ,               reduce using rule 66 (expression -> array .)
    }               reduce using rule 66 (expression -> array .)
    ;               reduce using rule 66 (expression -> array .)
    :               reduce using rule 66 (expression -> array .)
    SUP             reduce using rule 66 (expression -> array .)
    INF             reduce using rule 66 (expression -> array .)
    EQUALSCOMP      reduce using rule 66 (expression -> array .)
    SUPEQUALS       reduce using rule 66 (expression -> array .)
    INFEQUALS       reduce using rule 66 (expression -> array .)
    DIFFERENT       reduce using rule 66 (expression -> array .)
    WA              reduce using rule 66 (expression -> array .)
    AW              reduce using rule 66 (expression -> array .)


state 34

    (68) expression -> arrayslice .

    PLUS            reduce using rule 68 (expression -> arrayslice .)
    MINUS           reduce using rule 68 (expression -> arrayslice .)
    TIMES           reduce using rule 68 (expression -> arrayslice .)
    DIVIDE          reduce using rule 68 (expression -> arrayslice .)
    KHREJ           reduce using rule 68 (expression -> arrayslice .)
    KMEL            reduce using rule 68 (expression -> arrayslice .)
    ID              reduce using rule 68 (expression -> arrayslice .)
    MOJOD           reduce using rule 68 (expression -> arrayslice .)
    KTEB            reduce using rule 68 (expression -> arrayslice .)
    (               reduce using rule 68 (expression -> arrayslice .)
    INT             reduce using rule 68 (expression -> arrayslice .)
    FLOAT           reduce using rule 68 (expression -> arrayslice .)
    STRING          reduce using rule 68 (expression -> arrayslice .)
    KHATE2          reduce using rule 68 (expression -> arrayslice .)
    S7I7            reduce using rule 68 (expression -> arrayslice .)
    WALO            reduce using rule 68 (expression -> arrayslice .)
    JEREB           reduce using rule 68 (expression -> arrayslice .)
    ILA             reduce using rule 68 (expression -> arrayslice .)
    LKOLA           reduce using rule 68 (expression -> arrayslice .)
    MA7ED           reduce using rule 68 (expression -> arrayslice .)
    DIR             reduce using rule 68 (expression -> arrayslice .)
    QRA             reduce using rule 68 (expression -> arrayslice .)
    TOL             reduce using rule 68 (expression -> arrayslice .)
    [               reduce using rule 68 (expression -> arrayslice .)
    $end            reduce using rule 68 (expression -> arrayslice .)
    )               reduce using rule 68 (expression -> arrayslice .)
    ]               reduce using rule 68 (expression -> arrayslice .)
    ,               reduce using rule 68 (expression -> arrayslice .)
    }               reduce using rule 68 (expression -> arrayslice .)
    ;               reduce using rule 68 (expression -> arrayslice .)
    :               reduce using rule 68 (expression -> arrayslice .)
    SUP             reduce using rule 68 (expression -> arrayslice .)
    INF             reduce using rule 68 (expression -> arrayslice .)
    EQUALSCOMP      reduce using rule 68 (expression -> arrayslice .)
    SUPEQUALS       reduce using rule 68 (expression -> arrayslice .)
    INFEQUALS       reduce using rule 68 (expression -> arrayslice .)
    DIFFERENT       reduce using rule 68 (expression -> arrayslice .)
    WA              reduce using rule 68 (expression -> arrayslice .)
    AW              reduce using rule 68 (expression -> arrayslice .)


state 35

    (58) try -> JEREB . { instruction_list } MASD9CH { instruction_list }
    (59) try -> JEREB . { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }

    {               shift and go to state 62


state 36

    (8) if -> ILA . ( condition ) { instruction_list }
    (9) if -> ILA . ( condition ) { instruction_list } WLA { instruction_list }

    (               shift and go to state 63


state 37

    (10) for -> LKOLA . ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> LKOLA . ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> LKOLA . ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> LKOLA . ( expression ; condition ; decrementation ) { instruction_list }

    (               shift and go to state 64


state 38

    (14) while -> MA7ED . ( condition ) { instruction_list }

    (               shift and go to state 65


state 39

    (15) doWhile -> DIR . { instruction_list } MA7ED ( condition )

    {               shift and go to state 66


state 40

    (56) input -> QRA . ( expression )
    (57) input -> QRA . ( )

    (               shift and go to state 67


state 41

    (83) len -> TOL . ( expression )

    (               shift and go to state 68


state 42

    (71) array -> [ . arraylist ]
    (72) array -> [ . ]
    (69) arraylist -> . expression
    (70) arraylist -> . arraylist , expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    ]               shift and go to state 70
    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    arraylist                      shift and go to state 69
    expression                     shift and go to state 71
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 43

    (33) instruction_list -> instruction_list instruction .

    KHREJ           reduce using rule 33 (instruction_list -> instruction_list instruction .)
    KMEL            reduce using rule 33 (instruction_list -> instruction_list instruction .)
    ID              reduce using rule 33 (instruction_list -> instruction_list instruction .)
    MOJOD           reduce using rule 33 (instruction_list -> instruction_list instruction .)
    KTEB            reduce using rule 33 (instruction_list -> instruction_list instruction .)
    (               reduce using rule 33 (instruction_list -> instruction_list instruction .)
    MINUS           reduce using rule 33 (instruction_list -> instruction_list instruction .)
    PLUS            reduce using rule 33 (instruction_list -> instruction_list instruction .)
    INT             reduce using rule 33 (instruction_list -> instruction_list instruction .)
    FLOAT           reduce using rule 33 (instruction_list -> instruction_list instruction .)
    STRING          reduce using rule 33 (instruction_list -> instruction_list instruction .)
    KHATE2          reduce using rule 33 (instruction_list -> instruction_list instruction .)
    S7I7            reduce using rule 33 (instruction_list -> instruction_list instruction .)
    WALO            reduce using rule 33 (instruction_list -> instruction_list instruction .)
    JEREB           reduce using rule 33 (instruction_list -> instruction_list instruction .)
    ILA             reduce using rule 33 (instruction_list -> instruction_list instruction .)
    LKOLA           reduce using rule 33 (instruction_list -> instruction_list instruction .)
    MA7ED           reduce using rule 33 (instruction_list -> instruction_list instruction .)
    DIR             reduce using rule 33 (instruction_list -> instruction_list instruction .)
    QRA             reduce using rule 33 (instruction_list -> instruction_list instruction .)
    TOL             reduce using rule 33 (instruction_list -> instruction_list instruction .)
    [               reduce using rule 33 (instruction_list -> instruction_list instruction .)
    $end            reduce using rule 33 (instruction_list -> instruction_list instruction .)
    }               reduce using rule 33 (instruction_list -> instruction_list instruction .)


state 44

    (48) expression -> expression PLUS . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 72
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 45

    (49) expression -> expression MINUS . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 73
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 46

    (50) expression -> expression TIMES . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 74
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 47

    (51) expression -> expression DIVIDE . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 75
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 48

    (4) var_assign -> ID EQUALS . expression
    (5) var_assign -> ID EQUALS . input
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    QRA             shift and go to state 40
    [               shift and go to state 42

    expression                     shift and go to state 76
    input                          shift and go to state 77
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 49

    (2) incrementation -> ID INCREMENTATION .

    KHREJ           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KMEL            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    ID              reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MOJOD           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KTEB            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    (               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MINUS           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    PLUS            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    INT             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    FLOAT           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    STRING          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KHATE2          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    S7I7            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    WALO            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    JEREB           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    ILA             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    LKOLA           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MA7ED           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    DIR             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    QRA             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    TOL             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    [               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    $end            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    )               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    }               reduce using rule 2 (incrementation -> ID INCREMENTATION .)


state 50

    (3) decrementation -> ID DECREMENTATION .

    KHREJ           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KMEL            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    ID              reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MOJOD           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KTEB            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    (               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MINUS           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    PLUS            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    INT             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    FLOAT           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    STRING          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KHATE2          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    S7I7            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    WALO            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    JEREB           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    ILA             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    LKOLA           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MA7ED           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    DIR             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    QRA             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    TOL             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    [               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    $end            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    )               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    }               reduce using rule 3 (decrementation -> ID DECREMENTATION .)


state 51

    (73) arrayelt -> ID dimensions .
    (75) dimensions -> dimensions . [ expression ]

  ! shift/reduce conflict for [ resolved as shift
    EQUALS          reduce using rule 73 (arrayelt -> ID dimensions .)
    PLUS            reduce using rule 73 (arrayelt -> ID dimensions .)
    MINUS           reduce using rule 73 (arrayelt -> ID dimensions .)
    TIMES           reduce using rule 73 (arrayelt -> ID dimensions .)
    DIVIDE          reduce using rule 73 (arrayelt -> ID dimensions .)
    KHREJ           reduce using rule 73 (arrayelt -> ID dimensions .)
    KMEL            reduce using rule 73 (arrayelt -> ID dimensions .)
    ID              reduce using rule 73 (arrayelt -> ID dimensions .)
    MOJOD           reduce using rule 73 (arrayelt -> ID dimensions .)
    KTEB            reduce using rule 73 (arrayelt -> ID dimensions .)
    (               reduce using rule 73 (arrayelt -> ID dimensions .)
    INT             reduce using rule 73 (arrayelt -> ID dimensions .)
    FLOAT           reduce using rule 73 (arrayelt -> ID dimensions .)
    STRING          reduce using rule 73 (arrayelt -> ID dimensions .)
    KHATE2          reduce using rule 73 (arrayelt -> ID dimensions .)
    S7I7            reduce using rule 73 (arrayelt -> ID dimensions .)
    WALO            reduce using rule 73 (arrayelt -> ID dimensions .)
    JEREB           reduce using rule 73 (arrayelt -> ID dimensions .)
    ILA             reduce using rule 73 (arrayelt -> ID dimensions .)
    LKOLA           reduce using rule 73 (arrayelt -> ID dimensions .)
    MA7ED           reduce using rule 73 (arrayelt -> ID dimensions .)
    DIR             reduce using rule 73 (arrayelt -> ID dimensions .)
    QRA             reduce using rule 73 (arrayelt -> ID dimensions .)
    TOL             reduce using rule 73 (arrayelt -> ID dimensions .)
    $end            reduce using rule 73 (arrayelt -> ID dimensions .)
    )               reduce using rule 73 (arrayelt -> ID dimensions .)
    ]               reduce using rule 73 (arrayelt -> ID dimensions .)
    ,               reduce using rule 73 (arrayelt -> ID dimensions .)
    }               reduce using rule 73 (arrayelt -> ID dimensions .)
    ;               reduce using rule 73 (arrayelt -> ID dimensions .)
    :               reduce using rule 73 (arrayelt -> ID dimensions .)
    SUP             reduce using rule 73 (arrayelt -> ID dimensions .)
    INF             reduce using rule 73 (arrayelt -> ID dimensions .)
    EQUALSCOMP      reduce using rule 73 (arrayelt -> ID dimensions .)
    SUPEQUALS       reduce using rule 73 (arrayelt -> ID dimensions .)
    INFEQUALS       reduce using rule 73 (arrayelt -> ID dimensions .)
    DIFFERENT       reduce using rule 73 (arrayelt -> ID dimensions .)
    WA              reduce using rule 73 (arrayelt -> ID dimensions .)
    AW              reduce using rule 73 (arrayelt -> ID dimensions .)
    [               shift and go to state 78

  ! [               [ reduce using rule 73 (arrayelt -> ID dimensions .) ]


state 52

    (76) arrayslice -> ID [ . expression : expression ]
    (77) arrayslice -> ID [ . : expression ]
    (78) arrayslice -> ID [ . expression : ]
    (79) arrayslice -> ID [ . : ]
    (74) dimensions -> [ . expression ]
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    :               shift and go to state 80
    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 79
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 53

    (6) var_assign -> MOJOD var_assign .

    KHREJ           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    KMEL            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    ID              reduce using rule 6 (var_assign -> MOJOD var_assign .)
    MOJOD           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    KTEB            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    (               reduce using rule 6 (var_assign -> MOJOD var_assign .)
    MINUS           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    PLUS            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    INT             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    FLOAT           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    STRING          reduce using rule 6 (var_assign -> MOJOD var_assign .)
    KHATE2          reduce using rule 6 (var_assign -> MOJOD var_assign .)
    S7I7            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    WALO            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    JEREB           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    ILA             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    LKOLA           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    MA7ED           reduce using rule 6 (var_assign -> MOJOD var_assign .)
    DIR             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    QRA             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    TOL             reduce using rule 6 (var_assign -> MOJOD var_assign .)
    [               reduce using rule 6 (var_assign -> MOJOD var_assign .)
    $end            reduce using rule 6 (var_assign -> MOJOD var_assign .)
    }               reduce using rule 6 (var_assign -> MOJOD var_assign .)
    ;               reduce using rule 6 (var_assign -> MOJOD var_assign .)


state 54

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input

    EQUALS          shift and go to state 48


state 55

    (7) arrayelt_assign -> arrayelt EQUALS . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    arrayelt                       shift and go to state 59
    expression                     shift and go to state 81
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 56

    (80) printing -> KTEB ( . condition )
    (81) printing -> KTEB ( . incrementation )
    (82) printing -> KTEB ( . decrementation )
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 82
    L3AKSS          shift and go to state 86
    ID              shift and go to state 88
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 83
    incrementation                 shift and go to state 84
    decrementation                 shift and go to state 85
    expression                     shift and go to state 87
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 57

    (52) expression -> ( expression . )
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    )               shift and go to state 89
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 58

    (55) expression -> ID .
    (73) arrayelt -> ID . dimensions
    (76) arrayslice -> ID . [ expression : expression ]
    (77) arrayslice -> ID . [ : expression ]
    (78) arrayslice -> ID . [ expression : ]
    (79) arrayslice -> ID . [ : ]
    (74) dimensions -> . [ expression ]
    (75) dimensions -> . dimensions [ expression ]

  ! shift/reduce conflict for [ resolved as shift
    )               reduce using rule 55 (expression -> ID .)
    PLUS            reduce using rule 55 (expression -> ID .)
    MINUS           reduce using rule 55 (expression -> ID .)
    TIMES           reduce using rule 55 (expression -> ID .)
    DIVIDE          reduce using rule 55 (expression -> ID .)
    KHREJ           reduce using rule 55 (expression -> ID .)
    KMEL            reduce using rule 55 (expression -> ID .)
    ID              reduce using rule 55 (expression -> ID .)
    MOJOD           reduce using rule 55 (expression -> ID .)
    KTEB            reduce using rule 55 (expression -> ID .)
    (               reduce using rule 55 (expression -> ID .)
    INT             reduce using rule 55 (expression -> ID .)
    FLOAT           reduce using rule 55 (expression -> ID .)
    STRING          reduce using rule 55 (expression -> ID .)
    KHATE2          reduce using rule 55 (expression -> ID .)
    S7I7            reduce using rule 55 (expression -> ID .)
    WALO            reduce using rule 55 (expression -> ID .)
    JEREB           reduce using rule 55 (expression -> ID .)
    ILA             reduce using rule 55 (expression -> ID .)
    LKOLA           reduce using rule 55 (expression -> ID .)
    MA7ED           reduce using rule 55 (expression -> ID .)
    DIR             reduce using rule 55 (expression -> ID .)
    QRA             reduce using rule 55 (expression -> ID .)
    TOL             reduce using rule 55 (expression -> ID .)
    $end            reduce using rule 55 (expression -> ID .)
    ]               reduce using rule 55 (expression -> ID .)
    ,               reduce using rule 55 (expression -> ID .)
    }               reduce using rule 55 (expression -> ID .)
    ;               reduce using rule 55 (expression -> ID .)
    :               reduce using rule 55 (expression -> ID .)
    SUP             reduce using rule 55 (expression -> ID .)
    INF             reduce using rule 55 (expression -> ID .)
    EQUALSCOMP      reduce using rule 55 (expression -> ID .)
    SUPEQUALS       reduce using rule 55 (expression -> ID .)
    INFEQUALS       reduce using rule 55 (expression -> ID .)
    DIFFERENT       reduce using rule 55 (expression -> ID .)
    WA              reduce using rule 55 (expression -> ID .)
    AW              reduce using rule 55 (expression -> ID .)
    [               shift and go to state 52

  ! [               [ reduce using rule 55 (expression -> ID .) ]

    dimensions                     shift and go to state 51

state 59

    (67) expression -> arrayelt .

    )               reduce using rule 67 (expression -> arrayelt .)
    PLUS            reduce using rule 67 (expression -> arrayelt .)
    MINUS           reduce using rule 67 (expression -> arrayelt .)
    TIMES           reduce using rule 67 (expression -> arrayelt .)
    DIVIDE          reduce using rule 67 (expression -> arrayelt .)
    KHREJ           reduce using rule 67 (expression -> arrayelt .)
    KMEL            reduce using rule 67 (expression -> arrayelt .)
    ID              reduce using rule 67 (expression -> arrayelt .)
    MOJOD           reduce using rule 67 (expression -> arrayelt .)
    KTEB            reduce using rule 67 (expression -> arrayelt .)
    (               reduce using rule 67 (expression -> arrayelt .)
    INT             reduce using rule 67 (expression -> arrayelt .)
    FLOAT           reduce using rule 67 (expression -> arrayelt .)
    STRING          reduce using rule 67 (expression -> arrayelt .)
    KHATE2          reduce using rule 67 (expression -> arrayelt .)
    S7I7            reduce using rule 67 (expression -> arrayelt .)
    WALO            reduce using rule 67 (expression -> arrayelt .)
    JEREB           reduce using rule 67 (expression -> arrayelt .)
    ILA             reduce using rule 67 (expression -> arrayelt .)
    LKOLA           reduce using rule 67 (expression -> arrayelt .)
    MA7ED           reduce using rule 67 (expression -> arrayelt .)
    DIR             reduce using rule 67 (expression -> arrayelt .)
    QRA             reduce using rule 67 (expression -> arrayelt .)
    TOL             reduce using rule 67 (expression -> arrayelt .)
    [               reduce using rule 67 (expression -> arrayelt .)
    $end            reduce using rule 67 (expression -> arrayelt .)
    ]               reduce using rule 67 (expression -> arrayelt .)
    ,               reduce using rule 67 (expression -> arrayelt .)
    }               reduce using rule 67 (expression -> arrayelt .)
    ;               reduce using rule 67 (expression -> arrayelt .)
    :               reduce using rule 67 (expression -> arrayelt .)
    SUP             reduce using rule 67 (expression -> arrayelt .)
    INF             reduce using rule 67 (expression -> arrayelt .)
    EQUALSCOMP      reduce using rule 67 (expression -> arrayelt .)
    SUPEQUALS       reduce using rule 67 (expression -> arrayelt .)
    INFEQUALS       reduce using rule 67 (expression -> arrayelt .)
    DIFFERENT       reduce using rule 67 (expression -> arrayelt .)
    WA              reduce using rule 67 (expression -> arrayelt .)
    AW              reduce using rule 67 (expression -> arrayelt .)


state 60

    (54) expression -> PLUS expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 54 (expression -> PLUS expression .)
    MINUS           reduce using rule 54 (expression -> PLUS expression .)
    KHREJ           reduce using rule 54 (expression -> PLUS expression .)
    KMEL            reduce using rule 54 (expression -> PLUS expression .)
    ID              reduce using rule 54 (expression -> PLUS expression .)
    MOJOD           reduce using rule 54 (expression -> PLUS expression .)
    KTEB            reduce using rule 54 (expression -> PLUS expression .)
    (               reduce using rule 54 (expression -> PLUS expression .)
    INT             reduce using rule 54 (expression -> PLUS expression .)
    FLOAT           reduce using rule 54 (expression -> PLUS expression .)
    STRING          reduce using rule 54 (expression -> PLUS expression .)
    KHATE2          reduce using rule 54 (expression -> PLUS expression .)
    S7I7            reduce using rule 54 (expression -> PLUS expression .)
    WALO            reduce using rule 54 (expression -> PLUS expression .)
    JEREB           reduce using rule 54 (expression -> PLUS expression .)
    ILA             reduce using rule 54 (expression -> PLUS expression .)
    LKOLA           reduce using rule 54 (expression -> PLUS expression .)
    MA7ED           reduce using rule 54 (expression -> PLUS expression .)
    DIR             reduce using rule 54 (expression -> PLUS expression .)
    QRA             reduce using rule 54 (expression -> PLUS expression .)
    TOL             reduce using rule 54 (expression -> PLUS expression .)
    [               reduce using rule 54 (expression -> PLUS expression .)
    $end            reduce using rule 54 (expression -> PLUS expression .)
    )               reduce using rule 54 (expression -> PLUS expression .)
    ]               reduce using rule 54 (expression -> PLUS expression .)
    ,               reduce using rule 54 (expression -> PLUS expression .)
    }               reduce using rule 54 (expression -> PLUS expression .)
    ;               reduce using rule 54 (expression -> PLUS expression .)
    :               reduce using rule 54 (expression -> PLUS expression .)
    SUP             reduce using rule 54 (expression -> PLUS expression .)
    INF             reduce using rule 54 (expression -> PLUS expression .)
    EQUALSCOMP      reduce using rule 54 (expression -> PLUS expression .)
    SUPEQUALS       reduce using rule 54 (expression -> PLUS expression .)
    INFEQUALS       reduce using rule 54 (expression -> PLUS expression .)
    DIFFERENT       reduce using rule 54 (expression -> PLUS expression .)
    WA              reduce using rule 54 (expression -> PLUS expression .)
    AW              reduce using rule 54 (expression -> PLUS expression .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! TIMES           [ reduce using rule 54 (expression -> PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> PLUS expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]


state 61

    (53) expression -> MINUS expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 53 (expression -> MINUS expression .)
    MINUS           reduce using rule 53 (expression -> MINUS expression .)
    KHREJ           reduce using rule 53 (expression -> MINUS expression .)
    KMEL            reduce using rule 53 (expression -> MINUS expression .)
    ID              reduce using rule 53 (expression -> MINUS expression .)
    MOJOD           reduce using rule 53 (expression -> MINUS expression .)
    KTEB            reduce using rule 53 (expression -> MINUS expression .)
    (               reduce using rule 53 (expression -> MINUS expression .)
    INT             reduce using rule 53 (expression -> MINUS expression .)
    FLOAT           reduce using rule 53 (expression -> MINUS expression .)
    STRING          reduce using rule 53 (expression -> MINUS expression .)
    KHATE2          reduce using rule 53 (expression -> MINUS expression .)
    S7I7            reduce using rule 53 (expression -> MINUS expression .)
    WALO            reduce using rule 53 (expression -> MINUS expression .)
    JEREB           reduce using rule 53 (expression -> MINUS expression .)
    ILA             reduce using rule 53 (expression -> MINUS expression .)
    LKOLA           reduce using rule 53 (expression -> MINUS expression .)
    MA7ED           reduce using rule 53 (expression -> MINUS expression .)
    DIR             reduce using rule 53 (expression -> MINUS expression .)
    QRA             reduce using rule 53 (expression -> MINUS expression .)
    TOL             reduce using rule 53 (expression -> MINUS expression .)
    [               reduce using rule 53 (expression -> MINUS expression .)
    $end            reduce using rule 53 (expression -> MINUS expression .)
    )               reduce using rule 53 (expression -> MINUS expression .)
    ]               reduce using rule 53 (expression -> MINUS expression .)
    ,               reduce using rule 53 (expression -> MINUS expression .)
    }               reduce using rule 53 (expression -> MINUS expression .)
    ;               reduce using rule 53 (expression -> MINUS expression .)
    :               reduce using rule 53 (expression -> MINUS expression .)
    SUP             reduce using rule 53 (expression -> MINUS expression .)
    INF             reduce using rule 53 (expression -> MINUS expression .)
    EQUALSCOMP      reduce using rule 53 (expression -> MINUS expression .)
    SUPEQUALS       reduce using rule 53 (expression -> MINUS expression .)
    INFEQUALS       reduce using rule 53 (expression -> MINUS expression .)
    DIFFERENT       reduce using rule 53 (expression -> MINUS expression .)
    WA              reduce using rule 53 (expression -> MINUS expression .)
    AW              reduce using rule 53 (expression -> MINUS expression .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! TIMES           [ reduce using rule 53 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]


state 62

    (58) try -> JEREB { . instruction_list } MASD9CH { instruction_list }
    (59) try -> JEREB { . instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (32) instruction_list -> . instruction
    (33) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    }               reduce using rule 84 (empty -> .)
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction_list               shift and go to state 90
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 63

    (8) if -> ILA ( . condition ) { instruction_list }
    (9) if -> ILA ( . condition ) { instruction_list } WLA { instruction_list }
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 82
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 91
    expression                     shift and go to state 87
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 64

    (10) for -> LKOLA ( . var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> LKOLA ( . var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> LKOLA ( . expression ; condition ; incrementation ) { instruction_list }
    (13) for -> LKOLA ( . expression ; condition ; decrementation ) { instruction_list }
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    ID              shift and go to state 94
    MOJOD           shift and go to state 21
    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    var_assign                     shift and go to state 92
    expression                     shift and go to state 93
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 65

    (14) while -> MA7ED ( . condition ) { instruction_list }
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 82
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 95
    expression                     shift and go to state 87
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 66

    (15) doWhile -> DIR { . instruction_list } MA7ED ( condition )
    (32) instruction_list -> . instruction
    (33) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    }               reduce using rule 84 (empty -> .)
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction_list               shift and go to state 96
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 67

    (56) input -> QRA ( . expression )
    (57) input -> QRA ( . )
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    )               shift and go to state 98
    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 97
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 68

    (83) len -> TOL ( . expression )
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 99
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 69

    (71) array -> [ arraylist . ]
    (70) arraylist -> arraylist . , expression

    ]               shift and go to state 100
    ,               shift and go to state 101


state 70

    (72) array -> [ ] .

    PLUS            reduce using rule 72 (array -> [ ] .)
    MINUS           reduce using rule 72 (array -> [ ] .)
    TIMES           reduce using rule 72 (array -> [ ] .)
    DIVIDE          reduce using rule 72 (array -> [ ] .)
    KHREJ           reduce using rule 72 (array -> [ ] .)
    KMEL            reduce using rule 72 (array -> [ ] .)
    ID              reduce using rule 72 (array -> [ ] .)
    MOJOD           reduce using rule 72 (array -> [ ] .)
    KTEB            reduce using rule 72 (array -> [ ] .)
    (               reduce using rule 72 (array -> [ ] .)
    INT             reduce using rule 72 (array -> [ ] .)
    FLOAT           reduce using rule 72 (array -> [ ] .)
    STRING          reduce using rule 72 (array -> [ ] .)
    KHATE2          reduce using rule 72 (array -> [ ] .)
    S7I7            reduce using rule 72 (array -> [ ] .)
    WALO            reduce using rule 72 (array -> [ ] .)
    JEREB           reduce using rule 72 (array -> [ ] .)
    ILA             reduce using rule 72 (array -> [ ] .)
    LKOLA           reduce using rule 72 (array -> [ ] .)
    MA7ED           reduce using rule 72 (array -> [ ] .)
    DIR             reduce using rule 72 (array -> [ ] .)
    QRA             reduce using rule 72 (array -> [ ] .)
    TOL             reduce using rule 72 (array -> [ ] .)
    [               reduce using rule 72 (array -> [ ] .)
    $end            reduce using rule 72 (array -> [ ] .)
    )               reduce using rule 72 (array -> [ ] .)
    ]               reduce using rule 72 (array -> [ ] .)
    ,               reduce using rule 72 (array -> [ ] .)
    }               reduce using rule 72 (array -> [ ] .)
    ;               reduce using rule 72 (array -> [ ] .)
    :               reduce using rule 72 (array -> [ ] .)
    SUP             reduce using rule 72 (array -> [ ] .)
    INF             reduce using rule 72 (array -> [ ] .)
    EQUALSCOMP      reduce using rule 72 (array -> [ ] .)
    SUPEQUALS       reduce using rule 72 (array -> [ ] .)
    INFEQUALS       reduce using rule 72 (array -> [ ] .)
    DIFFERENT       reduce using rule 72 (array -> [ ] .)
    WA              reduce using rule 72 (array -> [ ] .)
    AW              reduce using rule 72 (array -> [ ] .)


state 71

    (69) arraylist -> expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    ]               reduce using rule 69 (arraylist -> expression .)
    ,               reduce using rule 69 (arraylist -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 72

    (48) expression -> expression PLUS expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 48 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 48 (expression -> expression PLUS expression .)
    KHREJ           reduce using rule 48 (expression -> expression PLUS expression .)
    KMEL            reduce using rule 48 (expression -> expression PLUS expression .)
    ID              reduce using rule 48 (expression -> expression PLUS expression .)
    MOJOD           reduce using rule 48 (expression -> expression PLUS expression .)
    KTEB            reduce using rule 48 (expression -> expression PLUS expression .)
    (               reduce using rule 48 (expression -> expression PLUS expression .)
    INT             reduce using rule 48 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 48 (expression -> expression PLUS expression .)
    STRING          reduce using rule 48 (expression -> expression PLUS expression .)
    KHATE2          reduce using rule 48 (expression -> expression PLUS expression .)
    S7I7            reduce using rule 48 (expression -> expression PLUS expression .)
    WALO            reduce using rule 48 (expression -> expression PLUS expression .)
    JEREB           reduce using rule 48 (expression -> expression PLUS expression .)
    ILA             reduce using rule 48 (expression -> expression PLUS expression .)
    LKOLA           reduce using rule 48 (expression -> expression PLUS expression .)
    MA7ED           reduce using rule 48 (expression -> expression PLUS expression .)
    DIR             reduce using rule 48 (expression -> expression PLUS expression .)
    QRA             reduce using rule 48 (expression -> expression PLUS expression .)
    TOL             reduce using rule 48 (expression -> expression PLUS expression .)
    [               reduce using rule 48 (expression -> expression PLUS expression .)
    $end            reduce using rule 48 (expression -> expression PLUS expression .)
    )               reduce using rule 48 (expression -> expression PLUS expression .)
    ]               reduce using rule 48 (expression -> expression PLUS expression .)
    ,               reduce using rule 48 (expression -> expression PLUS expression .)
    }               reduce using rule 48 (expression -> expression PLUS expression .)
    ;               reduce using rule 48 (expression -> expression PLUS expression .)
    :               reduce using rule 48 (expression -> expression PLUS expression .)
    SUP             reduce using rule 48 (expression -> expression PLUS expression .)
    INF             reduce using rule 48 (expression -> expression PLUS expression .)
    EQUALSCOMP      reduce using rule 48 (expression -> expression PLUS expression .)
    SUPEQUALS       reduce using rule 48 (expression -> expression PLUS expression .)
    INFEQUALS       reduce using rule 48 (expression -> expression PLUS expression .)
    DIFFERENT       reduce using rule 48 (expression -> expression PLUS expression .)
    WA              reduce using rule 48 (expression -> expression PLUS expression .)
    AW              reduce using rule 48 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! TIMES           [ reduce using rule 48 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]


state 73

    (49) expression -> expression MINUS expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 49 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 49 (expression -> expression MINUS expression .)
    KHREJ           reduce using rule 49 (expression -> expression MINUS expression .)
    KMEL            reduce using rule 49 (expression -> expression MINUS expression .)
    ID              reduce using rule 49 (expression -> expression MINUS expression .)
    MOJOD           reduce using rule 49 (expression -> expression MINUS expression .)
    KTEB            reduce using rule 49 (expression -> expression MINUS expression .)
    (               reduce using rule 49 (expression -> expression MINUS expression .)
    INT             reduce using rule 49 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 49 (expression -> expression MINUS expression .)
    STRING          reduce using rule 49 (expression -> expression MINUS expression .)
    KHATE2          reduce using rule 49 (expression -> expression MINUS expression .)
    S7I7            reduce using rule 49 (expression -> expression MINUS expression .)
    WALO            reduce using rule 49 (expression -> expression MINUS expression .)
    JEREB           reduce using rule 49 (expression -> expression MINUS expression .)
    ILA             reduce using rule 49 (expression -> expression MINUS expression .)
    LKOLA           reduce using rule 49 (expression -> expression MINUS expression .)
    MA7ED           reduce using rule 49 (expression -> expression MINUS expression .)
    DIR             reduce using rule 49 (expression -> expression MINUS expression .)
    QRA             reduce using rule 49 (expression -> expression MINUS expression .)
    TOL             reduce using rule 49 (expression -> expression MINUS expression .)
    [               reduce using rule 49 (expression -> expression MINUS expression .)
    $end            reduce using rule 49 (expression -> expression MINUS expression .)
    )               reduce using rule 49 (expression -> expression MINUS expression .)
    ]               reduce using rule 49 (expression -> expression MINUS expression .)
    ,               reduce using rule 49 (expression -> expression MINUS expression .)
    }               reduce using rule 49 (expression -> expression MINUS expression .)
    ;               reduce using rule 49 (expression -> expression MINUS expression .)
    :               reduce using rule 49 (expression -> expression MINUS expression .)
    SUP             reduce using rule 49 (expression -> expression MINUS expression .)
    INF             reduce using rule 49 (expression -> expression MINUS expression .)
    EQUALSCOMP      reduce using rule 49 (expression -> expression MINUS expression .)
    SUPEQUALS       reduce using rule 49 (expression -> expression MINUS expression .)
    INFEQUALS       reduce using rule 49 (expression -> expression MINUS expression .)
    DIFFERENT       reduce using rule 49 (expression -> expression MINUS expression .)
    WA              reduce using rule 49 (expression -> expression MINUS expression .)
    AW              reduce using rule 49 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! TIMES           [ reduce using rule 49 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]


state 74

    (50) expression -> expression TIMES expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 50 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 50 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 50 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 50 (expression -> expression TIMES expression .)
    KHREJ           reduce using rule 50 (expression -> expression TIMES expression .)
    KMEL            reduce using rule 50 (expression -> expression TIMES expression .)
    ID              reduce using rule 50 (expression -> expression TIMES expression .)
    MOJOD           reduce using rule 50 (expression -> expression TIMES expression .)
    KTEB            reduce using rule 50 (expression -> expression TIMES expression .)
    (               reduce using rule 50 (expression -> expression TIMES expression .)
    INT             reduce using rule 50 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 50 (expression -> expression TIMES expression .)
    STRING          reduce using rule 50 (expression -> expression TIMES expression .)
    KHATE2          reduce using rule 50 (expression -> expression TIMES expression .)
    S7I7            reduce using rule 50 (expression -> expression TIMES expression .)
    WALO            reduce using rule 50 (expression -> expression TIMES expression .)
    JEREB           reduce using rule 50 (expression -> expression TIMES expression .)
    ILA             reduce using rule 50 (expression -> expression TIMES expression .)
    LKOLA           reduce using rule 50 (expression -> expression TIMES expression .)
    MA7ED           reduce using rule 50 (expression -> expression TIMES expression .)
    DIR             reduce using rule 50 (expression -> expression TIMES expression .)
    QRA             reduce using rule 50 (expression -> expression TIMES expression .)
    TOL             reduce using rule 50 (expression -> expression TIMES expression .)
    [               reduce using rule 50 (expression -> expression TIMES expression .)
    $end            reduce using rule 50 (expression -> expression TIMES expression .)
    )               reduce using rule 50 (expression -> expression TIMES expression .)
    ]               reduce using rule 50 (expression -> expression TIMES expression .)
    ,               reduce using rule 50 (expression -> expression TIMES expression .)
    }               reduce using rule 50 (expression -> expression TIMES expression .)
    ;               reduce using rule 50 (expression -> expression TIMES expression .)
    :               reduce using rule 50 (expression -> expression TIMES expression .)
    SUP             reduce using rule 50 (expression -> expression TIMES expression .)
    INF             reduce using rule 50 (expression -> expression TIMES expression .)
    EQUALSCOMP      reduce using rule 50 (expression -> expression TIMES expression .)
    SUPEQUALS       reduce using rule 50 (expression -> expression TIMES expression .)
    INFEQUALS       reduce using rule 50 (expression -> expression TIMES expression .)
    DIFFERENT       reduce using rule 50 (expression -> expression TIMES expression .)
    WA              reduce using rule 50 (expression -> expression TIMES expression .)
    AW              reduce using rule 50 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]
  ! TIMES           [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]


state 75

    (51) expression -> expression DIVIDE expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 51 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 51 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 51 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 51 (expression -> expression DIVIDE expression .)
    KHREJ           reduce using rule 51 (expression -> expression DIVIDE expression .)
    KMEL            reduce using rule 51 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 51 (expression -> expression DIVIDE expression .)
    MOJOD           reduce using rule 51 (expression -> expression DIVIDE expression .)
    KTEB            reduce using rule 51 (expression -> expression DIVIDE expression .)
    (               reduce using rule 51 (expression -> expression DIVIDE expression .)
    INT             reduce using rule 51 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 51 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 51 (expression -> expression DIVIDE expression .)
    KHATE2          reduce using rule 51 (expression -> expression DIVIDE expression .)
    S7I7            reduce using rule 51 (expression -> expression DIVIDE expression .)
    WALO            reduce using rule 51 (expression -> expression DIVIDE expression .)
    JEREB           reduce using rule 51 (expression -> expression DIVIDE expression .)
    ILA             reduce using rule 51 (expression -> expression DIVIDE expression .)
    LKOLA           reduce using rule 51 (expression -> expression DIVIDE expression .)
    MA7ED           reduce using rule 51 (expression -> expression DIVIDE expression .)
    DIR             reduce using rule 51 (expression -> expression DIVIDE expression .)
    QRA             reduce using rule 51 (expression -> expression DIVIDE expression .)
    TOL             reduce using rule 51 (expression -> expression DIVIDE expression .)
    [               reduce using rule 51 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 51 (expression -> expression DIVIDE expression .)
    )               reduce using rule 51 (expression -> expression DIVIDE expression .)
    ]               reduce using rule 51 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 51 (expression -> expression DIVIDE expression .)
    }               reduce using rule 51 (expression -> expression DIVIDE expression .)
    ;               reduce using rule 51 (expression -> expression DIVIDE expression .)
    :               reduce using rule 51 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 51 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 51 (expression -> expression DIVIDE expression .)
    EQUALSCOMP      reduce using rule 51 (expression -> expression DIVIDE expression .)
    SUPEQUALS       reduce using rule 51 (expression -> expression DIVIDE expression .)
    INFEQUALS       reduce using rule 51 (expression -> expression DIVIDE expression .)
    DIFFERENT       reduce using rule 51 (expression -> expression DIVIDE expression .)
    WA              reduce using rule 51 (expression -> expression DIVIDE expression .)
    AW              reduce using rule 51 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 44 ]
  ! MINUS           [ shift and go to state 45 ]
  ! TIMES           [ shift and go to state 46 ]
  ! DIVIDE          [ shift and go to state 47 ]


state 76

    (4) var_assign -> ID EQUALS expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KMEL            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ID              reduce using rule 4 (var_assign -> ID EQUALS expression .)
    MOJOD           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KTEB            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    (               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    INT             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    FLOAT           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    STRING          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KHATE2          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    S7I7            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    WALO            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    JEREB           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ILA             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    LKOLA           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    MA7ED           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    DIR             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    QRA             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    TOL             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    [               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    $end            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    }               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ;               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! MINUS           [ reduce using rule 4 (var_assign -> ID EQUALS expression .) ]
  ! PLUS            [ reduce using rule 4 (var_assign -> ID EQUALS expression .) ]


state 77

    (5) var_assign -> ID EQUALS input .

    KHREJ           reduce using rule 5 (var_assign -> ID EQUALS input .)
    KMEL            reduce using rule 5 (var_assign -> ID EQUALS input .)
    ID              reduce using rule 5 (var_assign -> ID EQUALS input .)
    MOJOD           reduce using rule 5 (var_assign -> ID EQUALS input .)
    KTEB            reduce using rule 5 (var_assign -> ID EQUALS input .)
    (               reduce using rule 5 (var_assign -> ID EQUALS input .)
    MINUS           reduce using rule 5 (var_assign -> ID EQUALS input .)
    PLUS            reduce using rule 5 (var_assign -> ID EQUALS input .)
    INT             reduce using rule 5 (var_assign -> ID EQUALS input .)
    FLOAT           reduce using rule 5 (var_assign -> ID EQUALS input .)
    STRING          reduce using rule 5 (var_assign -> ID EQUALS input .)
    KHATE2          reduce using rule 5 (var_assign -> ID EQUALS input .)
    S7I7            reduce using rule 5 (var_assign -> ID EQUALS input .)
    WALO            reduce using rule 5 (var_assign -> ID EQUALS input .)
    JEREB           reduce using rule 5 (var_assign -> ID EQUALS input .)
    ILA             reduce using rule 5 (var_assign -> ID EQUALS input .)
    LKOLA           reduce using rule 5 (var_assign -> ID EQUALS input .)
    MA7ED           reduce using rule 5 (var_assign -> ID EQUALS input .)
    DIR             reduce using rule 5 (var_assign -> ID EQUALS input .)
    QRA             reduce using rule 5 (var_assign -> ID EQUALS input .)
    TOL             reduce using rule 5 (var_assign -> ID EQUALS input .)
    [               reduce using rule 5 (var_assign -> ID EQUALS input .)
    $end            reduce using rule 5 (var_assign -> ID EQUALS input .)
    }               reduce using rule 5 (var_assign -> ID EQUALS input .)
    ;               reduce using rule 5 (var_assign -> ID EQUALS input .)


state 78

    (75) dimensions -> dimensions [ . expression ]
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 102
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 79

    (76) arrayslice -> ID [ expression . : expression ]
    (78) arrayslice -> ID [ expression . : ]
    (74) dimensions -> [ expression . ]
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    :               shift and go to state 103
    ]               shift and go to state 104
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 80

    (77) arrayslice -> ID [ : . expression ]
    (79) arrayslice -> ID [ : . ]
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    ]               shift and go to state 106
    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 105
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 81

    (7) arrayelt_assign -> arrayelt EQUALS expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    KMEL            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    ID              reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    MOJOD           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    KTEB            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    (               reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    INT             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    FLOAT           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    STRING          reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    KHATE2          reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    S7I7            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    WALO            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    JEREB           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    ILA             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    LKOLA           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    MA7ED           reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    DIR             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    QRA             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    TOL             reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    [               reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    $end            reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    }               reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! MINUS           [ reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .) ]
  ! PLUS            [ reduce using rule 7 (arrayelt_assign -> arrayelt EQUALS expression .) ]


state 82

    (34) condition -> ( . condition ) AW ( condition )
    (35) condition -> ( . condition ) WA ( condition )
    (38) condition -> ( . condition ) WA condition
    (39) condition -> ( . condition ) AW condition
    (52) expression -> ( . expression )
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 82
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 107
    expression                     shift and go to state 108
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 83

    (80) printing -> KTEB ( condition . )
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    )               shift and go to state 109
    WA              shift and go to state 110
    AW              shift and go to state 111


state 84

    (81) printing -> KTEB ( incrementation . )

    )               shift and go to state 112


state 85

    (82) printing -> KTEB ( decrementation . )

    )               shift and go to state 113


state 86

    (40) condition -> L3AKSS . ( condition )

    (               shift and go to state 114


state 87

    (41) condition -> expression . SUP expression
    (42) condition -> expression . INF expression
    (43) condition -> expression . EQUALSCOMP expression
    (44) condition -> expression . SUPEQUALS expression
    (45) condition -> expression . INFEQUALS expression
    (46) condition -> expression . DIFFERENT expression
    (47) condition -> expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    SUP             shift and go to state 115
    INF             shift and go to state 116
    EQUALSCOMP      shift and go to state 117
    SUPEQUALS       shift and go to state 118
    INFEQUALS       shift and go to state 119
    DIFFERENT       shift and go to state 120
    )               reduce using rule 47 (condition -> expression .)
    WA              reduce using rule 47 (condition -> expression .)
    AW              reduce using rule 47 (condition -> expression .)
    ;               reduce using rule 47 (condition -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 88

    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION
    (55) expression -> ID .
    (73) arrayelt -> ID . dimensions
    (76) arrayslice -> ID . [ expression : expression ]
    (77) arrayslice -> ID . [ : expression ]
    (78) arrayslice -> ID . [ expression : ]
    (79) arrayslice -> ID . [ : ]
    (74) dimensions -> . [ expression ]
    (75) dimensions -> . dimensions [ expression ]

    INCREMENTATION  shift and go to state 49
    DECREMENTATION  shift and go to state 50
    SUP             reduce using rule 55 (expression -> ID .)
    INF             reduce using rule 55 (expression -> ID .)
    EQUALSCOMP      reduce using rule 55 (expression -> ID .)
    SUPEQUALS       reduce using rule 55 (expression -> ID .)
    INFEQUALS       reduce using rule 55 (expression -> ID .)
    DIFFERENT       reduce using rule 55 (expression -> ID .)
    PLUS            reduce using rule 55 (expression -> ID .)
    MINUS           reduce using rule 55 (expression -> ID .)
    TIMES           reduce using rule 55 (expression -> ID .)
    DIVIDE          reduce using rule 55 (expression -> ID .)
    )               reduce using rule 55 (expression -> ID .)
    WA              reduce using rule 55 (expression -> ID .)
    AW              reduce using rule 55 (expression -> ID .)
    [               shift and go to state 52

    dimensions                     shift and go to state 51

state 89

    (52) expression -> ( expression ) .

    PLUS            reduce using rule 52 (expression -> ( expression ) .)
    MINUS           reduce using rule 52 (expression -> ( expression ) .)
    TIMES           reduce using rule 52 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 52 (expression -> ( expression ) .)
    KHREJ           reduce using rule 52 (expression -> ( expression ) .)
    KMEL            reduce using rule 52 (expression -> ( expression ) .)
    ID              reduce using rule 52 (expression -> ( expression ) .)
    MOJOD           reduce using rule 52 (expression -> ( expression ) .)
    KTEB            reduce using rule 52 (expression -> ( expression ) .)
    (               reduce using rule 52 (expression -> ( expression ) .)
    INT             reduce using rule 52 (expression -> ( expression ) .)
    FLOAT           reduce using rule 52 (expression -> ( expression ) .)
    STRING          reduce using rule 52 (expression -> ( expression ) .)
    KHATE2          reduce using rule 52 (expression -> ( expression ) .)
    S7I7            reduce using rule 52 (expression -> ( expression ) .)
    WALO            reduce using rule 52 (expression -> ( expression ) .)
    JEREB           reduce using rule 52 (expression -> ( expression ) .)
    ILA             reduce using rule 52 (expression -> ( expression ) .)
    LKOLA           reduce using rule 52 (expression -> ( expression ) .)
    MA7ED           reduce using rule 52 (expression -> ( expression ) .)
    DIR             reduce using rule 52 (expression -> ( expression ) .)
    QRA             reduce using rule 52 (expression -> ( expression ) .)
    TOL             reduce using rule 52 (expression -> ( expression ) .)
    [               reduce using rule 52 (expression -> ( expression ) .)
    $end            reduce using rule 52 (expression -> ( expression ) .)
    )               reduce using rule 52 (expression -> ( expression ) .)
    ]               reduce using rule 52 (expression -> ( expression ) .)
    ,               reduce using rule 52 (expression -> ( expression ) .)
    }               reduce using rule 52 (expression -> ( expression ) .)
    ;               reduce using rule 52 (expression -> ( expression ) .)
    :               reduce using rule 52 (expression -> ( expression ) .)
    SUP             reduce using rule 52 (expression -> ( expression ) .)
    INF             reduce using rule 52 (expression -> ( expression ) .)
    EQUALSCOMP      reduce using rule 52 (expression -> ( expression ) .)
    SUPEQUALS       reduce using rule 52 (expression -> ( expression ) .)
    INFEQUALS       reduce using rule 52 (expression -> ( expression ) .)
    DIFFERENT       reduce using rule 52 (expression -> ( expression ) .)
    WA              reduce using rule 52 (expression -> ( expression ) .)
    AW              reduce using rule 52 (expression -> ( expression ) .)


state 90

    (58) try -> JEREB { instruction_list . } MASD9CH { instruction_list }
    (59) try -> JEREB { instruction_list . } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (33) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 121
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! }               [ reduce using rule 84 (empty -> .) ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction                    shift and go to state 43
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 91

    (8) if -> ILA ( condition . ) { instruction_list }
    (9) if -> ILA ( condition . ) { instruction_list } WLA { instruction_list }
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    )               shift and go to state 122
    WA              shift and go to state 110
    AW              shift and go to state 111


state 92

    (10) for -> LKOLA ( var_assign . ; condition ; incrementation ) { instruction_list }
    (11) for -> LKOLA ( var_assign . ; condition ; decrementation ) { instruction_list }

    ;               shift and go to state 123


state 93

    (12) for -> LKOLA ( expression . ; condition ; incrementation ) { instruction_list }
    (13) for -> LKOLA ( expression . ; condition ; decrementation ) { instruction_list }
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    ;               shift and go to state 124
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 94

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input
    (55) expression -> ID .
    (73) arrayelt -> ID . dimensions
    (76) arrayslice -> ID . [ expression : expression ]
    (77) arrayslice -> ID . [ : expression ]
    (78) arrayslice -> ID . [ expression : ]
    (79) arrayslice -> ID . [ : ]
    (74) dimensions -> . [ expression ]
    (75) dimensions -> . dimensions [ expression ]

    EQUALS          shift and go to state 48
    ;               reduce using rule 55 (expression -> ID .)
    PLUS            reduce using rule 55 (expression -> ID .)
    MINUS           reduce using rule 55 (expression -> ID .)
    TIMES           reduce using rule 55 (expression -> ID .)
    DIVIDE          reduce using rule 55 (expression -> ID .)
    [               shift and go to state 52

    dimensions                     shift and go to state 51

state 95

    (14) while -> MA7ED ( condition . ) { instruction_list }
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    )               shift and go to state 125
    WA              shift and go to state 110
    AW              shift and go to state 111


state 96

    (15) doWhile -> DIR { instruction_list . } MA7ED ( condition )
    (33) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 126
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! }               [ reduce using rule 84 (empty -> .) ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction                    shift and go to state 43
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 97

    (56) input -> QRA ( expression . )
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    )               shift and go to state 127
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 98

    (57) input -> QRA ( ) .

    KHREJ           reduce using rule 57 (input -> QRA ( ) .)
    KMEL            reduce using rule 57 (input -> QRA ( ) .)
    ID              reduce using rule 57 (input -> QRA ( ) .)
    MOJOD           reduce using rule 57 (input -> QRA ( ) .)
    KTEB            reduce using rule 57 (input -> QRA ( ) .)
    (               reduce using rule 57 (input -> QRA ( ) .)
    MINUS           reduce using rule 57 (input -> QRA ( ) .)
    PLUS            reduce using rule 57 (input -> QRA ( ) .)
    INT             reduce using rule 57 (input -> QRA ( ) .)
    FLOAT           reduce using rule 57 (input -> QRA ( ) .)
    STRING          reduce using rule 57 (input -> QRA ( ) .)
    KHATE2          reduce using rule 57 (input -> QRA ( ) .)
    S7I7            reduce using rule 57 (input -> QRA ( ) .)
    WALO            reduce using rule 57 (input -> QRA ( ) .)
    JEREB           reduce using rule 57 (input -> QRA ( ) .)
    ILA             reduce using rule 57 (input -> QRA ( ) .)
    LKOLA           reduce using rule 57 (input -> QRA ( ) .)
    MA7ED           reduce using rule 57 (input -> QRA ( ) .)
    DIR             reduce using rule 57 (input -> QRA ( ) .)
    QRA             reduce using rule 57 (input -> QRA ( ) .)
    TOL             reduce using rule 57 (input -> QRA ( ) .)
    [               reduce using rule 57 (input -> QRA ( ) .)
    $end            reduce using rule 57 (input -> QRA ( ) .)
    }               reduce using rule 57 (input -> QRA ( ) .)
    ;               reduce using rule 57 (input -> QRA ( ) .)


state 99

    (83) len -> TOL ( expression . )
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    )               shift and go to state 128
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 100

    (71) array -> [ arraylist ] .

    PLUS            reduce using rule 71 (array -> [ arraylist ] .)
    MINUS           reduce using rule 71 (array -> [ arraylist ] .)
    TIMES           reduce using rule 71 (array -> [ arraylist ] .)
    DIVIDE          reduce using rule 71 (array -> [ arraylist ] .)
    KHREJ           reduce using rule 71 (array -> [ arraylist ] .)
    KMEL            reduce using rule 71 (array -> [ arraylist ] .)
    ID              reduce using rule 71 (array -> [ arraylist ] .)
    MOJOD           reduce using rule 71 (array -> [ arraylist ] .)
    KTEB            reduce using rule 71 (array -> [ arraylist ] .)
    (               reduce using rule 71 (array -> [ arraylist ] .)
    INT             reduce using rule 71 (array -> [ arraylist ] .)
    FLOAT           reduce using rule 71 (array -> [ arraylist ] .)
    STRING          reduce using rule 71 (array -> [ arraylist ] .)
    KHATE2          reduce using rule 71 (array -> [ arraylist ] .)
    S7I7            reduce using rule 71 (array -> [ arraylist ] .)
    WALO            reduce using rule 71 (array -> [ arraylist ] .)
    JEREB           reduce using rule 71 (array -> [ arraylist ] .)
    ILA             reduce using rule 71 (array -> [ arraylist ] .)
    LKOLA           reduce using rule 71 (array -> [ arraylist ] .)
    MA7ED           reduce using rule 71 (array -> [ arraylist ] .)
    DIR             reduce using rule 71 (array -> [ arraylist ] .)
    QRA             reduce using rule 71 (array -> [ arraylist ] .)
    TOL             reduce using rule 71 (array -> [ arraylist ] .)
    [               reduce using rule 71 (array -> [ arraylist ] .)
    $end            reduce using rule 71 (array -> [ arraylist ] .)
    )               reduce using rule 71 (array -> [ arraylist ] .)
    ]               reduce using rule 71 (array -> [ arraylist ] .)
    ,               reduce using rule 71 (array -> [ arraylist ] .)
    }               reduce using rule 71 (array -> [ arraylist ] .)
    ;               reduce using rule 71 (array -> [ arraylist ] .)
    :               reduce using rule 71 (array -> [ arraylist ] .)
    SUP             reduce using rule 71 (array -> [ arraylist ] .)
    INF             reduce using rule 71 (array -> [ arraylist ] .)
    EQUALSCOMP      reduce using rule 71 (array -> [ arraylist ] .)
    SUPEQUALS       reduce using rule 71 (array -> [ arraylist ] .)
    INFEQUALS       reduce using rule 71 (array -> [ arraylist ] .)
    DIFFERENT       reduce using rule 71 (array -> [ arraylist ] .)
    WA              reduce using rule 71 (array -> [ arraylist ] .)
    AW              reduce using rule 71 (array -> [ arraylist ] .)


state 101

    (70) arraylist -> arraylist , . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 129
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 102

    (75) dimensions -> dimensions [ expression . ]
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    ]               shift and go to state 130
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 103

    (76) arrayslice -> ID [ expression : . expression ]
    (78) arrayslice -> ID [ expression : . ]
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    ]               shift and go to state 132
    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 131
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 104

    (74) dimensions -> [ expression ] .

    [               reduce using rule 74 (dimensions -> [ expression ] .)
    EQUALS          reduce using rule 74 (dimensions -> [ expression ] .)
    PLUS            reduce using rule 74 (dimensions -> [ expression ] .)
    MINUS           reduce using rule 74 (dimensions -> [ expression ] .)
    TIMES           reduce using rule 74 (dimensions -> [ expression ] .)
    DIVIDE          reduce using rule 74 (dimensions -> [ expression ] .)
    KHREJ           reduce using rule 74 (dimensions -> [ expression ] .)
    KMEL            reduce using rule 74 (dimensions -> [ expression ] .)
    ID              reduce using rule 74 (dimensions -> [ expression ] .)
    MOJOD           reduce using rule 74 (dimensions -> [ expression ] .)
    KTEB            reduce using rule 74 (dimensions -> [ expression ] .)
    (               reduce using rule 74 (dimensions -> [ expression ] .)
    INT             reduce using rule 74 (dimensions -> [ expression ] .)
    FLOAT           reduce using rule 74 (dimensions -> [ expression ] .)
    STRING          reduce using rule 74 (dimensions -> [ expression ] .)
    KHATE2          reduce using rule 74 (dimensions -> [ expression ] .)
    S7I7            reduce using rule 74 (dimensions -> [ expression ] .)
    WALO            reduce using rule 74 (dimensions -> [ expression ] .)
    JEREB           reduce using rule 74 (dimensions -> [ expression ] .)
    ILA             reduce using rule 74 (dimensions -> [ expression ] .)
    LKOLA           reduce using rule 74 (dimensions -> [ expression ] .)
    MA7ED           reduce using rule 74 (dimensions -> [ expression ] .)
    DIR             reduce using rule 74 (dimensions -> [ expression ] .)
    QRA             reduce using rule 74 (dimensions -> [ expression ] .)
    TOL             reduce using rule 74 (dimensions -> [ expression ] .)
    $end            reduce using rule 74 (dimensions -> [ expression ] .)
    }               reduce using rule 74 (dimensions -> [ expression ] .)
    )               reduce using rule 74 (dimensions -> [ expression ] .)
    ]               reduce using rule 74 (dimensions -> [ expression ] .)
    ,               reduce using rule 74 (dimensions -> [ expression ] .)
    ;               reduce using rule 74 (dimensions -> [ expression ] .)
    :               reduce using rule 74 (dimensions -> [ expression ] .)
    SUP             reduce using rule 74 (dimensions -> [ expression ] .)
    INF             reduce using rule 74 (dimensions -> [ expression ] .)
    EQUALSCOMP      reduce using rule 74 (dimensions -> [ expression ] .)
    SUPEQUALS       reduce using rule 74 (dimensions -> [ expression ] .)
    INFEQUALS       reduce using rule 74 (dimensions -> [ expression ] .)
    DIFFERENT       reduce using rule 74 (dimensions -> [ expression ] .)
    WA              reduce using rule 74 (dimensions -> [ expression ] .)
    AW              reduce using rule 74 (dimensions -> [ expression ] .)


state 105

    (77) arrayslice -> ID [ : expression . ]
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    ]               shift and go to state 133
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 106

    (79) arrayslice -> ID [ : ] .

    PLUS            reduce using rule 79 (arrayslice -> ID [ : ] .)
    MINUS           reduce using rule 79 (arrayslice -> ID [ : ] .)
    TIMES           reduce using rule 79 (arrayslice -> ID [ : ] .)
    DIVIDE          reduce using rule 79 (arrayslice -> ID [ : ] .)
    KHREJ           reduce using rule 79 (arrayslice -> ID [ : ] .)
    KMEL            reduce using rule 79 (arrayslice -> ID [ : ] .)
    ID              reduce using rule 79 (arrayslice -> ID [ : ] .)
    MOJOD           reduce using rule 79 (arrayslice -> ID [ : ] .)
    KTEB            reduce using rule 79 (arrayslice -> ID [ : ] .)
    (               reduce using rule 79 (arrayslice -> ID [ : ] .)
    INT             reduce using rule 79 (arrayslice -> ID [ : ] .)
    FLOAT           reduce using rule 79 (arrayslice -> ID [ : ] .)
    STRING          reduce using rule 79 (arrayslice -> ID [ : ] .)
    KHATE2          reduce using rule 79 (arrayslice -> ID [ : ] .)
    S7I7            reduce using rule 79 (arrayslice -> ID [ : ] .)
    WALO            reduce using rule 79 (arrayslice -> ID [ : ] .)
    JEREB           reduce using rule 79 (arrayslice -> ID [ : ] .)
    ILA             reduce using rule 79 (arrayslice -> ID [ : ] .)
    LKOLA           reduce using rule 79 (arrayslice -> ID [ : ] .)
    MA7ED           reduce using rule 79 (arrayslice -> ID [ : ] .)
    DIR             reduce using rule 79 (arrayslice -> ID [ : ] .)
    QRA             reduce using rule 79 (arrayslice -> ID [ : ] .)
    TOL             reduce using rule 79 (arrayslice -> ID [ : ] .)
    [               reduce using rule 79 (arrayslice -> ID [ : ] .)
    $end            reduce using rule 79 (arrayslice -> ID [ : ] .)
    )               reduce using rule 79 (arrayslice -> ID [ : ] .)
    ]               reduce using rule 79 (arrayslice -> ID [ : ] .)
    ,               reduce using rule 79 (arrayslice -> ID [ : ] .)
    }               reduce using rule 79 (arrayslice -> ID [ : ] .)
    ;               reduce using rule 79 (arrayslice -> ID [ : ] .)
    :               reduce using rule 79 (arrayslice -> ID [ : ] .)
    SUP             reduce using rule 79 (arrayslice -> ID [ : ] .)
    INF             reduce using rule 79 (arrayslice -> ID [ : ] .)
    EQUALSCOMP      reduce using rule 79 (arrayslice -> ID [ : ] .)
    SUPEQUALS       reduce using rule 79 (arrayslice -> ID [ : ] .)
    INFEQUALS       reduce using rule 79 (arrayslice -> ID [ : ] .)
    DIFFERENT       reduce using rule 79 (arrayslice -> ID [ : ] .)
    WA              reduce using rule 79 (arrayslice -> ID [ : ] .)
    AW              reduce using rule 79 (arrayslice -> ID [ : ] .)


state 107

    (34) condition -> ( condition . ) AW ( condition )
    (35) condition -> ( condition . ) WA ( condition )
    (38) condition -> ( condition . ) WA condition
    (39) condition -> ( condition . ) AW condition
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    )               shift and go to state 134
    WA              shift and go to state 110
    AW              shift and go to state 111


state 108

    (52) expression -> ( expression . )
    (41) condition -> expression . SUP expression
    (42) condition -> expression . INF expression
    (43) condition -> expression . EQUALSCOMP expression
    (44) condition -> expression . SUPEQUALS expression
    (45) condition -> expression . INFEQUALS expression
    (46) condition -> expression . DIFFERENT expression
    (47) condition -> expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    )               shift and go to state 89
    SUP             shift and go to state 115
    INF             shift and go to state 116
    EQUALSCOMP      shift and go to state 117
    SUPEQUALS       shift and go to state 118
    INFEQUALS       shift and go to state 119
    DIFFERENT       shift and go to state 120
    WA              reduce using rule 47 (condition -> expression .)
    AW              reduce using rule 47 (condition -> expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47

  ! )               [ reduce using rule 47 (condition -> expression .) ]


state 109

    (80) printing -> KTEB ( condition ) .

    KHREJ           reduce using rule 80 (printing -> KTEB ( condition ) .)
    KMEL            reduce using rule 80 (printing -> KTEB ( condition ) .)
    ID              reduce using rule 80 (printing -> KTEB ( condition ) .)
    MOJOD           reduce using rule 80 (printing -> KTEB ( condition ) .)
    KTEB            reduce using rule 80 (printing -> KTEB ( condition ) .)
    (               reduce using rule 80 (printing -> KTEB ( condition ) .)
    MINUS           reduce using rule 80 (printing -> KTEB ( condition ) .)
    PLUS            reduce using rule 80 (printing -> KTEB ( condition ) .)
    INT             reduce using rule 80 (printing -> KTEB ( condition ) .)
    FLOAT           reduce using rule 80 (printing -> KTEB ( condition ) .)
    STRING          reduce using rule 80 (printing -> KTEB ( condition ) .)
    KHATE2          reduce using rule 80 (printing -> KTEB ( condition ) .)
    S7I7            reduce using rule 80 (printing -> KTEB ( condition ) .)
    WALO            reduce using rule 80 (printing -> KTEB ( condition ) .)
    JEREB           reduce using rule 80 (printing -> KTEB ( condition ) .)
    ILA             reduce using rule 80 (printing -> KTEB ( condition ) .)
    LKOLA           reduce using rule 80 (printing -> KTEB ( condition ) .)
    MA7ED           reduce using rule 80 (printing -> KTEB ( condition ) .)
    DIR             reduce using rule 80 (printing -> KTEB ( condition ) .)
    QRA             reduce using rule 80 (printing -> KTEB ( condition ) .)
    TOL             reduce using rule 80 (printing -> KTEB ( condition ) .)
    [               reduce using rule 80 (printing -> KTEB ( condition ) .)
    $end            reduce using rule 80 (printing -> KTEB ( condition ) .)
    }               reduce using rule 80 (printing -> KTEB ( condition ) .)


state 110

    (36) condition -> condition WA . ( condition )

    (               shift and go to state 135


state 111

    (37) condition -> condition AW . ( condition )

    (               shift and go to state 136


state 112

    (81) printing -> KTEB ( incrementation ) .

    KHREJ           reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    KMEL            reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    ID              reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    MOJOD           reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    KTEB            reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    (               reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    MINUS           reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    PLUS            reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    INT             reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    FLOAT           reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    STRING          reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    KHATE2          reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    S7I7            reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    WALO            reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    JEREB           reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    ILA             reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    LKOLA           reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    MA7ED           reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    DIR             reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    QRA             reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    TOL             reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    [               reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    $end            reduce using rule 81 (printing -> KTEB ( incrementation ) .)
    }               reduce using rule 81 (printing -> KTEB ( incrementation ) .)


state 113

    (82) printing -> KTEB ( decrementation ) .

    KHREJ           reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    KMEL            reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    ID              reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    MOJOD           reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    KTEB            reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    (               reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    MINUS           reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    PLUS            reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    INT             reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    FLOAT           reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    STRING          reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    KHATE2          reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    S7I7            reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    WALO            reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    JEREB           reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    ILA             reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    LKOLA           reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    MA7ED           reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    DIR             reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    QRA             reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    TOL             reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    [               reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    $end            reduce using rule 82 (printing -> KTEB ( decrementation ) .)
    }               reduce using rule 82 (printing -> KTEB ( decrementation ) .)


state 114

    (40) condition -> L3AKSS ( . condition )
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 82
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 137
    expression                     shift and go to state 87
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 115

    (41) condition -> expression SUP . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 138
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 116

    (42) condition -> expression INF . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 139
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 117

    (43) condition -> expression EQUALSCOMP . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 140
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 118

    (44) condition -> expression SUPEQUALS . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 141
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 119

    (45) condition -> expression INFEQUALS . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 142
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 120

    (46) condition -> expression DIFFERENT . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 143
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 121

    (58) try -> JEREB { instruction_list } . MASD9CH { instruction_list }
    (59) try -> JEREB { instruction_list } . MASD9CH { instruction_list } AKHIRAN { instruction_list }

    MASD9CH         shift and go to state 144


state 122

    (8) if -> ILA ( condition ) . { instruction_list }
    (9) if -> ILA ( condition ) . { instruction_list } WLA { instruction_list }

    {               shift and go to state 145


state 123

    (10) for -> LKOLA ( var_assign ; . condition ; incrementation ) { instruction_list }
    (11) for -> LKOLA ( var_assign ; . condition ; decrementation ) { instruction_list }
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 82
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 146
    expression                     shift and go to state 87
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 124

    (12) for -> LKOLA ( expression ; . condition ; incrementation ) { instruction_list }
    (13) for -> LKOLA ( expression ; . condition ; decrementation ) { instruction_list }
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 82
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    expression                     shift and go to state 87
    condition                      shift and go to state 147
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 125

    (14) while -> MA7ED ( condition ) . { instruction_list }

    {               shift and go to state 148


state 126

    (15) doWhile -> DIR { instruction_list } . MA7ED ( condition )

    MA7ED           shift and go to state 149


state 127

    (56) input -> QRA ( expression ) .

    KHREJ           reduce using rule 56 (input -> QRA ( expression ) .)
    KMEL            reduce using rule 56 (input -> QRA ( expression ) .)
    ID              reduce using rule 56 (input -> QRA ( expression ) .)
    MOJOD           reduce using rule 56 (input -> QRA ( expression ) .)
    KTEB            reduce using rule 56 (input -> QRA ( expression ) .)
    (               reduce using rule 56 (input -> QRA ( expression ) .)
    MINUS           reduce using rule 56 (input -> QRA ( expression ) .)
    PLUS            reduce using rule 56 (input -> QRA ( expression ) .)
    INT             reduce using rule 56 (input -> QRA ( expression ) .)
    FLOAT           reduce using rule 56 (input -> QRA ( expression ) .)
    STRING          reduce using rule 56 (input -> QRA ( expression ) .)
    KHATE2          reduce using rule 56 (input -> QRA ( expression ) .)
    S7I7            reduce using rule 56 (input -> QRA ( expression ) .)
    WALO            reduce using rule 56 (input -> QRA ( expression ) .)
    JEREB           reduce using rule 56 (input -> QRA ( expression ) .)
    ILA             reduce using rule 56 (input -> QRA ( expression ) .)
    LKOLA           reduce using rule 56 (input -> QRA ( expression ) .)
    MA7ED           reduce using rule 56 (input -> QRA ( expression ) .)
    DIR             reduce using rule 56 (input -> QRA ( expression ) .)
    QRA             reduce using rule 56 (input -> QRA ( expression ) .)
    TOL             reduce using rule 56 (input -> QRA ( expression ) .)
    [               reduce using rule 56 (input -> QRA ( expression ) .)
    $end            reduce using rule 56 (input -> QRA ( expression ) .)
    }               reduce using rule 56 (input -> QRA ( expression ) .)
    ;               reduce using rule 56 (input -> QRA ( expression ) .)


state 128

    (83) len -> TOL ( expression ) .

    KHREJ           reduce using rule 83 (len -> TOL ( expression ) .)
    KMEL            reduce using rule 83 (len -> TOL ( expression ) .)
    ID              reduce using rule 83 (len -> TOL ( expression ) .)
    MOJOD           reduce using rule 83 (len -> TOL ( expression ) .)
    KTEB            reduce using rule 83 (len -> TOL ( expression ) .)
    (               reduce using rule 83 (len -> TOL ( expression ) .)
    MINUS           reduce using rule 83 (len -> TOL ( expression ) .)
    PLUS            reduce using rule 83 (len -> TOL ( expression ) .)
    INT             reduce using rule 83 (len -> TOL ( expression ) .)
    FLOAT           reduce using rule 83 (len -> TOL ( expression ) .)
    STRING          reduce using rule 83 (len -> TOL ( expression ) .)
    KHATE2          reduce using rule 83 (len -> TOL ( expression ) .)
    S7I7            reduce using rule 83 (len -> TOL ( expression ) .)
    WALO            reduce using rule 83 (len -> TOL ( expression ) .)
    JEREB           reduce using rule 83 (len -> TOL ( expression ) .)
    ILA             reduce using rule 83 (len -> TOL ( expression ) .)
    LKOLA           reduce using rule 83 (len -> TOL ( expression ) .)
    MA7ED           reduce using rule 83 (len -> TOL ( expression ) .)
    DIR             reduce using rule 83 (len -> TOL ( expression ) .)
    QRA             reduce using rule 83 (len -> TOL ( expression ) .)
    TOL             reduce using rule 83 (len -> TOL ( expression ) .)
    [               reduce using rule 83 (len -> TOL ( expression ) .)
    $end            reduce using rule 83 (len -> TOL ( expression ) .)
    }               reduce using rule 83 (len -> TOL ( expression ) .)


state 129

    (70) arraylist -> arraylist , expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    ]               reduce using rule 70 (arraylist -> arraylist , expression .)
    ,               reduce using rule 70 (arraylist -> arraylist , expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 130

    (75) dimensions -> dimensions [ expression ] .

    [               reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    EQUALS          reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    PLUS            reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    MINUS           reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    TIMES           reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    DIVIDE          reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    KHREJ           reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    KMEL            reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    ID              reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    MOJOD           reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    KTEB            reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    (               reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    INT             reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    FLOAT           reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    STRING          reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    KHATE2          reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    S7I7            reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    WALO            reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    JEREB           reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    ILA             reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    LKOLA           reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    MA7ED           reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    DIR             reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    QRA             reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    TOL             reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    $end            reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    }               reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    )               reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    ]               reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    ,               reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    ;               reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    :               reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    SUP             reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    INF             reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    EQUALSCOMP      reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    SUPEQUALS       reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    INFEQUALS       reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    DIFFERENT       reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    WA              reduce using rule 75 (dimensions -> dimensions [ expression ] .)
    AW              reduce using rule 75 (dimensions -> dimensions [ expression ] .)


state 131

    (76) arrayslice -> ID [ expression : expression . ]
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    ]               shift and go to state 150
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 132

    (78) arrayslice -> ID [ expression : ] .

    PLUS            reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    MINUS           reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    TIMES           reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    DIVIDE          reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    KHREJ           reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    KMEL            reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    ID              reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    MOJOD           reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    KTEB            reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    (               reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    INT             reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    FLOAT           reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    STRING          reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    KHATE2          reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    S7I7            reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    WALO            reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    JEREB           reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    ILA             reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    LKOLA           reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    MA7ED           reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    DIR             reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    QRA             reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    TOL             reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    [               reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    $end            reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    )               reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    ]               reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    ,               reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    }               reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    ;               reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    :               reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    SUP             reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    INF             reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    EQUALSCOMP      reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    SUPEQUALS       reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    INFEQUALS       reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    DIFFERENT       reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    WA              reduce using rule 78 (arrayslice -> ID [ expression : ] .)
    AW              reduce using rule 78 (arrayslice -> ID [ expression : ] .)


state 133

    (77) arrayslice -> ID [ : expression ] .

    PLUS            reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    MINUS           reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    TIMES           reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    DIVIDE          reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    KHREJ           reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    KMEL            reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    ID              reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    MOJOD           reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    KTEB            reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    (               reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    INT             reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    FLOAT           reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    STRING          reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    KHATE2          reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    S7I7            reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    WALO            reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    JEREB           reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    ILA             reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    LKOLA           reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    MA7ED           reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    DIR             reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    QRA             reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    TOL             reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    [               reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    $end            reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    )               reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    ]               reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    ,               reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    }               reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    ;               reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    :               reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    SUP             reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    INF             reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    EQUALSCOMP      reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    SUPEQUALS       reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    INFEQUALS       reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    DIFFERENT       reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    WA              reduce using rule 77 (arrayslice -> ID [ : expression ] .)
    AW              reduce using rule 77 (arrayslice -> ID [ : expression ] .)


state 134

    (34) condition -> ( condition ) . AW ( condition )
    (35) condition -> ( condition ) . WA ( condition )
    (38) condition -> ( condition ) . WA condition
    (39) condition -> ( condition ) . AW condition

    AW              shift and go to state 151
    WA              shift and go to state 152


state 135

    (36) condition -> condition WA ( . condition )
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 82
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 153
    expression                     shift and go to state 87
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 136

    (37) condition -> condition AW ( . condition )
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 82
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 154
    expression                     shift and go to state 87
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 137

    (40) condition -> L3AKSS ( condition . )
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    )               shift and go to state 155
    WA              shift and go to state 110
    AW              shift and go to state 111


state 138

    (41) condition -> expression SUP expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    )               reduce using rule 41 (condition -> expression SUP expression .)
    WA              reduce using rule 41 (condition -> expression SUP expression .)
    AW              reduce using rule 41 (condition -> expression SUP expression .)
    ;               reduce using rule 41 (condition -> expression SUP expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 139

    (42) condition -> expression INF expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    )               reduce using rule 42 (condition -> expression INF expression .)
    WA              reduce using rule 42 (condition -> expression INF expression .)
    AW              reduce using rule 42 (condition -> expression INF expression .)
    ;               reduce using rule 42 (condition -> expression INF expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 140

    (43) condition -> expression EQUALSCOMP expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    )               reduce using rule 43 (condition -> expression EQUALSCOMP expression .)
    WA              reduce using rule 43 (condition -> expression EQUALSCOMP expression .)
    AW              reduce using rule 43 (condition -> expression EQUALSCOMP expression .)
    ;               reduce using rule 43 (condition -> expression EQUALSCOMP expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 141

    (44) condition -> expression SUPEQUALS expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    )               reduce using rule 44 (condition -> expression SUPEQUALS expression .)
    WA              reduce using rule 44 (condition -> expression SUPEQUALS expression .)
    AW              reduce using rule 44 (condition -> expression SUPEQUALS expression .)
    ;               reduce using rule 44 (condition -> expression SUPEQUALS expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 142

    (45) condition -> expression INFEQUALS expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    )               reduce using rule 45 (condition -> expression INFEQUALS expression .)
    WA              reduce using rule 45 (condition -> expression INFEQUALS expression .)
    AW              reduce using rule 45 (condition -> expression INFEQUALS expression .)
    ;               reduce using rule 45 (condition -> expression INFEQUALS expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 143

    (46) condition -> expression DIFFERENT expression .
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression

    )               reduce using rule 46 (condition -> expression DIFFERENT expression .)
    WA              reduce using rule 46 (condition -> expression DIFFERENT expression .)
    AW              reduce using rule 46 (condition -> expression DIFFERENT expression .)
    ;               reduce using rule 46 (condition -> expression DIFFERENT expression .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    TIMES           shift and go to state 46
    DIVIDE          shift and go to state 47


state 144

    (58) try -> JEREB { instruction_list } MASD9CH . { instruction_list }
    (59) try -> JEREB { instruction_list } MASD9CH . { instruction_list } AKHIRAN { instruction_list }

    {               shift and go to state 156


state 145

    (8) if -> ILA ( condition ) { . instruction_list }
    (9) if -> ILA ( condition ) { . instruction_list } WLA { instruction_list }
    (32) instruction_list -> . instruction
    (33) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    }               reduce using rule 84 (empty -> .)
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction_list               shift and go to state 157
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 146

    (10) for -> LKOLA ( var_assign ; condition . ; incrementation ) { instruction_list }
    (11) for -> LKOLA ( var_assign ; condition . ; decrementation ) { instruction_list }
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    ;               shift and go to state 158
    WA              shift and go to state 110
    AW              shift and go to state 111


state 147

    (12) for -> LKOLA ( expression ; condition . ; incrementation ) { instruction_list }
    (13) for -> LKOLA ( expression ; condition . ; decrementation ) { instruction_list }
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    ;               shift and go to state 159
    WA              shift and go to state 110
    AW              shift and go to state 111


state 148

    (14) while -> MA7ED ( condition ) { . instruction_list }
    (32) instruction_list -> . instruction
    (33) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    }               reduce using rule 84 (empty -> .)
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction_list               shift and go to state 160
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 149

    (15) doWhile -> DIR { instruction_list } MA7ED . ( condition )

    (               shift and go to state 161


state 150

    (76) arrayslice -> ID [ expression : expression ] .

    PLUS            reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    MINUS           reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    TIMES           reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    DIVIDE          reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    KHREJ           reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    KMEL            reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    ID              reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    MOJOD           reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    KTEB            reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    (               reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    INT             reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    FLOAT           reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    STRING          reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    KHATE2          reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    S7I7            reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    WALO            reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    JEREB           reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    ILA             reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    LKOLA           reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    MA7ED           reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    DIR             reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    QRA             reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    TOL             reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    [               reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    $end            reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    )               reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    ]               reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    ,               reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    }               reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    ;               reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    :               reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    SUP             reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    INF             reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    EQUALSCOMP      reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    SUPEQUALS       reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    INFEQUALS       reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    DIFFERENT       reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    WA              reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)
    AW              reduce using rule 76 (arrayslice -> ID [ expression : expression ] .)


state 151

    (34) condition -> ( condition ) AW . ( condition )
    (39) condition -> ( condition ) AW . condition
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 162
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 163
    expression                     shift and go to state 87
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 152

    (35) condition -> ( condition ) WA . ( condition )
    (38) condition -> ( condition ) WA . condition
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 164
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 165
    expression                     shift and go to state 87
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 153

    (36) condition -> condition WA ( condition . )
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    )               shift and go to state 166
    WA              shift and go to state 110
    AW              shift and go to state 111


state 154

    (37) condition -> condition AW ( condition . )
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    )               shift and go to state 167
    WA              shift and go to state 110
    AW              shift and go to state 111


state 155

    (40) condition -> L3AKSS ( condition ) .

    )               reduce using rule 40 (condition -> L3AKSS ( condition ) .)
    WA              reduce using rule 40 (condition -> L3AKSS ( condition ) .)
    AW              reduce using rule 40 (condition -> L3AKSS ( condition ) .)
    ;               reduce using rule 40 (condition -> L3AKSS ( condition ) .)


state 156

    (58) try -> JEREB { instruction_list } MASD9CH { . instruction_list }
    (59) try -> JEREB { instruction_list } MASD9CH { . instruction_list } AKHIRAN { instruction_list }
    (32) instruction_list -> . instruction
    (33) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    }               reduce using rule 84 (empty -> .)
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction_list               shift and go to state 168
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 157

    (8) if -> ILA ( condition ) { instruction_list . }
    (9) if -> ILA ( condition ) { instruction_list . } WLA { instruction_list }
    (33) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 169
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! }               [ reduce using rule 84 (empty -> .) ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction                    shift and go to state 43
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 158

    (10) for -> LKOLA ( var_assign ; condition ; . incrementation ) { instruction_list }
    (11) for -> LKOLA ( var_assign ; condition ; . decrementation ) { instruction_list }
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION

    ID              shift and go to state 172

    incrementation                 shift and go to state 170
    decrementation                 shift and go to state 171

state 159

    (12) for -> LKOLA ( expression ; condition ; . incrementation ) { instruction_list }
    (13) for -> LKOLA ( expression ; condition ; . decrementation ) { instruction_list }
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION

    ID              shift and go to state 172

    incrementation                 shift and go to state 173
    decrementation                 shift and go to state 174

state 160

    (14) while -> MA7ED ( condition ) { instruction_list . }
    (33) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 175
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! }               [ reduce using rule 84 (empty -> .) ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction                    shift and go to state 43
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 161

    (15) doWhile -> DIR { instruction_list } MA7ED ( . condition )
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 82
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 176
    expression                     shift and go to state 87
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 162

    (34) condition -> ( condition ) AW ( . condition )
    (34) condition -> ( . condition ) AW ( condition )
    (35) condition -> ( . condition ) WA ( condition )
    (38) condition -> ( . condition ) WA condition
    (39) condition -> ( . condition ) AW condition
    (52) expression -> ( . expression )
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 82
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 177
    expression                     shift and go to state 108
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 163

    (39) condition -> ( condition ) AW condition .
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    )               reduce using rule 39 (condition -> ( condition ) AW condition .)
    WA              reduce using rule 39 (condition -> ( condition ) AW condition .)
    AW              reduce using rule 39 (condition -> ( condition ) AW condition .)
    ;               reduce using rule 39 (condition -> ( condition ) AW condition .)

  ! WA              [ shift and go to state 110 ]
  ! AW              [ shift and go to state 111 ]


state 164

    (35) condition -> ( condition ) WA ( . condition )
    (34) condition -> ( . condition ) AW ( condition )
    (35) condition -> ( . condition ) WA ( condition )
    (38) condition -> ( . condition ) WA condition
    (39) condition -> ( . condition ) AW condition
    (52) expression -> ( . expression )
    (34) condition -> . ( condition ) AW ( condition )
    (35) condition -> . ( condition ) WA ( condition )
    (36) condition -> . condition WA ( condition )
    (37) condition -> . condition AW ( condition )
    (38) condition -> . ( condition ) WA condition
    (39) condition -> . ( condition ) AW condition
    (40) condition -> . L3AKSS ( condition )
    (41) condition -> . expression SUP expression
    (42) condition -> . expression INF expression
    (43) condition -> . expression EQUALSCOMP expression
    (44) condition -> . expression SUPEQUALS expression
    (45) condition -> . expression INFEQUALS expression
    (46) condition -> . expression DIFFERENT expression
    (47) condition -> . expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (73) arrayelt -> . ID dimensions
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

    (               shift and go to state 82
    L3AKSS          shift and go to state 86
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    ID              shift and go to state 58
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    [               shift and go to state 42

    condition                      shift and go to state 178
    expression                     shift and go to state 108
    array                          shift and go to state 33
    arrayelt                       shift and go to state 59
    arrayslice                     shift and go to state 34

state 165

    (38) condition -> ( condition ) WA condition .
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    )               reduce using rule 38 (condition -> ( condition ) WA condition .)
    WA              reduce using rule 38 (condition -> ( condition ) WA condition .)
    AW              reduce using rule 38 (condition -> ( condition ) WA condition .)
    ;               reduce using rule 38 (condition -> ( condition ) WA condition .)

  ! WA              [ shift and go to state 110 ]
  ! AW              [ shift and go to state 111 ]


state 166

    (36) condition -> condition WA ( condition ) .

    )               reduce using rule 36 (condition -> condition WA ( condition ) .)
    WA              reduce using rule 36 (condition -> condition WA ( condition ) .)
    AW              reduce using rule 36 (condition -> condition WA ( condition ) .)
    ;               reduce using rule 36 (condition -> condition WA ( condition ) .)


state 167

    (37) condition -> condition AW ( condition ) .

    )               reduce using rule 37 (condition -> condition AW ( condition ) .)
    WA              reduce using rule 37 (condition -> condition AW ( condition ) .)
    AW              reduce using rule 37 (condition -> condition AW ( condition ) .)
    ;               reduce using rule 37 (condition -> condition AW ( condition ) .)


state 168

    (58) try -> JEREB { instruction_list } MASD9CH { instruction_list . }
    (59) try -> JEREB { instruction_list } MASD9CH { instruction_list . } AKHIRAN { instruction_list }
    (33) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 179
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! }               [ reduce using rule 84 (empty -> .) ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction                    shift and go to state 43
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 169

    (8) if -> ILA ( condition ) { instruction_list } .
    (9) if -> ILA ( condition ) { instruction_list } . WLA { instruction_list }

    KHREJ           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    KMEL            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    ID              reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    MOJOD           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    KTEB            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    (               reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    MINUS           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    PLUS            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    INT             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    FLOAT           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    STRING          reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    KHATE2          reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    S7I7            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    WALO            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    JEREB           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    ILA             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    LKOLA           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    MA7ED           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    DIR             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    QRA             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    TOL             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    [               reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    $end            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    }               reduce using rule 8 (if -> ILA ( condition ) { instruction_list } .)
    WLA             shift and go to state 180


state 170

    (10) for -> LKOLA ( var_assign ; condition ; incrementation . ) { instruction_list }

    )               shift and go to state 181


state 171

    (11) for -> LKOLA ( var_assign ; condition ; decrementation . ) { instruction_list }

    )               shift and go to state 182


state 172

    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION

    INCREMENTATION  shift and go to state 49
    DECREMENTATION  shift and go to state 50


state 173

    (12) for -> LKOLA ( expression ; condition ; incrementation . ) { instruction_list }

    )               shift and go to state 183


state 174

    (13) for -> LKOLA ( expression ; condition ; decrementation . ) { instruction_list }

    )               shift and go to state 184


state 175

    (14) while -> MA7ED ( condition ) { instruction_list } .

    KHREJ           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    KMEL            reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    ID              reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    MOJOD           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    KTEB            reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    (               reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    MINUS           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    PLUS            reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    INT             reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    FLOAT           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    STRING          reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    KHATE2          reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    S7I7            reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    WALO            reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    JEREB           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    ILA             reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    LKOLA           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    MA7ED           reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    DIR             reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    QRA             reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    TOL             reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    [               reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    $end            reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)
    }               reduce using rule 14 (while -> MA7ED ( condition ) { instruction_list } .)


state 176

    (15) doWhile -> DIR { instruction_list } MA7ED ( condition . )
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    )               shift and go to state 185
    WA              shift and go to state 110
    AW              shift and go to state 111


state 177

    (34) condition -> ( condition ) AW ( condition . )
    (34) condition -> ( condition . ) AW ( condition )
    (35) condition -> ( condition . ) WA ( condition )
    (38) condition -> ( condition . ) WA condition
    (39) condition -> ( condition . ) AW condition
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    )               shift and go to state 186
    WA              shift and go to state 110
    AW              shift and go to state 111


state 178

    (35) condition -> ( condition ) WA ( condition . )
    (34) condition -> ( condition . ) AW ( condition )
    (35) condition -> ( condition . ) WA ( condition )
    (38) condition -> ( condition . ) WA condition
    (39) condition -> ( condition . ) AW condition
    (36) condition -> condition . WA ( condition )
    (37) condition -> condition . AW ( condition )

    )               shift and go to state 187
    WA              shift and go to state 110
    AW              shift and go to state 111


state 179

    (58) try -> JEREB { instruction_list } MASD9CH { instruction_list } .
    (59) try -> JEREB { instruction_list } MASD9CH { instruction_list } . AKHIRAN { instruction_list }

    KHREJ           reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KMEL            reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    ID              reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MOJOD           reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KTEB            reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    (               reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MINUS           reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    PLUS            reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    INT             reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    FLOAT           reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    STRING          reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KHATE2          reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    S7I7            reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    WALO            reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    JEREB           reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    ILA             reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    LKOLA           reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MA7ED           reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    DIR             reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    QRA             reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    TOL             reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    [               reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    $end            reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    }               reduce using rule 58 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    AKHIRAN         shift and go to state 188


state 180

    (9) if -> ILA ( condition ) { instruction_list } WLA . { instruction_list }

    {               shift and go to state 189


state 181

    (10) for -> LKOLA ( var_assign ; condition ; incrementation ) . { instruction_list }

    {               shift and go to state 190


state 182

    (11) for -> LKOLA ( var_assign ; condition ; decrementation ) . { instruction_list }

    {               shift and go to state 191


state 183

    (12) for -> LKOLA ( expression ; condition ; incrementation ) . { instruction_list }

    {               shift and go to state 192


state 184

    (13) for -> LKOLA ( expression ; condition ; decrementation ) . { instruction_list }

    {               shift and go to state 193


state 185

    (15) doWhile -> DIR { instruction_list } MA7ED ( condition ) .

    KHREJ           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KMEL            reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    ID              reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MOJOD           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KTEB            reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    (               reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MINUS           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    PLUS            reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    INT             reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    FLOAT           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    STRING          reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KHATE2          reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    S7I7            reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    WALO            reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    JEREB           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    ILA             reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    LKOLA           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MA7ED           reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    DIR             reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    QRA             reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    TOL             reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    [               reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    $end            reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    }               reduce using rule 15 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)


state 186

    (34) condition -> ( condition ) AW ( condition ) .
    (34) condition -> ( condition ) . AW ( condition )
    (35) condition -> ( condition ) . WA ( condition )
    (38) condition -> ( condition ) . WA condition
    (39) condition -> ( condition ) . AW condition

    )               reduce using rule 34 (condition -> ( condition ) AW ( condition ) .)
    WA              reduce using rule 34 (condition -> ( condition ) AW ( condition ) .)
    AW              reduce using rule 34 (condition -> ( condition ) AW ( condition ) .)
    ;               reduce using rule 34 (condition -> ( condition ) AW ( condition ) .)

  ! AW              [ shift and go to state 151 ]
  ! WA              [ shift and go to state 152 ]


state 187

    (35) condition -> ( condition ) WA ( condition ) .
    (34) condition -> ( condition ) . AW ( condition )
    (35) condition -> ( condition ) . WA ( condition )
    (38) condition -> ( condition ) . WA condition
    (39) condition -> ( condition ) . AW condition

    )               reduce using rule 35 (condition -> ( condition ) WA ( condition ) .)
    WA              reduce using rule 35 (condition -> ( condition ) WA ( condition ) .)
    AW              reduce using rule 35 (condition -> ( condition ) WA ( condition ) .)
    ;               reduce using rule 35 (condition -> ( condition ) WA ( condition ) .)

  ! AW              [ shift and go to state 151 ]
  ! WA              [ shift and go to state 152 ]


state 188

    (59) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN . { instruction_list }

    {               shift and go to state 194


state 189

    (9) if -> ILA ( condition ) { instruction_list } WLA { . instruction_list }
    (32) instruction_list -> . instruction
    (33) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    }               reduce using rule 84 (empty -> .)
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction_list               shift and go to state 195
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 190

    (10) for -> LKOLA ( var_assign ; condition ; incrementation ) { . instruction_list }
    (32) instruction_list -> . instruction
    (33) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    }               reduce using rule 84 (empty -> .)
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    var_assign                     shift and go to state 4
    incrementation                 shift and go to state 7
    instruction_list               shift and go to state 196
    instruction                    shift and go to state 3
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 191

    (11) for -> LKOLA ( var_assign ; condition ; decrementation ) { . instruction_list }
    (32) instruction_list -> . instruction
    (33) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    }               reduce using rule 84 (empty -> .)
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    var_assign                     shift and go to state 4
    decrementation                 shift and go to state 8
    instruction_list               shift and go to state 197
    instruction                    shift and go to state 3
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 192

    (12) for -> LKOLA ( expression ; condition ; incrementation ) { . instruction_list }
    (32) instruction_list -> . instruction
    (33) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    }               reduce using rule 84 (empty -> .)
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    expression                     shift and go to state 9
    incrementation                 shift and go to state 7
    instruction_list               shift and go to state 198
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 193

    (13) for -> LKOLA ( expression ; condition ; decrementation ) { . instruction_list }
    (32) instruction_list -> . instruction
    (33) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    }               reduce using rule 84 (empty -> .)
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    expression                     shift and go to state 9
    decrementation                 shift and go to state 8
    instruction_list               shift and go to state 199
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 194

    (59) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { . instruction_list }
    (32) instruction_list -> . instruction
    (33) instruction_list -> . instruction_list instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    }               reduce using rule 84 (empty -> .)
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction_list               shift and go to state 200
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 195

    (9) if -> ILA ( condition ) { instruction_list } WLA { instruction_list . }
    (33) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 201
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! }               [ reduce using rule 84 (empty -> .) ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction                    shift and go to state 43
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 196

    (10) for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list . }
    (33) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 202
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! }               [ reduce using rule 84 (empty -> .) ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    var_assign                     shift and go to state 4
    incrementation                 shift and go to state 7
    instruction                    shift and go to state 43
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 197

    (11) for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list . }
    (33) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 203
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! }               [ reduce using rule 84 (empty -> .) ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    var_assign                     shift and go to state 4
    decrementation                 shift and go to state 8
    instruction                    shift and go to state 43
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 198

    (12) for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list . }
    (33) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 204
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! }               [ reduce using rule 84 (empty -> .) ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    expression                     shift and go to state 9
    incrementation                 shift and go to state 7
    instruction                    shift and go to state 43
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    decrementation                 shift and go to state 8
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 199

    (13) for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list . }
    (33) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 205
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! }               [ reduce using rule 84 (empty -> .) ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    expression                     shift and go to state 9
    decrementation                 shift and go to state 8
    instruction                    shift and go to state 43
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 200

    (59) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list . }
    (33) instruction_list -> instruction_list . instruction
    (16) instruction -> . var_assign
    (17) instruction -> . arrayelt_assign
    (18) instruction -> . printing
    (19) instruction -> . incrementation
    (20) instruction -> . decrementation
    (21) instruction -> . expression
    (22) instruction -> . try
    (23) instruction -> . if
    (24) instruction -> . for
    (25) instruction -> . KHREJ
    (26) instruction -> . KMEL
    (27) instruction -> . while
    (28) instruction -> . doWhile
    (29) instruction -> . input
    (30) instruction -> . len
    (31) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . MOJOD var_assign
    (7) arrayelt_assign -> . arrayelt EQUALS expression
    (80) printing -> . KTEB ( condition )
    (81) printing -> . KTEB ( incrementation )
    (82) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . ( expression )
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . ID
    (60) expression -> . INT
    (61) expression -> . FLOAT
    (62) expression -> . STRING
    (63) expression -> . KHATE2
    (64) expression -> . S7I7
    (65) expression -> . WALO
    (66) expression -> . array
    (67) expression -> . arrayelt
    (68) expression -> . arrayslice
    (58) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (59) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list }
    (9) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (11) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (13) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (14) while -> . MA7ED ( condition ) { instruction_list }
    (15) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (56) input -> . QRA ( expression )
    (57) input -> . QRA ( )
    (83) len -> . TOL ( expression )
    (84) empty -> .
    (73) arrayelt -> . ID dimensions
    (71) array -> . [ arraylist ]
    (72) array -> . [ ]
    (76) arrayslice -> . ID [ expression : expression ]
    (77) arrayslice -> . ID [ : expression ]
    (78) arrayslice -> . ID [ expression : ]
    (79) arrayslice -> . ID [ : ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MOJOD resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for TOL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 206
    KHREJ           shift and go to state 13
    KMEL            shift and go to state 14
    ID              shift and go to state 20
    MOJOD           shift and go to state 21
    KTEB            shift and go to state 23
    (               shift and go to state 24
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    KHATE2          shift and go to state 30
    S7I7            shift and go to state 31
    WALO            shift and go to state 32
    JEREB           shift and go to state 35
    ILA             shift and go to state 36
    LKOLA           shift and go to state 37
    MA7ED           shift and go to state 38
    DIR             shift and go to state 39
    QRA             shift and go to state 40
    TOL             shift and go to state 41
    MINUS           reduce using rule 84 (empty -> .)
    PLUS            reduce using rule 84 (empty -> .)
    [               shift and go to state 42

  ! MINUS           [ shift and go to state 26 ]
  ! PLUS            [ shift and go to state 25 ]
  ! }               [ reduce using rule 84 (empty -> .) ]
  ! KHREJ           [ reduce using rule 84 (empty -> .) ]
  ! KMEL            [ reduce using rule 84 (empty -> .) ]
  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! MOJOD           [ reduce using rule 84 (empty -> .) ]
  ! KTEB            [ reduce using rule 84 (empty -> .) ]
  ! (               [ reduce using rule 84 (empty -> .) ]
  ! INT             [ reduce using rule 84 (empty -> .) ]
  ! FLOAT           [ reduce using rule 84 (empty -> .) ]
  ! STRING          [ reduce using rule 84 (empty -> .) ]
  ! KHATE2          [ reduce using rule 84 (empty -> .) ]
  ! S7I7            [ reduce using rule 84 (empty -> .) ]
  ! WALO            [ reduce using rule 84 (empty -> .) ]
  ! JEREB           [ reduce using rule 84 (empty -> .) ]
  ! ILA             [ reduce using rule 84 (empty -> .) ]
  ! LKOLA           [ reduce using rule 84 (empty -> .) ]
  ! MA7ED           [ reduce using rule 84 (empty -> .) ]
  ! DIR             [ reduce using rule 84 (empty -> .) ]
  ! QRA             [ reduce using rule 84 (empty -> .) ]
  ! TOL             [ reduce using rule 84 (empty -> .) ]
  ! [               [ reduce using rule 84 (empty -> .) ]

    instruction                    shift and go to state 43
    var_assign                     shift and go to state 4
    arrayelt_assign                shift and go to state 5
    printing                       shift and go to state 6
    incrementation                 shift and go to state 7
    decrementation                 shift and go to state 8
    expression                     shift and go to state 9
    try                            shift and go to state 10
    if                             shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 15
    doWhile                        shift and go to state 16
    input                          shift and go to state 17
    len                            shift and go to state 18
    empty                          shift and go to state 19
    arrayelt                       shift and go to state 22
    array                          shift and go to state 33
    arrayslice                     shift and go to state 34

state 201

    (9) if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .

    KHREJ           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KMEL            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    ID              reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MOJOD           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KTEB            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    (               reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MINUS           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    PLUS            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    INT             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    FLOAT           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    STRING          reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KHATE2          reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    S7I7            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    WALO            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    JEREB           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    ILA             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    LKOLA           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MA7ED           reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    DIR             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    QRA             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    TOL             reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    [               reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    $end            reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    }               reduce using rule 9 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)


state 202

    (10) for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .

    KHREJ           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KMEL            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    ID              reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MOJOD           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KTEB            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    (               reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MINUS           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    PLUS            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    INT             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    FLOAT           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    STRING          reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KHATE2          reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    S7I7            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    WALO            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    JEREB           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    ILA             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    LKOLA           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MA7ED           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    DIR             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    QRA             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    TOL             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    [               reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    $end            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    }               reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)


state 203

    (11) for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .

    KHREJ           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KMEL            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    ID              reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MOJOD           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KTEB            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    (               reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MINUS           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    PLUS            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    INT             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    FLOAT           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    STRING          reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KHATE2          reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    S7I7            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    WALO            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    JEREB           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    ILA             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    LKOLA           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MA7ED           reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    DIR             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    QRA             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    TOL             reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    [               reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    $end            reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    }               reduce using rule 11 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)


state 204

    (12) for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .

    KHREJ           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KMEL            reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    ID              reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MOJOD           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KTEB            reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    (               reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MINUS           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    PLUS            reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    INT             reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    FLOAT           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    STRING          reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KHATE2          reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    S7I7            reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    WALO            reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    JEREB           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    ILA             reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    LKOLA           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MA7ED           reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    DIR             reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    QRA             reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    TOL             reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    [               reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    $end            reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    }               reduce using rule 12 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)


state 205

    (13) for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .

    KHREJ           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KMEL            reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    ID              reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MOJOD           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KTEB            reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    (               reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MINUS           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    PLUS            reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    INT             reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    FLOAT           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    STRING          reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KHATE2          reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    S7I7            reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    WALO            reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    JEREB           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    ILA             reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    LKOLA           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MA7ED           reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    DIR             reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    QRA             reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    TOL             reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    [               reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    $end            reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    }               reduce using rule 13 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)


state 206

    (59) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .

    KHREJ           reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KMEL            reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    ID              reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MOJOD           reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KTEB            reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    (               reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MINUS           reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    PLUS            reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    INT             reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    FLOAT           reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    STRING          reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KHATE2          reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    S7I7            reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    WALO            reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    JEREB           reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    ILA             reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    LKOLA           reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MA7ED           reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    DIR             reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    QRA             reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    TOL             reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    [               reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    $end            reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    }               reduce using rule 59 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KHREJ in state 0 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 0 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 0 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 0 resolved as shift
WARNING: shift/reduce conflict for WALO in state 0 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 0 resolved as shift
WARNING: shift/reduce conflict for ILA in state 0 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 0 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 0 resolved as shift
WARNING: shift/reduce conflict for DIR in state 0 resolved as shift
WARNING: shift/reduce conflict for QRA in state 0 resolved as shift
WARNING: shift/reduce conflict for TOL in state 0 resolved as shift
WARNING: shift/reduce conflict for [ in state 0 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 2 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 2 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 2 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 2 resolved as shift
WARNING: shift/reduce conflict for WALO in state 2 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 2 resolved as shift
WARNING: shift/reduce conflict for ILA in state 2 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 2 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 2 resolved as shift
WARNING: shift/reduce conflict for DIR in state 2 resolved as shift
WARNING: shift/reduce conflict for QRA in state 2 resolved as shift
WARNING: shift/reduce conflict for TOL in state 2 resolved as shift
WARNING: shift/reduce conflict for [ in state 2 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 9 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 9 resolved as shift
WARNING: shift/reduce conflict for [ in state 20 resolved as shift
WARNING: shift/reduce conflict for [ in state 51 resolved as shift
WARNING: shift/reduce conflict for [ in state 58 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 62 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 62 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 62 resolved as shift
WARNING: shift/reduce conflict for INT in state 62 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING in state 62 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 62 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 62 resolved as shift
WARNING: shift/reduce conflict for WALO in state 62 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 62 resolved as shift
WARNING: shift/reduce conflict for ILA in state 62 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 62 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 62 resolved as shift
WARNING: shift/reduce conflict for DIR in state 62 resolved as shift
WARNING: shift/reduce conflict for QRA in state 62 resolved as shift
WARNING: shift/reduce conflict for TOL in state 62 resolved as shift
WARNING: shift/reduce conflict for [ in state 62 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 66 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 66 resolved as shift
WARNING: shift/reduce conflict for ID in state 66 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 66 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 66 resolved as shift
WARNING: shift/reduce conflict for INT in state 66 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING in state 66 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 66 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 66 resolved as shift
WARNING: shift/reduce conflict for WALO in state 66 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 66 resolved as shift
WARNING: shift/reduce conflict for ILA in state 66 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 66 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 66 resolved as shift
WARNING: shift/reduce conflict for DIR in state 66 resolved as shift
WARNING: shift/reduce conflict for QRA in state 66 resolved as shift
WARNING: shift/reduce conflict for TOL in state 66 resolved as shift
WARNING: shift/reduce conflict for [ in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for } in state 90 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 90 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 90 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 90 resolved as shift
WARNING: shift/reduce conflict for INT in state 90 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 90 resolved as shift
WARNING: shift/reduce conflict for STRING in state 90 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 90 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 90 resolved as shift
WARNING: shift/reduce conflict for WALO in state 90 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 90 resolved as shift
WARNING: shift/reduce conflict for ILA in state 90 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 90 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 90 resolved as shift
WARNING: shift/reduce conflict for DIR in state 90 resolved as shift
WARNING: shift/reduce conflict for QRA in state 90 resolved as shift
WARNING: shift/reduce conflict for TOL in state 90 resolved as shift
WARNING: shift/reduce conflict for [ in state 90 resolved as shift
WARNING: shift/reduce conflict for } in state 96 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 96 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 96 resolved as shift
WARNING: shift/reduce conflict for ID in state 96 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 96 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 96 resolved as shift
WARNING: shift/reduce conflict for INT in state 96 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 96 resolved as shift
WARNING: shift/reduce conflict for STRING in state 96 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 96 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 96 resolved as shift
WARNING: shift/reduce conflict for WALO in state 96 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 96 resolved as shift
WARNING: shift/reduce conflict for ILA in state 96 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 96 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 96 resolved as shift
WARNING: shift/reduce conflict for DIR in state 96 resolved as shift
WARNING: shift/reduce conflict for QRA in state 96 resolved as shift
WARNING: shift/reduce conflict for TOL in state 96 resolved as shift
WARNING: shift/reduce conflict for [ in state 96 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 145 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 145 resolved as shift
WARNING: shift/reduce conflict for ID in state 145 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 145 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 145 resolved as shift
WARNING: shift/reduce conflict for INT in state 145 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 145 resolved as shift
WARNING: shift/reduce conflict for STRING in state 145 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 145 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 145 resolved as shift
WARNING: shift/reduce conflict for WALO in state 145 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 145 resolved as shift
WARNING: shift/reduce conflict for ILA in state 145 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 145 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 145 resolved as shift
WARNING: shift/reduce conflict for DIR in state 145 resolved as shift
WARNING: shift/reduce conflict for QRA in state 145 resolved as shift
WARNING: shift/reduce conflict for TOL in state 145 resolved as shift
WARNING: shift/reduce conflict for [ in state 145 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 148 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 148 resolved as shift
WARNING: shift/reduce conflict for ID in state 148 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 148 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 148 resolved as shift
WARNING: shift/reduce conflict for INT in state 148 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 148 resolved as shift
WARNING: shift/reduce conflict for STRING in state 148 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 148 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 148 resolved as shift
WARNING: shift/reduce conflict for WALO in state 148 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 148 resolved as shift
WARNING: shift/reduce conflict for ILA in state 148 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 148 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 148 resolved as shift
WARNING: shift/reduce conflict for DIR in state 148 resolved as shift
WARNING: shift/reduce conflict for QRA in state 148 resolved as shift
WARNING: shift/reduce conflict for TOL in state 148 resolved as shift
WARNING: shift/reduce conflict for [ in state 148 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 156 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 156 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 156 resolved as shift
WARNING: shift/reduce conflict for INT in state 156 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 156 resolved as shift
WARNING: shift/reduce conflict for STRING in state 156 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 156 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 156 resolved as shift
WARNING: shift/reduce conflict for WALO in state 156 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 156 resolved as shift
WARNING: shift/reduce conflict for ILA in state 156 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 156 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 156 resolved as shift
WARNING: shift/reduce conflict for DIR in state 156 resolved as shift
WARNING: shift/reduce conflict for QRA in state 156 resolved as shift
WARNING: shift/reduce conflict for TOL in state 156 resolved as shift
WARNING: shift/reduce conflict for [ in state 156 resolved as shift
WARNING: shift/reduce conflict for } in state 157 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 157 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 157 resolved as shift
WARNING: shift/reduce conflict for ID in state 157 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 157 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 157 resolved as shift
WARNING: shift/reduce conflict for INT in state 157 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 157 resolved as shift
WARNING: shift/reduce conflict for STRING in state 157 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 157 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 157 resolved as shift
WARNING: shift/reduce conflict for WALO in state 157 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 157 resolved as shift
WARNING: shift/reduce conflict for ILA in state 157 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 157 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 157 resolved as shift
WARNING: shift/reduce conflict for DIR in state 157 resolved as shift
WARNING: shift/reduce conflict for QRA in state 157 resolved as shift
WARNING: shift/reduce conflict for TOL in state 157 resolved as shift
WARNING: shift/reduce conflict for [ in state 157 resolved as shift
WARNING: shift/reduce conflict for } in state 160 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 160 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 160 resolved as shift
WARNING: shift/reduce conflict for ID in state 160 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 160 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 160 resolved as shift
WARNING: shift/reduce conflict for INT in state 160 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 160 resolved as shift
WARNING: shift/reduce conflict for STRING in state 160 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 160 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 160 resolved as shift
WARNING: shift/reduce conflict for WALO in state 160 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 160 resolved as shift
WARNING: shift/reduce conflict for ILA in state 160 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 160 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 160 resolved as shift
WARNING: shift/reduce conflict for DIR in state 160 resolved as shift
WARNING: shift/reduce conflict for QRA in state 160 resolved as shift
WARNING: shift/reduce conflict for TOL in state 160 resolved as shift
WARNING: shift/reduce conflict for [ in state 160 resolved as shift
WARNING: shift/reduce conflict for } in state 168 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 168 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 168 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 168 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 168 resolved as shift
WARNING: shift/reduce conflict for INT in state 168 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 168 resolved as shift
WARNING: shift/reduce conflict for STRING in state 168 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 168 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 168 resolved as shift
WARNING: shift/reduce conflict for WALO in state 168 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 168 resolved as shift
WARNING: shift/reduce conflict for ILA in state 168 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 168 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 168 resolved as shift
WARNING: shift/reduce conflict for DIR in state 168 resolved as shift
WARNING: shift/reduce conflict for QRA in state 168 resolved as shift
WARNING: shift/reduce conflict for TOL in state 168 resolved as shift
WARNING: shift/reduce conflict for [ in state 168 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 189 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 189 resolved as shift
WARNING: shift/reduce conflict for ID in state 189 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 189 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 189 resolved as shift
WARNING: shift/reduce conflict for INT in state 189 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 189 resolved as shift
WARNING: shift/reduce conflict for STRING in state 189 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 189 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 189 resolved as shift
WARNING: shift/reduce conflict for WALO in state 189 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 189 resolved as shift
WARNING: shift/reduce conflict for ILA in state 189 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 189 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 189 resolved as shift
WARNING: shift/reduce conflict for DIR in state 189 resolved as shift
WARNING: shift/reduce conflict for QRA in state 189 resolved as shift
WARNING: shift/reduce conflict for TOL in state 189 resolved as shift
WARNING: shift/reduce conflict for [ in state 189 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 190 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 190 resolved as shift
WARNING: shift/reduce conflict for ID in state 190 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 190 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 190 resolved as shift
WARNING: shift/reduce conflict for INT in state 190 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 190 resolved as shift
WARNING: shift/reduce conflict for STRING in state 190 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 190 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 190 resolved as shift
WARNING: shift/reduce conflict for WALO in state 190 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 190 resolved as shift
WARNING: shift/reduce conflict for ILA in state 190 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 190 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 190 resolved as shift
WARNING: shift/reduce conflict for DIR in state 190 resolved as shift
WARNING: shift/reduce conflict for QRA in state 190 resolved as shift
WARNING: shift/reduce conflict for TOL in state 190 resolved as shift
WARNING: shift/reduce conflict for [ in state 190 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 191 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 191 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 191 resolved as shift
WARNING: shift/reduce conflict for INT in state 191 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 191 resolved as shift
WARNING: shift/reduce conflict for STRING in state 191 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 191 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 191 resolved as shift
WARNING: shift/reduce conflict for WALO in state 191 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 191 resolved as shift
WARNING: shift/reduce conflict for ILA in state 191 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 191 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 191 resolved as shift
WARNING: shift/reduce conflict for DIR in state 191 resolved as shift
WARNING: shift/reduce conflict for QRA in state 191 resolved as shift
WARNING: shift/reduce conflict for TOL in state 191 resolved as shift
WARNING: shift/reduce conflict for [ in state 191 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 192 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 192 resolved as shift
WARNING: shift/reduce conflict for ID in state 192 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 192 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 192 resolved as shift
WARNING: shift/reduce conflict for INT in state 192 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 192 resolved as shift
WARNING: shift/reduce conflict for STRING in state 192 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 192 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 192 resolved as shift
WARNING: shift/reduce conflict for WALO in state 192 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 192 resolved as shift
WARNING: shift/reduce conflict for ILA in state 192 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 192 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 192 resolved as shift
WARNING: shift/reduce conflict for DIR in state 192 resolved as shift
WARNING: shift/reduce conflict for QRA in state 192 resolved as shift
WARNING: shift/reduce conflict for TOL in state 192 resolved as shift
WARNING: shift/reduce conflict for [ in state 192 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 193 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 193 resolved as shift
WARNING: shift/reduce conflict for ID in state 193 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 193 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 193 resolved as shift
WARNING: shift/reduce conflict for INT in state 193 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 193 resolved as shift
WARNING: shift/reduce conflict for STRING in state 193 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 193 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 193 resolved as shift
WARNING: shift/reduce conflict for WALO in state 193 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 193 resolved as shift
WARNING: shift/reduce conflict for ILA in state 193 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 193 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 193 resolved as shift
WARNING: shift/reduce conflict for DIR in state 193 resolved as shift
WARNING: shift/reduce conflict for QRA in state 193 resolved as shift
WARNING: shift/reduce conflict for TOL in state 193 resolved as shift
WARNING: shift/reduce conflict for [ in state 193 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 194 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 194 resolved as shift
WARNING: shift/reduce conflict for ID in state 194 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 194 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 194 resolved as shift
WARNING: shift/reduce conflict for INT in state 194 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 194 resolved as shift
WARNING: shift/reduce conflict for STRING in state 194 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 194 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 194 resolved as shift
WARNING: shift/reduce conflict for WALO in state 194 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 194 resolved as shift
WARNING: shift/reduce conflict for ILA in state 194 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 194 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 194 resolved as shift
WARNING: shift/reduce conflict for DIR in state 194 resolved as shift
WARNING: shift/reduce conflict for QRA in state 194 resolved as shift
WARNING: shift/reduce conflict for TOL in state 194 resolved as shift
WARNING: shift/reduce conflict for [ in state 194 resolved as shift
WARNING: shift/reduce conflict for } in state 195 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 195 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 195 resolved as shift
WARNING: shift/reduce conflict for ID in state 195 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 195 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 195 resolved as shift
WARNING: shift/reduce conflict for INT in state 195 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 195 resolved as shift
WARNING: shift/reduce conflict for STRING in state 195 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 195 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 195 resolved as shift
WARNING: shift/reduce conflict for WALO in state 195 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 195 resolved as shift
WARNING: shift/reduce conflict for ILA in state 195 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 195 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 195 resolved as shift
WARNING: shift/reduce conflict for DIR in state 195 resolved as shift
WARNING: shift/reduce conflict for QRA in state 195 resolved as shift
WARNING: shift/reduce conflict for TOL in state 195 resolved as shift
WARNING: shift/reduce conflict for [ in state 195 resolved as shift
WARNING: shift/reduce conflict for } in state 196 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 196 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 196 resolved as shift
WARNING: shift/reduce conflict for ID in state 196 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 196 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 196 resolved as shift
WARNING: shift/reduce conflict for INT in state 196 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 196 resolved as shift
WARNING: shift/reduce conflict for STRING in state 196 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 196 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 196 resolved as shift
WARNING: shift/reduce conflict for WALO in state 196 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 196 resolved as shift
WARNING: shift/reduce conflict for ILA in state 196 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 196 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 196 resolved as shift
WARNING: shift/reduce conflict for DIR in state 196 resolved as shift
WARNING: shift/reduce conflict for QRA in state 196 resolved as shift
WARNING: shift/reduce conflict for TOL in state 196 resolved as shift
WARNING: shift/reduce conflict for [ in state 196 resolved as shift
WARNING: shift/reduce conflict for } in state 197 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 197 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 197 resolved as shift
WARNING: shift/reduce conflict for ID in state 197 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 197 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 197 resolved as shift
WARNING: shift/reduce conflict for INT in state 197 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 197 resolved as shift
WARNING: shift/reduce conflict for STRING in state 197 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 197 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 197 resolved as shift
WARNING: shift/reduce conflict for WALO in state 197 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 197 resolved as shift
WARNING: shift/reduce conflict for ILA in state 197 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 197 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 197 resolved as shift
WARNING: shift/reduce conflict for DIR in state 197 resolved as shift
WARNING: shift/reduce conflict for QRA in state 197 resolved as shift
WARNING: shift/reduce conflict for TOL in state 197 resolved as shift
WARNING: shift/reduce conflict for [ in state 197 resolved as shift
WARNING: shift/reduce conflict for } in state 198 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 198 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 198 resolved as shift
WARNING: shift/reduce conflict for ID in state 198 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 198 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 198 resolved as shift
WARNING: shift/reduce conflict for INT in state 198 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 198 resolved as shift
WARNING: shift/reduce conflict for STRING in state 198 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 198 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 198 resolved as shift
WARNING: shift/reduce conflict for WALO in state 198 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 198 resolved as shift
WARNING: shift/reduce conflict for ILA in state 198 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 198 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 198 resolved as shift
WARNING: shift/reduce conflict for DIR in state 198 resolved as shift
WARNING: shift/reduce conflict for QRA in state 198 resolved as shift
WARNING: shift/reduce conflict for TOL in state 198 resolved as shift
WARNING: shift/reduce conflict for [ in state 198 resolved as shift
WARNING: shift/reduce conflict for } in state 199 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 199 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 199 resolved as shift
WARNING: shift/reduce conflict for ID in state 199 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 199 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 199 resolved as shift
WARNING: shift/reduce conflict for INT in state 199 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 199 resolved as shift
WARNING: shift/reduce conflict for STRING in state 199 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 199 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 199 resolved as shift
WARNING: shift/reduce conflict for WALO in state 199 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 199 resolved as shift
WARNING: shift/reduce conflict for ILA in state 199 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 199 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 199 resolved as shift
WARNING: shift/reduce conflict for DIR in state 199 resolved as shift
WARNING: shift/reduce conflict for QRA in state 199 resolved as shift
WARNING: shift/reduce conflict for TOL in state 199 resolved as shift
WARNING: shift/reduce conflict for [ in state 199 resolved as shift
WARNING: shift/reduce conflict for } in state 200 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 200 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 200 resolved as shift
WARNING: shift/reduce conflict for ID in state 200 resolved as shift
WARNING: shift/reduce conflict for MOJOD in state 200 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 200 resolved as shift
WARNING: shift/reduce conflict for INT in state 200 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 200 resolved as shift
WARNING: shift/reduce conflict for STRING in state 200 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 200 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 200 resolved as shift
WARNING: shift/reduce conflict for WALO in state 200 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 200 resolved as shift
WARNING: shift/reduce conflict for ILA in state 200 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 200 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 200 resolved as shift
WARNING: shift/reduce conflict for DIR in state 200 resolved as shift
WARNING: shift/reduce conflict for QRA in state 200 resolved as shift
WARNING: shift/reduce conflict for TOL in state 200 resolved as shift
WARNING: shift/reduce conflict for [ in state 200 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (program -> instruction_list)
WARNING: rejected rule (empty -> <empty>) in state 2
