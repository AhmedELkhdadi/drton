Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    3AKSS
    3AMM
    3AREF
    DOUZ
    NAW3
    RED
    TELE3

Grammar

Rule 0     S' -> program
Rule 1     program -> instruction_list
Rule 2     incrementation -> ID INCREMENTATION
Rule 3     decrementation -> ID DECREMENTATION
Rule 4     var_assign -> ID EQUALS expression
Rule 5     var_assign -> ID EQUALS input
Rule 6     var_assign -> arrayelt EQUALS expression
Rule 7     if -> ILA ( condition ) { instruction_list }
Rule 8     if -> ILA ( condition ) { instruction_list } WLA { instruction_list }
Rule 9     for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
Rule 10    for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
Rule 11    for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list }
Rule 12    for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list }
Rule 13    while -> MA7ED ( condition ) { instruction_list }
Rule 14    doWhile -> DIR { instruction_list } MA7ED ( condition )
Rule 15    instruction -> var_assign
Rule 16    instruction -> printing
Rule 17    instruction -> incrementation
Rule 18    instruction -> decrementation
Rule 19    instruction -> expression
Rule 20    instruction -> try
Rule 21    instruction -> if
Rule 22    instruction -> for
Rule 23    instruction -> KHREJ
Rule 24    instruction -> KMEL
Rule 25    instruction -> while
Rule 26    instruction -> doWhile
Rule 27    instruction -> input
Rule 28    instruction -> empty
Rule 29    instruction_list -> instruction
Rule 30    instruction_list -> instruction_list instruction
Rule 31    condition -> ( condition ) AW ( condition )
Rule 32    condition -> ( condition ) WA ( condition )
Rule 33    condition -> condition WA ( condition )
Rule 34    condition -> condition AW ( condition )
Rule 35    condition -> ( condition ) WA condition
Rule 36    condition -> ( condition ) AW condition
Rule 37    condition -> condition WA condition
Rule 38    condition -> condition AW condition
Rule 39    condition -> expression SUP expression
Rule 40    condition -> expression INF expression
Rule 41    condition -> expression EQUALSCOMP expression
Rule 42    condition -> expression SUPEQUALS expression
Rule 43    condition -> expression INFEQUALS expression
Rule 44    condition -> expression DIFFERENT expression
Rule 45    condition -> expression
Rule 46    expression -> expression PLUS expression
Rule 47    expression -> expression MINUS expression
Rule 48    expression -> expression TIMES expression
Rule 49    expression -> expression DIVIDE expression
Rule 50    expression -> ( expression )
Rule 51    expression -> MINUS expression
Rule 52    expression -> PLUS expression
Rule 53    expression -> ID
Rule 54    input -> QRA ( expression )
Rule 55    input -> QRA ( )
Rule 56    try -> JEREB { instruction_list } MASD9CH { instruction_list }
Rule 57    try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
Rule 58    expression -> INT
Rule 59    expression -> FLOAT
Rule 60    expression -> STRING
Rule 61    expression -> KHATE2
Rule 62    expression -> S7I7
Rule 63    expression -> WALO
Rule 64    expression -> array
Rule 65    expression -> arrayelt
Rule 66    arraylist -> expression
Rule 67    arraylist -> arraylist , expression
Rule 68    array -> [ arraylist ]
Rule 69    arrayelt -> ID dimensions
Rule 70    dimensions -> [ expression ]
Rule 71    dimensions -> dimensions [ expression ]
Rule 72    printing -> KTEB ( condition )
Rule 73    printing -> KTEB ( incrementation )
Rule 74    printing -> KTEB ( decrementation )
Rule 75    empty -> <empty>

Terminals, with rules where they appear

(                    : 7 8 9 10 11 12 13 14 31 31 32 32 33 34 35 36 50 54 55 72 73 74
)                    : 7 8 9 10 11 12 13 14 31 31 32 32 33 34 35 36 50 54 55 72 73 74
,                    : 67
3AKSS                : 
3AMM                 : 
3AREF                : 
;                    : 9 9 10 10 11 11 12 12
AKHIRAN              : 57
AW                   : 31 34 36 38
DECREMENTATION       : 3
DIFFERENT            : 44
DIR                  : 14
DIVIDE               : 49
DOUZ                 : 
EQUALS               : 4 5 6
EQUALSCOMP           : 41
FLOAT                : 59
ID                   : 2 3 4 5 53 69
ILA                  : 7 8
INCREMENTATION       : 2
INF                  : 40
INFEQUALS            : 43
INT                  : 58
JEREB                : 56 57
KHATE2               : 61
KHREJ                : 23
KMEL                 : 24
KTEB                 : 72 73 74
LKOLA                : 9 10 11 12
MA7ED                : 13 14
MASD9CH              : 56 57
MINUS                : 47 51
NAW3                 : 
PLUS                 : 46 52
QRA                  : 54 55
RED                  : 
S7I7                 : 62
STRING               : 60
SUP                  : 39
SUPEQUALS            : 42
TELE3                : 
TIMES                : 48
WA                   : 32 33 35 37
WALO                 : 63
WLA                  : 8
[                    : 68 70 71
]                    : 68 70 71
error                : 
{                    : 7 8 8 9 10 11 12 13 14 56 56 57 57 57
}                    : 7 8 8 9 10 11 12 13 14 56 56 57 57 57

Nonterminals, with rules where they appear

array                : 64
arrayelt             : 6 65
arraylist            : 67 68
condition            : 7 8 9 10 11 12 13 14 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 72
decrementation       : 10 12 18 74
dimensions           : 69 71
doWhile              : 26
empty                : 28
expression           : 4 6 11 12 19 39 39 40 40 41 41 42 42 43 43 44 44 45 46 46 47 47 48 48 49 49 50 51 52 54 66 67 70 71
for                  : 22
if                   : 21
incrementation       : 9 11 17 73
input                : 5 27
instruction          : 29 30
instruction_list     : 1 7 8 8 9 10 11 12 13 14 30 56 56 57 57 57
printing             : 16
program              : 0
try                  : 20
var_assign           : 9 10 15
while                : 25

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instruction_list
    (29) instruction_list -> . instruction
    (30) instruction_list -> . instruction_list instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    $end            reduce using rule 75 (empty -> .)
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    program                        shift and go to state 1
    instruction_list               shift and go to state 2
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 1

    (0) S' -> program .



state 2

    (1) program -> instruction_list .
    (30) instruction_list -> instruction_list . instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (program -> instruction_list .)
  ! shift/reduce conflict for [ resolved as shift
    $end            reduce using rule 1 (program -> instruction_list .)
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]
  ! $end            [ reduce using rule 75 (empty -> .) ]

    instruction                    shift and go to state 38
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 3

    (29) instruction_list -> instruction .

    KHREJ           reduce using rule 29 (instruction_list -> instruction .)
    KMEL            reduce using rule 29 (instruction_list -> instruction .)
    ID              reduce using rule 29 (instruction_list -> instruction .)
    KTEB            reduce using rule 29 (instruction_list -> instruction .)
    (               reduce using rule 29 (instruction_list -> instruction .)
    MINUS           reduce using rule 29 (instruction_list -> instruction .)
    PLUS            reduce using rule 29 (instruction_list -> instruction .)
    INT             reduce using rule 29 (instruction_list -> instruction .)
    FLOAT           reduce using rule 29 (instruction_list -> instruction .)
    STRING          reduce using rule 29 (instruction_list -> instruction .)
    KHATE2          reduce using rule 29 (instruction_list -> instruction .)
    S7I7            reduce using rule 29 (instruction_list -> instruction .)
    WALO            reduce using rule 29 (instruction_list -> instruction .)
    JEREB           reduce using rule 29 (instruction_list -> instruction .)
    ILA             reduce using rule 29 (instruction_list -> instruction .)
    LKOLA           reduce using rule 29 (instruction_list -> instruction .)
    MA7ED           reduce using rule 29 (instruction_list -> instruction .)
    DIR             reduce using rule 29 (instruction_list -> instruction .)
    QRA             reduce using rule 29 (instruction_list -> instruction .)
    [               reduce using rule 29 (instruction_list -> instruction .)
    $end            reduce using rule 29 (instruction_list -> instruction .)
    }               reduce using rule 29 (instruction_list -> instruction .)


state 4

    (15) instruction -> var_assign .

    KHREJ           reduce using rule 15 (instruction -> var_assign .)
    KMEL            reduce using rule 15 (instruction -> var_assign .)
    ID              reduce using rule 15 (instruction -> var_assign .)
    KTEB            reduce using rule 15 (instruction -> var_assign .)
    (               reduce using rule 15 (instruction -> var_assign .)
    MINUS           reduce using rule 15 (instruction -> var_assign .)
    PLUS            reduce using rule 15 (instruction -> var_assign .)
    INT             reduce using rule 15 (instruction -> var_assign .)
    FLOAT           reduce using rule 15 (instruction -> var_assign .)
    STRING          reduce using rule 15 (instruction -> var_assign .)
    KHATE2          reduce using rule 15 (instruction -> var_assign .)
    S7I7            reduce using rule 15 (instruction -> var_assign .)
    WALO            reduce using rule 15 (instruction -> var_assign .)
    JEREB           reduce using rule 15 (instruction -> var_assign .)
    ILA             reduce using rule 15 (instruction -> var_assign .)
    LKOLA           reduce using rule 15 (instruction -> var_assign .)
    MA7ED           reduce using rule 15 (instruction -> var_assign .)
    DIR             reduce using rule 15 (instruction -> var_assign .)
    QRA             reduce using rule 15 (instruction -> var_assign .)
    [               reduce using rule 15 (instruction -> var_assign .)
    $end            reduce using rule 15 (instruction -> var_assign .)
    }               reduce using rule 15 (instruction -> var_assign .)


state 5

    (16) instruction -> printing .

    KHREJ           reduce using rule 16 (instruction -> printing .)
    KMEL            reduce using rule 16 (instruction -> printing .)
    ID              reduce using rule 16 (instruction -> printing .)
    KTEB            reduce using rule 16 (instruction -> printing .)
    (               reduce using rule 16 (instruction -> printing .)
    MINUS           reduce using rule 16 (instruction -> printing .)
    PLUS            reduce using rule 16 (instruction -> printing .)
    INT             reduce using rule 16 (instruction -> printing .)
    FLOAT           reduce using rule 16 (instruction -> printing .)
    STRING          reduce using rule 16 (instruction -> printing .)
    KHATE2          reduce using rule 16 (instruction -> printing .)
    S7I7            reduce using rule 16 (instruction -> printing .)
    WALO            reduce using rule 16 (instruction -> printing .)
    JEREB           reduce using rule 16 (instruction -> printing .)
    ILA             reduce using rule 16 (instruction -> printing .)
    LKOLA           reduce using rule 16 (instruction -> printing .)
    MA7ED           reduce using rule 16 (instruction -> printing .)
    DIR             reduce using rule 16 (instruction -> printing .)
    QRA             reduce using rule 16 (instruction -> printing .)
    [               reduce using rule 16 (instruction -> printing .)
    $end            reduce using rule 16 (instruction -> printing .)
    }               reduce using rule 16 (instruction -> printing .)


state 6

    (17) instruction -> incrementation .

    KHREJ           reduce using rule 17 (instruction -> incrementation .)
    KMEL            reduce using rule 17 (instruction -> incrementation .)
    ID              reduce using rule 17 (instruction -> incrementation .)
    KTEB            reduce using rule 17 (instruction -> incrementation .)
    (               reduce using rule 17 (instruction -> incrementation .)
    MINUS           reduce using rule 17 (instruction -> incrementation .)
    PLUS            reduce using rule 17 (instruction -> incrementation .)
    INT             reduce using rule 17 (instruction -> incrementation .)
    FLOAT           reduce using rule 17 (instruction -> incrementation .)
    STRING          reduce using rule 17 (instruction -> incrementation .)
    KHATE2          reduce using rule 17 (instruction -> incrementation .)
    S7I7            reduce using rule 17 (instruction -> incrementation .)
    WALO            reduce using rule 17 (instruction -> incrementation .)
    JEREB           reduce using rule 17 (instruction -> incrementation .)
    ILA             reduce using rule 17 (instruction -> incrementation .)
    LKOLA           reduce using rule 17 (instruction -> incrementation .)
    MA7ED           reduce using rule 17 (instruction -> incrementation .)
    DIR             reduce using rule 17 (instruction -> incrementation .)
    QRA             reduce using rule 17 (instruction -> incrementation .)
    [               reduce using rule 17 (instruction -> incrementation .)
    $end            reduce using rule 17 (instruction -> incrementation .)
    }               reduce using rule 17 (instruction -> incrementation .)


state 7

    (18) instruction -> decrementation .

    KHREJ           reduce using rule 18 (instruction -> decrementation .)
    KMEL            reduce using rule 18 (instruction -> decrementation .)
    ID              reduce using rule 18 (instruction -> decrementation .)
    KTEB            reduce using rule 18 (instruction -> decrementation .)
    (               reduce using rule 18 (instruction -> decrementation .)
    MINUS           reduce using rule 18 (instruction -> decrementation .)
    PLUS            reduce using rule 18 (instruction -> decrementation .)
    INT             reduce using rule 18 (instruction -> decrementation .)
    FLOAT           reduce using rule 18 (instruction -> decrementation .)
    STRING          reduce using rule 18 (instruction -> decrementation .)
    KHATE2          reduce using rule 18 (instruction -> decrementation .)
    S7I7            reduce using rule 18 (instruction -> decrementation .)
    WALO            reduce using rule 18 (instruction -> decrementation .)
    JEREB           reduce using rule 18 (instruction -> decrementation .)
    ILA             reduce using rule 18 (instruction -> decrementation .)
    LKOLA           reduce using rule 18 (instruction -> decrementation .)
    MA7ED           reduce using rule 18 (instruction -> decrementation .)
    DIR             reduce using rule 18 (instruction -> decrementation .)
    QRA             reduce using rule 18 (instruction -> decrementation .)
    [               reduce using rule 18 (instruction -> decrementation .)
    $end            reduce using rule 18 (instruction -> decrementation .)
    }               reduce using rule 18 (instruction -> decrementation .)


state 8

    (19) instruction -> expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 19 (instruction -> expression .)
    KMEL            reduce using rule 19 (instruction -> expression .)
    ID              reduce using rule 19 (instruction -> expression .)
    KTEB            reduce using rule 19 (instruction -> expression .)
    (               reduce using rule 19 (instruction -> expression .)
    INT             reduce using rule 19 (instruction -> expression .)
    FLOAT           reduce using rule 19 (instruction -> expression .)
    STRING          reduce using rule 19 (instruction -> expression .)
    KHATE2          reduce using rule 19 (instruction -> expression .)
    S7I7            reduce using rule 19 (instruction -> expression .)
    WALO            reduce using rule 19 (instruction -> expression .)
    JEREB           reduce using rule 19 (instruction -> expression .)
    ILA             reduce using rule 19 (instruction -> expression .)
    LKOLA           reduce using rule 19 (instruction -> expression .)
    MA7ED           reduce using rule 19 (instruction -> expression .)
    DIR             reduce using rule 19 (instruction -> expression .)
    QRA             reduce using rule 19 (instruction -> expression .)
    [               reduce using rule 19 (instruction -> expression .)
    $end            reduce using rule 19 (instruction -> expression .)
    }               reduce using rule 19 (instruction -> expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! MINUS           [ reduce using rule 19 (instruction -> expression .) ]
  ! PLUS            [ reduce using rule 19 (instruction -> expression .) ]


state 9

    (20) instruction -> try .

    KHREJ           reduce using rule 20 (instruction -> try .)
    KMEL            reduce using rule 20 (instruction -> try .)
    ID              reduce using rule 20 (instruction -> try .)
    KTEB            reduce using rule 20 (instruction -> try .)
    (               reduce using rule 20 (instruction -> try .)
    MINUS           reduce using rule 20 (instruction -> try .)
    PLUS            reduce using rule 20 (instruction -> try .)
    INT             reduce using rule 20 (instruction -> try .)
    FLOAT           reduce using rule 20 (instruction -> try .)
    STRING          reduce using rule 20 (instruction -> try .)
    KHATE2          reduce using rule 20 (instruction -> try .)
    S7I7            reduce using rule 20 (instruction -> try .)
    WALO            reduce using rule 20 (instruction -> try .)
    JEREB           reduce using rule 20 (instruction -> try .)
    ILA             reduce using rule 20 (instruction -> try .)
    LKOLA           reduce using rule 20 (instruction -> try .)
    MA7ED           reduce using rule 20 (instruction -> try .)
    DIR             reduce using rule 20 (instruction -> try .)
    QRA             reduce using rule 20 (instruction -> try .)
    [               reduce using rule 20 (instruction -> try .)
    $end            reduce using rule 20 (instruction -> try .)
    }               reduce using rule 20 (instruction -> try .)


state 10

    (21) instruction -> if .

    KHREJ           reduce using rule 21 (instruction -> if .)
    KMEL            reduce using rule 21 (instruction -> if .)
    ID              reduce using rule 21 (instruction -> if .)
    KTEB            reduce using rule 21 (instruction -> if .)
    (               reduce using rule 21 (instruction -> if .)
    MINUS           reduce using rule 21 (instruction -> if .)
    PLUS            reduce using rule 21 (instruction -> if .)
    INT             reduce using rule 21 (instruction -> if .)
    FLOAT           reduce using rule 21 (instruction -> if .)
    STRING          reduce using rule 21 (instruction -> if .)
    KHATE2          reduce using rule 21 (instruction -> if .)
    S7I7            reduce using rule 21 (instruction -> if .)
    WALO            reduce using rule 21 (instruction -> if .)
    JEREB           reduce using rule 21 (instruction -> if .)
    ILA             reduce using rule 21 (instruction -> if .)
    LKOLA           reduce using rule 21 (instruction -> if .)
    MA7ED           reduce using rule 21 (instruction -> if .)
    DIR             reduce using rule 21 (instruction -> if .)
    QRA             reduce using rule 21 (instruction -> if .)
    [               reduce using rule 21 (instruction -> if .)
    $end            reduce using rule 21 (instruction -> if .)
    }               reduce using rule 21 (instruction -> if .)


state 11

    (22) instruction -> for .

    KHREJ           reduce using rule 22 (instruction -> for .)
    KMEL            reduce using rule 22 (instruction -> for .)
    ID              reduce using rule 22 (instruction -> for .)
    KTEB            reduce using rule 22 (instruction -> for .)
    (               reduce using rule 22 (instruction -> for .)
    MINUS           reduce using rule 22 (instruction -> for .)
    PLUS            reduce using rule 22 (instruction -> for .)
    INT             reduce using rule 22 (instruction -> for .)
    FLOAT           reduce using rule 22 (instruction -> for .)
    STRING          reduce using rule 22 (instruction -> for .)
    KHATE2          reduce using rule 22 (instruction -> for .)
    S7I7            reduce using rule 22 (instruction -> for .)
    WALO            reduce using rule 22 (instruction -> for .)
    JEREB           reduce using rule 22 (instruction -> for .)
    ILA             reduce using rule 22 (instruction -> for .)
    LKOLA           reduce using rule 22 (instruction -> for .)
    MA7ED           reduce using rule 22 (instruction -> for .)
    DIR             reduce using rule 22 (instruction -> for .)
    QRA             reduce using rule 22 (instruction -> for .)
    [               reduce using rule 22 (instruction -> for .)
    $end            reduce using rule 22 (instruction -> for .)
    }               reduce using rule 22 (instruction -> for .)


state 12

    (23) instruction -> KHREJ .

    KHREJ           reduce using rule 23 (instruction -> KHREJ .)
    KMEL            reduce using rule 23 (instruction -> KHREJ .)
    ID              reduce using rule 23 (instruction -> KHREJ .)
    KTEB            reduce using rule 23 (instruction -> KHREJ .)
    (               reduce using rule 23 (instruction -> KHREJ .)
    MINUS           reduce using rule 23 (instruction -> KHREJ .)
    PLUS            reduce using rule 23 (instruction -> KHREJ .)
    INT             reduce using rule 23 (instruction -> KHREJ .)
    FLOAT           reduce using rule 23 (instruction -> KHREJ .)
    STRING          reduce using rule 23 (instruction -> KHREJ .)
    KHATE2          reduce using rule 23 (instruction -> KHREJ .)
    S7I7            reduce using rule 23 (instruction -> KHREJ .)
    WALO            reduce using rule 23 (instruction -> KHREJ .)
    JEREB           reduce using rule 23 (instruction -> KHREJ .)
    ILA             reduce using rule 23 (instruction -> KHREJ .)
    LKOLA           reduce using rule 23 (instruction -> KHREJ .)
    MA7ED           reduce using rule 23 (instruction -> KHREJ .)
    DIR             reduce using rule 23 (instruction -> KHREJ .)
    QRA             reduce using rule 23 (instruction -> KHREJ .)
    [               reduce using rule 23 (instruction -> KHREJ .)
    $end            reduce using rule 23 (instruction -> KHREJ .)
    }               reduce using rule 23 (instruction -> KHREJ .)


state 13

    (24) instruction -> KMEL .

    KHREJ           reduce using rule 24 (instruction -> KMEL .)
    KMEL            reduce using rule 24 (instruction -> KMEL .)
    ID              reduce using rule 24 (instruction -> KMEL .)
    KTEB            reduce using rule 24 (instruction -> KMEL .)
    (               reduce using rule 24 (instruction -> KMEL .)
    MINUS           reduce using rule 24 (instruction -> KMEL .)
    PLUS            reduce using rule 24 (instruction -> KMEL .)
    INT             reduce using rule 24 (instruction -> KMEL .)
    FLOAT           reduce using rule 24 (instruction -> KMEL .)
    STRING          reduce using rule 24 (instruction -> KMEL .)
    KHATE2          reduce using rule 24 (instruction -> KMEL .)
    S7I7            reduce using rule 24 (instruction -> KMEL .)
    WALO            reduce using rule 24 (instruction -> KMEL .)
    JEREB           reduce using rule 24 (instruction -> KMEL .)
    ILA             reduce using rule 24 (instruction -> KMEL .)
    LKOLA           reduce using rule 24 (instruction -> KMEL .)
    MA7ED           reduce using rule 24 (instruction -> KMEL .)
    DIR             reduce using rule 24 (instruction -> KMEL .)
    QRA             reduce using rule 24 (instruction -> KMEL .)
    [               reduce using rule 24 (instruction -> KMEL .)
    $end            reduce using rule 24 (instruction -> KMEL .)
    }               reduce using rule 24 (instruction -> KMEL .)


state 14

    (25) instruction -> while .

    KHREJ           reduce using rule 25 (instruction -> while .)
    KMEL            reduce using rule 25 (instruction -> while .)
    ID              reduce using rule 25 (instruction -> while .)
    KTEB            reduce using rule 25 (instruction -> while .)
    (               reduce using rule 25 (instruction -> while .)
    MINUS           reduce using rule 25 (instruction -> while .)
    PLUS            reduce using rule 25 (instruction -> while .)
    INT             reduce using rule 25 (instruction -> while .)
    FLOAT           reduce using rule 25 (instruction -> while .)
    STRING          reduce using rule 25 (instruction -> while .)
    KHATE2          reduce using rule 25 (instruction -> while .)
    S7I7            reduce using rule 25 (instruction -> while .)
    WALO            reduce using rule 25 (instruction -> while .)
    JEREB           reduce using rule 25 (instruction -> while .)
    ILA             reduce using rule 25 (instruction -> while .)
    LKOLA           reduce using rule 25 (instruction -> while .)
    MA7ED           reduce using rule 25 (instruction -> while .)
    DIR             reduce using rule 25 (instruction -> while .)
    QRA             reduce using rule 25 (instruction -> while .)
    [               reduce using rule 25 (instruction -> while .)
    $end            reduce using rule 25 (instruction -> while .)
    }               reduce using rule 25 (instruction -> while .)


state 15

    (26) instruction -> doWhile .

    KHREJ           reduce using rule 26 (instruction -> doWhile .)
    KMEL            reduce using rule 26 (instruction -> doWhile .)
    ID              reduce using rule 26 (instruction -> doWhile .)
    KTEB            reduce using rule 26 (instruction -> doWhile .)
    (               reduce using rule 26 (instruction -> doWhile .)
    MINUS           reduce using rule 26 (instruction -> doWhile .)
    PLUS            reduce using rule 26 (instruction -> doWhile .)
    INT             reduce using rule 26 (instruction -> doWhile .)
    FLOAT           reduce using rule 26 (instruction -> doWhile .)
    STRING          reduce using rule 26 (instruction -> doWhile .)
    KHATE2          reduce using rule 26 (instruction -> doWhile .)
    S7I7            reduce using rule 26 (instruction -> doWhile .)
    WALO            reduce using rule 26 (instruction -> doWhile .)
    JEREB           reduce using rule 26 (instruction -> doWhile .)
    ILA             reduce using rule 26 (instruction -> doWhile .)
    LKOLA           reduce using rule 26 (instruction -> doWhile .)
    MA7ED           reduce using rule 26 (instruction -> doWhile .)
    DIR             reduce using rule 26 (instruction -> doWhile .)
    QRA             reduce using rule 26 (instruction -> doWhile .)
    [               reduce using rule 26 (instruction -> doWhile .)
    $end            reduce using rule 26 (instruction -> doWhile .)
    }               reduce using rule 26 (instruction -> doWhile .)


state 16

    (27) instruction -> input .

    KHREJ           reduce using rule 27 (instruction -> input .)
    KMEL            reduce using rule 27 (instruction -> input .)
    ID              reduce using rule 27 (instruction -> input .)
    KTEB            reduce using rule 27 (instruction -> input .)
    (               reduce using rule 27 (instruction -> input .)
    MINUS           reduce using rule 27 (instruction -> input .)
    PLUS            reduce using rule 27 (instruction -> input .)
    INT             reduce using rule 27 (instruction -> input .)
    FLOAT           reduce using rule 27 (instruction -> input .)
    STRING          reduce using rule 27 (instruction -> input .)
    KHATE2          reduce using rule 27 (instruction -> input .)
    S7I7            reduce using rule 27 (instruction -> input .)
    WALO            reduce using rule 27 (instruction -> input .)
    JEREB           reduce using rule 27 (instruction -> input .)
    ILA             reduce using rule 27 (instruction -> input .)
    LKOLA           reduce using rule 27 (instruction -> input .)
    MA7ED           reduce using rule 27 (instruction -> input .)
    DIR             reduce using rule 27 (instruction -> input .)
    QRA             reduce using rule 27 (instruction -> input .)
    [               reduce using rule 27 (instruction -> input .)
    $end            reduce using rule 27 (instruction -> input .)
    }               reduce using rule 27 (instruction -> input .)


state 17

    (28) instruction -> empty .

    KHREJ           reduce using rule 28 (instruction -> empty .)
    KMEL            reduce using rule 28 (instruction -> empty .)
    ID              reduce using rule 28 (instruction -> empty .)
    KTEB            reduce using rule 28 (instruction -> empty .)
    (               reduce using rule 28 (instruction -> empty .)
    MINUS           reduce using rule 28 (instruction -> empty .)
    PLUS            reduce using rule 28 (instruction -> empty .)
    INT             reduce using rule 28 (instruction -> empty .)
    FLOAT           reduce using rule 28 (instruction -> empty .)
    STRING          reduce using rule 28 (instruction -> empty .)
    KHATE2          reduce using rule 28 (instruction -> empty .)
    S7I7            reduce using rule 28 (instruction -> empty .)
    WALO            reduce using rule 28 (instruction -> empty .)
    JEREB           reduce using rule 28 (instruction -> empty .)
    ILA             reduce using rule 28 (instruction -> empty .)
    LKOLA           reduce using rule 28 (instruction -> empty .)
    MA7ED           reduce using rule 28 (instruction -> empty .)
    DIR             reduce using rule 28 (instruction -> empty .)
    QRA             reduce using rule 28 (instruction -> empty .)
    [               reduce using rule 28 (instruction -> empty .)
    $end            reduce using rule 28 (instruction -> empty .)
    }               reduce using rule 28 (instruction -> empty .)


state 18

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input
    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION
    (53) expression -> ID .
    (69) arrayelt -> ID . dimensions
    (70) dimensions -> . [ expression ]
    (71) dimensions -> . dimensions [ expression ]

  ! shift/reduce conflict for [ resolved as shift
    EQUALS          shift and go to state 43
    INCREMENTATION  shift and go to state 44
    DECREMENTATION  shift and go to state 45
    PLUS            reduce using rule 53 (expression -> ID .)
    MINUS           reduce using rule 53 (expression -> ID .)
    TIMES           reduce using rule 53 (expression -> ID .)
    DIVIDE          reduce using rule 53 (expression -> ID .)
    KHREJ           reduce using rule 53 (expression -> ID .)
    KMEL            reduce using rule 53 (expression -> ID .)
    ID              reduce using rule 53 (expression -> ID .)
    KTEB            reduce using rule 53 (expression -> ID .)
    (               reduce using rule 53 (expression -> ID .)
    INT             reduce using rule 53 (expression -> ID .)
    FLOAT           reduce using rule 53 (expression -> ID .)
    STRING          reduce using rule 53 (expression -> ID .)
    KHATE2          reduce using rule 53 (expression -> ID .)
    S7I7            reduce using rule 53 (expression -> ID .)
    WALO            reduce using rule 53 (expression -> ID .)
    JEREB           reduce using rule 53 (expression -> ID .)
    ILA             reduce using rule 53 (expression -> ID .)
    LKOLA           reduce using rule 53 (expression -> ID .)
    MA7ED           reduce using rule 53 (expression -> ID .)
    DIR             reduce using rule 53 (expression -> ID .)
    QRA             reduce using rule 53 (expression -> ID .)
    $end            reduce using rule 53 (expression -> ID .)
    }               reduce using rule 53 (expression -> ID .)
    [               shift and go to state 47

  ! [               [ reduce using rule 53 (expression -> ID .) ]

    dimensions                     shift and go to state 46

state 19

    (6) var_assign -> arrayelt . EQUALS expression
    (65) expression -> arrayelt .

    EQUALS          shift and go to state 48
    PLUS            reduce using rule 65 (expression -> arrayelt .)
    MINUS           reduce using rule 65 (expression -> arrayelt .)
    TIMES           reduce using rule 65 (expression -> arrayelt .)
    DIVIDE          reduce using rule 65 (expression -> arrayelt .)
    KHREJ           reduce using rule 65 (expression -> arrayelt .)
    KMEL            reduce using rule 65 (expression -> arrayelt .)
    ID              reduce using rule 65 (expression -> arrayelt .)
    KTEB            reduce using rule 65 (expression -> arrayelt .)
    (               reduce using rule 65 (expression -> arrayelt .)
    INT             reduce using rule 65 (expression -> arrayelt .)
    FLOAT           reduce using rule 65 (expression -> arrayelt .)
    STRING          reduce using rule 65 (expression -> arrayelt .)
    KHATE2          reduce using rule 65 (expression -> arrayelt .)
    S7I7            reduce using rule 65 (expression -> arrayelt .)
    WALO            reduce using rule 65 (expression -> arrayelt .)
    JEREB           reduce using rule 65 (expression -> arrayelt .)
    ILA             reduce using rule 65 (expression -> arrayelt .)
    LKOLA           reduce using rule 65 (expression -> arrayelt .)
    MA7ED           reduce using rule 65 (expression -> arrayelt .)
    DIR             reduce using rule 65 (expression -> arrayelt .)
    QRA             reduce using rule 65 (expression -> arrayelt .)
    [               reduce using rule 65 (expression -> arrayelt .)
    $end            reduce using rule 65 (expression -> arrayelt .)
    }               reduce using rule 65 (expression -> arrayelt .)
    ;               reduce using rule 65 (expression -> arrayelt .)


state 20

    (72) printing -> KTEB . ( condition )
    (73) printing -> KTEB . ( incrementation )
    (74) printing -> KTEB . ( decrementation )

    (               shift and go to state 49


state 21

    (50) expression -> ( . expression )
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 50
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 22

    (52) expression -> PLUS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 53
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 23

    (51) expression -> MINUS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 54
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 24

    (58) expression -> INT .

    PLUS            reduce using rule 58 (expression -> INT .)
    MINUS           reduce using rule 58 (expression -> INT .)
    TIMES           reduce using rule 58 (expression -> INT .)
    DIVIDE          reduce using rule 58 (expression -> INT .)
    KHREJ           reduce using rule 58 (expression -> INT .)
    KMEL            reduce using rule 58 (expression -> INT .)
    ID              reduce using rule 58 (expression -> INT .)
    KTEB            reduce using rule 58 (expression -> INT .)
    (               reduce using rule 58 (expression -> INT .)
    INT             reduce using rule 58 (expression -> INT .)
    FLOAT           reduce using rule 58 (expression -> INT .)
    STRING          reduce using rule 58 (expression -> INT .)
    KHATE2          reduce using rule 58 (expression -> INT .)
    S7I7            reduce using rule 58 (expression -> INT .)
    WALO            reduce using rule 58 (expression -> INT .)
    JEREB           reduce using rule 58 (expression -> INT .)
    ILA             reduce using rule 58 (expression -> INT .)
    LKOLA           reduce using rule 58 (expression -> INT .)
    MA7ED           reduce using rule 58 (expression -> INT .)
    DIR             reduce using rule 58 (expression -> INT .)
    QRA             reduce using rule 58 (expression -> INT .)
    [               reduce using rule 58 (expression -> INT .)
    $end            reduce using rule 58 (expression -> INT .)
    )               reduce using rule 58 (expression -> INT .)
    ]               reduce using rule 58 (expression -> INT .)
    ,               reduce using rule 58 (expression -> INT .)
    }               reduce using rule 58 (expression -> INT .)
    ;               reduce using rule 58 (expression -> INT .)
    SUP             reduce using rule 58 (expression -> INT .)
    INF             reduce using rule 58 (expression -> INT .)
    EQUALSCOMP      reduce using rule 58 (expression -> INT .)
    SUPEQUALS       reduce using rule 58 (expression -> INT .)
    INFEQUALS       reduce using rule 58 (expression -> INT .)
    DIFFERENT       reduce using rule 58 (expression -> INT .)
    WA              reduce using rule 58 (expression -> INT .)
    AW              reduce using rule 58 (expression -> INT .)


state 25

    (59) expression -> FLOAT .

    PLUS            reduce using rule 59 (expression -> FLOAT .)
    MINUS           reduce using rule 59 (expression -> FLOAT .)
    TIMES           reduce using rule 59 (expression -> FLOAT .)
    DIVIDE          reduce using rule 59 (expression -> FLOAT .)
    KHREJ           reduce using rule 59 (expression -> FLOAT .)
    KMEL            reduce using rule 59 (expression -> FLOAT .)
    ID              reduce using rule 59 (expression -> FLOAT .)
    KTEB            reduce using rule 59 (expression -> FLOAT .)
    (               reduce using rule 59 (expression -> FLOAT .)
    INT             reduce using rule 59 (expression -> FLOAT .)
    FLOAT           reduce using rule 59 (expression -> FLOAT .)
    STRING          reduce using rule 59 (expression -> FLOAT .)
    KHATE2          reduce using rule 59 (expression -> FLOAT .)
    S7I7            reduce using rule 59 (expression -> FLOAT .)
    WALO            reduce using rule 59 (expression -> FLOAT .)
    JEREB           reduce using rule 59 (expression -> FLOAT .)
    ILA             reduce using rule 59 (expression -> FLOAT .)
    LKOLA           reduce using rule 59 (expression -> FLOAT .)
    MA7ED           reduce using rule 59 (expression -> FLOAT .)
    DIR             reduce using rule 59 (expression -> FLOAT .)
    QRA             reduce using rule 59 (expression -> FLOAT .)
    [               reduce using rule 59 (expression -> FLOAT .)
    $end            reduce using rule 59 (expression -> FLOAT .)
    )               reduce using rule 59 (expression -> FLOAT .)
    ]               reduce using rule 59 (expression -> FLOAT .)
    ,               reduce using rule 59 (expression -> FLOAT .)
    }               reduce using rule 59 (expression -> FLOAT .)
    ;               reduce using rule 59 (expression -> FLOAT .)
    SUP             reduce using rule 59 (expression -> FLOAT .)
    INF             reduce using rule 59 (expression -> FLOAT .)
    EQUALSCOMP      reduce using rule 59 (expression -> FLOAT .)
    SUPEQUALS       reduce using rule 59 (expression -> FLOAT .)
    INFEQUALS       reduce using rule 59 (expression -> FLOAT .)
    DIFFERENT       reduce using rule 59 (expression -> FLOAT .)
    WA              reduce using rule 59 (expression -> FLOAT .)
    AW              reduce using rule 59 (expression -> FLOAT .)


state 26

    (60) expression -> STRING .

    PLUS            reduce using rule 60 (expression -> STRING .)
    MINUS           reduce using rule 60 (expression -> STRING .)
    TIMES           reduce using rule 60 (expression -> STRING .)
    DIVIDE          reduce using rule 60 (expression -> STRING .)
    KHREJ           reduce using rule 60 (expression -> STRING .)
    KMEL            reduce using rule 60 (expression -> STRING .)
    ID              reduce using rule 60 (expression -> STRING .)
    KTEB            reduce using rule 60 (expression -> STRING .)
    (               reduce using rule 60 (expression -> STRING .)
    INT             reduce using rule 60 (expression -> STRING .)
    FLOAT           reduce using rule 60 (expression -> STRING .)
    STRING          reduce using rule 60 (expression -> STRING .)
    KHATE2          reduce using rule 60 (expression -> STRING .)
    S7I7            reduce using rule 60 (expression -> STRING .)
    WALO            reduce using rule 60 (expression -> STRING .)
    JEREB           reduce using rule 60 (expression -> STRING .)
    ILA             reduce using rule 60 (expression -> STRING .)
    LKOLA           reduce using rule 60 (expression -> STRING .)
    MA7ED           reduce using rule 60 (expression -> STRING .)
    DIR             reduce using rule 60 (expression -> STRING .)
    QRA             reduce using rule 60 (expression -> STRING .)
    [               reduce using rule 60 (expression -> STRING .)
    $end            reduce using rule 60 (expression -> STRING .)
    )               reduce using rule 60 (expression -> STRING .)
    ]               reduce using rule 60 (expression -> STRING .)
    ,               reduce using rule 60 (expression -> STRING .)
    }               reduce using rule 60 (expression -> STRING .)
    ;               reduce using rule 60 (expression -> STRING .)
    SUP             reduce using rule 60 (expression -> STRING .)
    INF             reduce using rule 60 (expression -> STRING .)
    EQUALSCOMP      reduce using rule 60 (expression -> STRING .)
    SUPEQUALS       reduce using rule 60 (expression -> STRING .)
    INFEQUALS       reduce using rule 60 (expression -> STRING .)
    DIFFERENT       reduce using rule 60 (expression -> STRING .)
    WA              reduce using rule 60 (expression -> STRING .)
    AW              reduce using rule 60 (expression -> STRING .)


state 27

    (61) expression -> KHATE2 .

    PLUS            reduce using rule 61 (expression -> KHATE2 .)
    MINUS           reduce using rule 61 (expression -> KHATE2 .)
    TIMES           reduce using rule 61 (expression -> KHATE2 .)
    DIVIDE          reduce using rule 61 (expression -> KHATE2 .)
    KHREJ           reduce using rule 61 (expression -> KHATE2 .)
    KMEL            reduce using rule 61 (expression -> KHATE2 .)
    ID              reduce using rule 61 (expression -> KHATE2 .)
    KTEB            reduce using rule 61 (expression -> KHATE2 .)
    (               reduce using rule 61 (expression -> KHATE2 .)
    INT             reduce using rule 61 (expression -> KHATE2 .)
    FLOAT           reduce using rule 61 (expression -> KHATE2 .)
    STRING          reduce using rule 61 (expression -> KHATE2 .)
    KHATE2          reduce using rule 61 (expression -> KHATE2 .)
    S7I7            reduce using rule 61 (expression -> KHATE2 .)
    WALO            reduce using rule 61 (expression -> KHATE2 .)
    JEREB           reduce using rule 61 (expression -> KHATE2 .)
    ILA             reduce using rule 61 (expression -> KHATE2 .)
    LKOLA           reduce using rule 61 (expression -> KHATE2 .)
    MA7ED           reduce using rule 61 (expression -> KHATE2 .)
    DIR             reduce using rule 61 (expression -> KHATE2 .)
    QRA             reduce using rule 61 (expression -> KHATE2 .)
    [               reduce using rule 61 (expression -> KHATE2 .)
    $end            reduce using rule 61 (expression -> KHATE2 .)
    )               reduce using rule 61 (expression -> KHATE2 .)
    ]               reduce using rule 61 (expression -> KHATE2 .)
    ,               reduce using rule 61 (expression -> KHATE2 .)
    }               reduce using rule 61 (expression -> KHATE2 .)
    ;               reduce using rule 61 (expression -> KHATE2 .)
    SUP             reduce using rule 61 (expression -> KHATE2 .)
    INF             reduce using rule 61 (expression -> KHATE2 .)
    EQUALSCOMP      reduce using rule 61 (expression -> KHATE2 .)
    SUPEQUALS       reduce using rule 61 (expression -> KHATE2 .)
    INFEQUALS       reduce using rule 61 (expression -> KHATE2 .)
    DIFFERENT       reduce using rule 61 (expression -> KHATE2 .)
    WA              reduce using rule 61 (expression -> KHATE2 .)
    AW              reduce using rule 61 (expression -> KHATE2 .)


state 28

    (62) expression -> S7I7 .

    PLUS            reduce using rule 62 (expression -> S7I7 .)
    MINUS           reduce using rule 62 (expression -> S7I7 .)
    TIMES           reduce using rule 62 (expression -> S7I7 .)
    DIVIDE          reduce using rule 62 (expression -> S7I7 .)
    KHREJ           reduce using rule 62 (expression -> S7I7 .)
    KMEL            reduce using rule 62 (expression -> S7I7 .)
    ID              reduce using rule 62 (expression -> S7I7 .)
    KTEB            reduce using rule 62 (expression -> S7I7 .)
    (               reduce using rule 62 (expression -> S7I7 .)
    INT             reduce using rule 62 (expression -> S7I7 .)
    FLOAT           reduce using rule 62 (expression -> S7I7 .)
    STRING          reduce using rule 62 (expression -> S7I7 .)
    KHATE2          reduce using rule 62 (expression -> S7I7 .)
    S7I7            reduce using rule 62 (expression -> S7I7 .)
    WALO            reduce using rule 62 (expression -> S7I7 .)
    JEREB           reduce using rule 62 (expression -> S7I7 .)
    ILA             reduce using rule 62 (expression -> S7I7 .)
    LKOLA           reduce using rule 62 (expression -> S7I7 .)
    MA7ED           reduce using rule 62 (expression -> S7I7 .)
    DIR             reduce using rule 62 (expression -> S7I7 .)
    QRA             reduce using rule 62 (expression -> S7I7 .)
    [               reduce using rule 62 (expression -> S7I7 .)
    $end            reduce using rule 62 (expression -> S7I7 .)
    )               reduce using rule 62 (expression -> S7I7 .)
    ]               reduce using rule 62 (expression -> S7I7 .)
    ,               reduce using rule 62 (expression -> S7I7 .)
    }               reduce using rule 62 (expression -> S7I7 .)
    ;               reduce using rule 62 (expression -> S7I7 .)
    SUP             reduce using rule 62 (expression -> S7I7 .)
    INF             reduce using rule 62 (expression -> S7I7 .)
    EQUALSCOMP      reduce using rule 62 (expression -> S7I7 .)
    SUPEQUALS       reduce using rule 62 (expression -> S7I7 .)
    INFEQUALS       reduce using rule 62 (expression -> S7I7 .)
    DIFFERENT       reduce using rule 62 (expression -> S7I7 .)
    WA              reduce using rule 62 (expression -> S7I7 .)
    AW              reduce using rule 62 (expression -> S7I7 .)


state 29

    (63) expression -> WALO .

    PLUS            reduce using rule 63 (expression -> WALO .)
    MINUS           reduce using rule 63 (expression -> WALO .)
    TIMES           reduce using rule 63 (expression -> WALO .)
    DIVIDE          reduce using rule 63 (expression -> WALO .)
    KHREJ           reduce using rule 63 (expression -> WALO .)
    KMEL            reduce using rule 63 (expression -> WALO .)
    ID              reduce using rule 63 (expression -> WALO .)
    KTEB            reduce using rule 63 (expression -> WALO .)
    (               reduce using rule 63 (expression -> WALO .)
    INT             reduce using rule 63 (expression -> WALO .)
    FLOAT           reduce using rule 63 (expression -> WALO .)
    STRING          reduce using rule 63 (expression -> WALO .)
    KHATE2          reduce using rule 63 (expression -> WALO .)
    S7I7            reduce using rule 63 (expression -> WALO .)
    WALO            reduce using rule 63 (expression -> WALO .)
    JEREB           reduce using rule 63 (expression -> WALO .)
    ILA             reduce using rule 63 (expression -> WALO .)
    LKOLA           reduce using rule 63 (expression -> WALO .)
    MA7ED           reduce using rule 63 (expression -> WALO .)
    DIR             reduce using rule 63 (expression -> WALO .)
    QRA             reduce using rule 63 (expression -> WALO .)
    [               reduce using rule 63 (expression -> WALO .)
    $end            reduce using rule 63 (expression -> WALO .)
    )               reduce using rule 63 (expression -> WALO .)
    ]               reduce using rule 63 (expression -> WALO .)
    ,               reduce using rule 63 (expression -> WALO .)
    }               reduce using rule 63 (expression -> WALO .)
    ;               reduce using rule 63 (expression -> WALO .)
    SUP             reduce using rule 63 (expression -> WALO .)
    INF             reduce using rule 63 (expression -> WALO .)
    EQUALSCOMP      reduce using rule 63 (expression -> WALO .)
    SUPEQUALS       reduce using rule 63 (expression -> WALO .)
    INFEQUALS       reduce using rule 63 (expression -> WALO .)
    DIFFERENT       reduce using rule 63 (expression -> WALO .)
    WA              reduce using rule 63 (expression -> WALO .)
    AW              reduce using rule 63 (expression -> WALO .)


state 30

    (64) expression -> array .

    PLUS            reduce using rule 64 (expression -> array .)
    MINUS           reduce using rule 64 (expression -> array .)
    TIMES           reduce using rule 64 (expression -> array .)
    DIVIDE          reduce using rule 64 (expression -> array .)
    KHREJ           reduce using rule 64 (expression -> array .)
    KMEL            reduce using rule 64 (expression -> array .)
    ID              reduce using rule 64 (expression -> array .)
    KTEB            reduce using rule 64 (expression -> array .)
    (               reduce using rule 64 (expression -> array .)
    INT             reduce using rule 64 (expression -> array .)
    FLOAT           reduce using rule 64 (expression -> array .)
    STRING          reduce using rule 64 (expression -> array .)
    KHATE2          reduce using rule 64 (expression -> array .)
    S7I7            reduce using rule 64 (expression -> array .)
    WALO            reduce using rule 64 (expression -> array .)
    JEREB           reduce using rule 64 (expression -> array .)
    ILA             reduce using rule 64 (expression -> array .)
    LKOLA           reduce using rule 64 (expression -> array .)
    MA7ED           reduce using rule 64 (expression -> array .)
    DIR             reduce using rule 64 (expression -> array .)
    QRA             reduce using rule 64 (expression -> array .)
    [               reduce using rule 64 (expression -> array .)
    $end            reduce using rule 64 (expression -> array .)
    )               reduce using rule 64 (expression -> array .)
    ]               reduce using rule 64 (expression -> array .)
    ,               reduce using rule 64 (expression -> array .)
    }               reduce using rule 64 (expression -> array .)
    ;               reduce using rule 64 (expression -> array .)
    SUP             reduce using rule 64 (expression -> array .)
    INF             reduce using rule 64 (expression -> array .)
    EQUALSCOMP      reduce using rule 64 (expression -> array .)
    SUPEQUALS       reduce using rule 64 (expression -> array .)
    INFEQUALS       reduce using rule 64 (expression -> array .)
    DIFFERENT       reduce using rule 64 (expression -> array .)
    WA              reduce using rule 64 (expression -> array .)
    AW              reduce using rule 64 (expression -> array .)


state 31

    (56) try -> JEREB . { instruction_list } MASD9CH { instruction_list }
    (57) try -> JEREB . { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }

    {               shift and go to state 55


state 32

    (7) if -> ILA . ( condition ) { instruction_list }
    (8) if -> ILA . ( condition ) { instruction_list } WLA { instruction_list }

    (               shift and go to state 56


state 33

    (9) for -> LKOLA . ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> LKOLA . ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> LKOLA . ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> LKOLA . ( expression ; condition ; decrementation ) { instruction_list }

    (               shift and go to state 57


state 34

    (13) while -> MA7ED . ( condition ) { instruction_list }

    (               shift and go to state 58


state 35

    (14) doWhile -> DIR . { instruction_list } MA7ED ( condition )

    {               shift and go to state 59


state 36

    (54) input -> QRA . ( expression )
    (55) input -> QRA . ( )

    (               shift and go to state 60


state 37

    (68) array -> [ . arraylist ]
    (66) arraylist -> . expression
    (67) arraylist -> . arraylist , expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    arraylist                      shift and go to state 61
    expression                     shift and go to state 62
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 38

    (30) instruction_list -> instruction_list instruction .

    KHREJ           reduce using rule 30 (instruction_list -> instruction_list instruction .)
    KMEL            reduce using rule 30 (instruction_list -> instruction_list instruction .)
    ID              reduce using rule 30 (instruction_list -> instruction_list instruction .)
    KTEB            reduce using rule 30 (instruction_list -> instruction_list instruction .)
    (               reduce using rule 30 (instruction_list -> instruction_list instruction .)
    MINUS           reduce using rule 30 (instruction_list -> instruction_list instruction .)
    PLUS            reduce using rule 30 (instruction_list -> instruction_list instruction .)
    INT             reduce using rule 30 (instruction_list -> instruction_list instruction .)
    FLOAT           reduce using rule 30 (instruction_list -> instruction_list instruction .)
    STRING          reduce using rule 30 (instruction_list -> instruction_list instruction .)
    KHATE2          reduce using rule 30 (instruction_list -> instruction_list instruction .)
    S7I7            reduce using rule 30 (instruction_list -> instruction_list instruction .)
    WALO            reduce using rule 30 (instruction_list -> instruction_list instruction .)
    JEREB           reduce using rule 30 (instruction_list -> instruction_list instruction .)
    ILA             reduce using rule 30 (instruction_list -> instruction_list instruction .)
    LKOLA           reduce using rule 30 (instruction_list -> instruction_list instruction .)
    MA7ED           reduce using rule 30 (instruction_list -> instruction_list instruction .)
    DIR             reduce using rule 30 (instruction_list -> instruction_list instruction .)
    QRA             reduce using rule 30 (instruction_list -> instruction_list instruction .)
    [               reduce using rule 30 (instruction_list -> instruction_list instruction .)
    $end            reduce using rule 30 (instruction_list -> instruction_list instruction .)
    }               reduce using rule 30 (instruction_list -> instruction_list instruction .)


state 39

    (46) expression -> expression PLUS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 63
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 40

    (47) expression -> expression MINUS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 64
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 41

    (48) expression -> expression TIMES . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 65
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 42

    (49) expression -> expression DIVIDE . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 66
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 43

    (4) var_assign -> ID EQUALS . expression
    (5) var_assign -> ID EQUALS . input
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    QRA             shift and go to state 36
    [               shift and go to state 37

    expression                     shift and go to state 67
    input                          shift and go to state 68
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 44

    (2) incrementation -> ID INCREMENTATION .

    KHREJ           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KMEL            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    ID              reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KTEB            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    (               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MINUS           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    PLUS            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    INT             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    FLOAT           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    STRING          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    KHATE2          reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    S7I7            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    WALO            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    JEREB           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    ILA             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    LKOLA           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    MA7ED           reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    DIR             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    QRA             reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    [               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    $end            reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    )               reduce using rule 2 (incrementation -> ID INCREMENTATION .)
    }               reduce using rule 2 (incrementation -> ID INCREMENTATION .)


state 45

    (3) decrementation -> ID DECREMENTATION .

    KHREJ           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KMEL            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    ID              reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KTEB            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    (               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MINUS           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    PLUS            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    INT             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    FLOAT           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    STRING          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    KHATE2          reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    S7I7            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    WALO            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    JEREB           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    ILA             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    LKOLA           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    MA7ED           reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    DIR             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    QRA             reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    [               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    $end            reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    )               reduce using rule 3 (decrementation -> ID DECREMENTATION .)
    }               reduce using rule 3 (decrementation -> ID DECREMENTATION .)


state 46

    (69) arrayelt -> ID dimensions .
    (71) dimensions -> dimensions . [ expression ]

  ! shift/reduce conflict for [ resolved as shift
    EQUALS          reduce using rule 69 (arrayelt -> ID dimensions .)
    PLUS            reduce using rule 69 (arrayelt -> ID dimensions .)
    MINUS           reduce using rule 69 (arrayelt -> ID dimensions .)
    TIMES           reduce using rule 69 (arrayelt -> ID dimensions .)
    DIVIDE          reduce using rule 69 (arrayelt -> ID dimensions .)
    KHREJ           reduce using rule 69 (arrayelt -> ID dimensions .)
    KMEL            reduce using rule 69 (arrayelt -> ID dimensions .)
    ID              reduce using rule 69 (arrayelt -> ID dimensions .)
    KTEB            reduce using rule 69 (arrayelt -> ID dimensions .)
    (               reduce using rule 69 (arrayelt -> ID dimensions .)
    INT             reduce using rule 69 (arrayelt -> ID dimensions .)
    FLOAT           reduce using rule 69 (arrayelt -> ID dimensions .)
    STRING          reduce using rule 69 (arrayelt -> ID dimensions .)
    KHATE2          reduce using rule 69 (arrayelt -> ID dimensions .)
    S7I7            reduce using rule 69 (arrayelt -> ID dimensions .)
    WALO            reduce using rule 69 (arrayelt -> ID dimensions .)
    JEREB           reduce using rule 69 (arrayelt -> ID dimensions .)
    ILA             reduce using rule 69 (arrayelt -> ID dimensions .)
    LKOLA           reduce using rule 69 (arrayelt -> ID dimensions .)
    MA7ED           reduce using rule 69 (arrayelt -> ID dimensions .)
    DIR             reduce using rule 69 (arrayelt -> ID dimensions .)
    QRA             reduce using rule 69 (arrayelt -> ID dimensions .)
    $end            reduce using rule 69 (arrayelt -> ID dimensions .)
    )               reduce using rule 69 (arrayelt -> ID dimensions .)
    ]               reduce using rule 69 (arrayelt -> ID dimensions .)
    ,               reduce using rule 69 (arrayelt -> ID dimensions .)
    }               reduce using rule 69 (arrayelt -> ID dimensions .)
    ;               reduce using rule 69 (arrayelt -> ID dimensions .)
    SUP             reduce using rule 69 (arrayelt -> ID dimensions .)
    INF             reduce using rule 69 (arrayelt -> ID dimensions .)
    EQUALSCOMP      reduce using rule 69 (arrayelt -> ID dimensions .)
    SUPEQUALS       reduce using rule 69 (arrayelt -> ID dimensions .)
    INFEQUALS       reduce using rule 69 (arrayelt -> ID dimensions .)
    DIFFERENT       reduce using rule 69 (arrayelt -> ID dimensions .)
    WA              reduce using rule 69 (arrayelt -> ID dimensions .)
    AW              reduce using rule 69 (arrayelt -> ID dimensions .)
    [               shift and go to state 69

  ! [               [ reduce using rule 69 (arrayelt -> ID dimensions .) ]


state 47

    (70) dimensions -> [ . expression ]
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 70
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 48

    (6) var_assign -> arrayelt EQUALS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    arrayelt                       shift and go to state 52
    expression                     shift and go to state 71
    array                          shift and go to state 30

state 49

    (72) printing -> KTEB ( . condition )
    (73) printing -> KTEB ( . incrementation )
    (74) printing -> KTEB ( . decrementation )
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 72
    ID              shift and go to state 77
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 73
    incrementation                 shift and go to state 74
    decrementation                 shift and go to state 75
    expression                     shift and go to state 76
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 50

    (50) expression -> ( expression . )
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    )               shift and go to state 78
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 51

    (53) expression -> ID .
    (69) arrayelt -> ID . dimensions
    (70) dimensions -> . [ expression ]
    (71) dimensions -> . dimensions [ expression ]

  ! shift/reduce conflict for [ resolved as shift
    )               reduce using rule 53 (expression -> ID .)
    PLUS            reduce using rule 53 (expression -> ID .)
    MINUS           reduce using rule 53 (expression -> ID .)
    TIMES           reduce using rule 53 (expression -> ID .)
    DIVIDE          reduce using rule 53 (expression -> ID .)
    KHREJ           reduce using rule 53 (expression -> ID .)
    KMEL            reduce using rule 53 (expression -> ID .)
    ID              reduce using rule 53 (expression -> ID .)
    KTEB            reduce using rule 53 (expression -> ID .)
    (               reduce using rule 53 (expression -> ID .)
    INT             reduce using rule 53 (expression -> ID .)
    FLOAT           reduce using rule 53 (expression -> ID .)
    STRING          reduce using rule 53 (expression -> ID .)
    KHATE2          reduce using rule 53 (expression -> ID .)
    S7I7            reduce using rule 53 (expression -> ID .)
    WALO            reduce using rule 53 (expression -> ID .)
    JEREB           reduce using rule 53 (expression -> ID .)
    ILA             reduce using rule 53 (expression -> ID .)
    LKOLA           reduce using rule 53 (expression -> ID .)
    MA7ED           reduce using rule 53 (expression -> ID .)
    DIR             reduce using rule 53 (expression -> ID .)
    QRA             reduce using rule 53 (expression -> ID .)
    $end            reduce using rule 53 (expression -> ID .)
    ]               reduce using rule 53 (expression -> ID .)
    ,               reduce using rule 53 (expression -> ID .)
    }               reduce using rule 53 (expression -> ID .)
    ;               reduce using rule 53 (expression -> ID .)
    SUP             reduce using rule 53 (expression -> ID .)
    INF             reduce using rule 53 (expression -> ID .)
    EQUALSCOMP      reduce using rule 53 (expression -> ID .)
    SUPEQUALS       reduce using rule 53 (expression -> ID .)
    INFEQUALS       reduce using rule 53 (expression -> ID .)
    DIFFERENT       reduce using rule 53 (expression -> ID .)
    WA              reduce using rule 53 (expression -> ID .)
    AW              reduce using rule 53 (expression -> ID .)
    [               shift and go to state 47

  ! [               [ reduce using rule 53 (expression -> ID .) ]

    dimensions                     shift and go to state 46

state 52

    (65) expression -> arrayelt .

    )               reduce using rule 65 (expression -> arrayelt .)
    PLUS            reduce using rule 65 (expression -> arrayelt .)
    MINUS           reduce using rule 65 (expression -> arrayelt .)
    TIMES           reduce using rule 65 (expression -> arrayelt .)
    DIVIDE          reduce using rule 65 (expression -> arrayelt .)
    KHREJ           reduce using rule 65 (expression -> arrayelt .)
    KMEL            reduce using rule 65 (expression -> arrayelt .)
    ID              reduce using rule 65 (expression -> arrayelt .)
    KTEB            reduce using rule 65 (expression -> arrayelt .)
    (               reduce using rule 65 (expression -> arrayelt .)
    INT             reduce using rule 65 (expression -> arrayelt .)
    FLOAT           reduce using rule 65 (expression -> arrayelt .)
    STRING          reduce using rule 65 (expression -> arrayelt .)
    KHATE2          reduce using rule 65 (expression -> arrayelt .)
    S7I7            reduce using rule 65 (expression -> arrayelt .)
    WALO            reduce using rule 65 (expression -> arrayelt .)
    JEREB           reduce using rule 65 (expression -> arrayelt .)
    ILA             reduce using rule 65 (expression -> arrayelt .)
    LKOLA           reduce using rule 65 (expression -> arrayelt .)
    MA7ED           reduce using rule 65 (expression -> arrayelt .)
    DIR             reduce using rule 65 (expression -> arrayelt .)
    QRA             reduce using rule 65 (expression -> arrayelt .)
    [               reduce using rule 65 (expression -> arrayelt .)
    $end            reduce using rule 65 (expression -> arrayelt .)
    ]               reduce using rule 65 (expression -> arrayelt .)
    ,               reduce using rule 65 (expression -> arrayelt .)
    }               reduce using rule 65 (expression -> arrayelt .)
    ;               reduce using rule 65 (expression -> arrayelt .)
    SUP             reduce using rule 65 (expression -> arrayelt .)
    INF             reduce using rule 65 (expression -> arrayelt .)
    EQUALSCOMP      reduce using rule 65 (expression -> arrayelt .)
    SUPEQUALS       reduce using rule 65 (expression -> arrayelt .)
    INFEQUALS       reduce using rule 65 (expression -> arrayelt .)
    DIFFERENT       reduce using rule 65 (expression -> arrayelt .)
    WA              reduce using rule 65 (expression -> arrayelt .)
    AW              reduce using rule 65 (expression -> arrayelt .)


state 53

    (52) expression -> PLUS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 52 (expression -> PLUS expression .)
    MINUS           reduce using rule 52 (expression -> PLUS expression .)
    KHREJ           reduce using rule 52 (expression -> PLUS expression .)
    KMEL            reduce using rule 52 (expression -> PLUS expression .)
    ID              reduce using rule 52 (expression -> PLUS expression .)
    KTEB            reduce using rule 52 (expression -> PLUS expression .)
    (               reduce using rule 52 (expression -> PLUS expression .)
    INT             reduce using rule 52 (expression -> PLUS expression .)
    FLOAT           reduce using rule 52 (expression -> PLUS expression .)
    STRING          reduce using rule 52 (expression -> PLUS expression .)
    KHATE2          reduce using rule 52 (expression -> PLUS expression .)
    S7I7            reduce using rule 52 (expression -> PLUS expression .)
    WALO            reduce using rule 52 (expression -> PLUS expression .)
    JEREB           reduce using rule 52 (expression -> PLUS expression .)
    ILA             reduce using rule 52 (expression -> PLUS expression .)
    LKOLA           reduce using rule 52 (expression -> PLUS expression .)
    MA7ED           reduce using rule 52 (expression -> PLUS expression .)
    DIR             reduce using rule 52 (expression -> PLUS expression .)
    QRA             reduce using rule 52 (expression -> PLUS expression .)
    [               reduce using rule 52 (expression -> PLUS expression .)
    $end            reduce using rule 52 (expression -> PLUS expression .)
    )               reduce using rule 52 (expression -> PLUS expression .)
    ]               reduce using rule 52 (expression -> PLUS expression .)
    ,               reduce using rule 52 (expression -> PLUS expression .)
    }               reduce using rule 52 (expression -> PLUS expression .)
    ;               reduce using rule 52 (expression -> PLUS expression .)
    SUP             reduce using rule 52 (expression -> PLUS expression .)
    INF             reduce using rule 52 (expression -> PLUS expression .)
    EQUALSCOMP      reduce using rule 52 (expression -> PLUS expression .)
    SUPEQUALS       reduce using rule 52 (expression -> PLUS expression .)
    INFEQUALS       reduce using rule 52 (expression -> PLUS expression .)
    DIFFERENT       reduce using rule 52 (expression -> PLUS expression .)
    WA              reduce using rule 52 (expression -> PLUS expression .)
    AW              reduce using rule 52 (expression -> PLUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! TIMES           [ reduce using rule 52 (expression -> PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> PLUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]


state 54

    (51) expression -> MINUS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 51 (expression -> MINUS expression .)
    MINUS           reduce using rule 51 (expression -> MINUS expression .)
    KHREJ           reduce using rule 51 (expression -> MINUS expression .)
    KMEL            reduce using rule 51 (expression -> MINUS expression .)
    ID              reduce using rule 51 (expression -> MINUS expression .)
    KTEB            reduce using rule 51 (expression -> MINUS expression .)
    (               reduce using rule 51 (expression -> MINUS expression .)
    INT             reduce using rule 51 (expression -> MINUS expression .)
    FLOAT           reduce using rule 51 (expression -> MINUS expression .)
    STRING          reduce using rule 51 (expression -> MINUS expression .)
    KHATE2          reduce using rule 51 (expression -> MINUS expression .)
    S7I7            reduce using rule 51 (expression -> MINUS expression .)
    WALO            reduce using rule 51 (expression -> MINUS expression .)
    JEREB           reduce using rule 51 (expression -> MINUS expression .)
    ILA             reduce using rule 51 (expression -> MINUS expression .)
    LKOLA           reduce using rule 51 (expression -> MINUS expression .)
    MA7ED           reduce using rule 51 (expression -> MINUS expression .)
    DIR             reduce using rule 51 (expression -> MINUS expression .)
    QRA             reduce using rule 51 (expression -> MINUS expression .)
    [               reduce using rule 51 (expression -> MINUS expression .)
    $end            reduce using rule 51 (expression -> MINUS expression .)
    )               reduce using rule 51 (expression -> MINUS expression .)
    ]               reduce using rule 51 (expression -> MINUS expression .)
    ,               reduce using rule 51 (expression -> MINUS expression .)
    }               reduce using rule 51 (expression -> MINUS expression .)
    ;               reduce using rule 51 (expression -> MINUS expression .)
    SUP             reduce using rule 51 (expression -> MINUS expression .)
    INF             reduce using rule 51 (expression -> MINUS expression .)
    EQUALSCOMP      reduce using rule 51 (expression -> MINUS expression .)
    SUPEQUALS       reduce using rule 51 (expression -> MINUS expression .)
    INFEQUALS       reduce using rule 51 (expression -> MINUS expression .)
    DIFFERENT       reduce using rule 51 (expression -> MINUS expression .)
    WA              reduce using rule 51 (expression -> MINUS expression .)
    AW              reduce using rule 51 (expression -> MINUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! TIMES           [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]


state 55

    (56) try -> JEREB { . instruction_list } MASD9CH { instruction_list }
    (57) try -> JEREB { . instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (29) instruction_list -> . instruction
    (30) instruction_list -> . instruction_list instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    }               reduce using rule 75 (empty -> .)
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction_list               shift and go to state 79
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 56

    (7) if -> ILA ( . condition ) { instruction_list }
    (8) if -> ILA ( . condition ) { instruction_list } WLA { instruction_list }
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 72
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 80
    expression                     shift and go to state 76
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 57

    (9) for -> LKOLA ( . var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> LKOLA ( . var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> LKOLA ( . expression ; condition ; incrementation ) { instruction_list }
    (12) for -> LKOLA ( . expression ; condition ; decrementation ) { instruction_list }
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

    ID              shift and go to state 83
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    var_assign                     shift and go to state 81
    expression                     shift and go to state 82
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 58

    (13) while -> MA7ED ( . condition ) { instruction_list }
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 72
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 84
    expression                     shift and go to state 76
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 59

    (14) doWhile -> DIR { . instruction_list } MA7ED ( condition )
    (29) instruction_list -> . instruction
    (30) instruction_list -> . instruction_list instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    }               reduce using rule 75 (empty -> .)
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction_list               shift and go to state 85
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 60

    (54) input -> QRA ( . expression )
    (55) input -> QRA ( . )
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    )               shift and go to state 87
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 86
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 61

    (68) array -> [ arraylist . ]
    (67) arraylist -> arraylist . , expression

    ]               shift and go to state 88
    ,               shift and go to state 89


state 62

    (66) arraylist -> expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    ]               reduce using rule 66 (arraylist -> expression .)
    ,               reduce using rule 66 (arraylist -> expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 63

    (46) expression -> expression PLUS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 46 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 46 (expression -> expression PLUS expression .)
    KHREJ           reduce using rule 46 (expression -> expression PLUS expression .)
    KMEL            reduce using rule 46 (expression -> expression PLUS expression .)
    ID              reduce using rule 46 (expression -> expression PLUS expression .)
    KTEB            reduce using rule 46 (expression -> expression PLUS expression .)
    (               reduce using rule 46 (expression -> expression PLUS expression .)
    INT             reduce using rule 46 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 46 (expression -> expression PLUS expression .)
    STRING          reduce using rule 46 (expression -> expression PLUS expression .)
    KHATE2          reduce using rule 46 (expression -> expression PLUS expression .)
    S7I7            reduce using rule 46 (expression -> expression PLUS expression .)
    WALO            reduce using rule 46 (expression -> expression PLUS expression .)
    JEREB           reduce using rule 46 (expression -> expression PLUS expression .)
    ILA             reduce using rule 46 (expression -> expression PLUS expression .)
    LKOLA           reduce using rule 46 (expression -> expression PLUS expression .)
    MA7ED           reduce using rule 46 (expression -> expression PLUS expression .)
    DIR             reduce using rule 46 (expression -> expression PLUS expression .)
    QRA             reduce using rule 46 (expression -> expression PLUS expression .)
    [               reduce using rule 46 (expression -> expression PLUS expression .)
    $end            reduce using rule 46 (expression -> expression PLUS expression .)
    )               reduce using rule 46 (expression -> expression PLUS expression .)
    ]               reduce using rule 46 (expression -> expression PLUS expression .)
    ,               reduce using rule 46 (expression -> expression PLUS expression .)
    }               reduce using rule 46 (expression -> expression PLUS expression .)
    ;               reduce using rule 46 (expression -> expression PLUS expression .)
    SUP             reduce using rule 46 (expression -> expression PLUS expression .)
    INF             reduce using rule 46 (expression -> expression PLUS expression .)
    EQUALSCOMP      reduce using rule 46 (expression -> expression PLUS expression .)
    SUPEQUALS       reduce using rule 46 (expression -> expression PLUS expression .)
    INFEQUALS       reduce using rule 46 (expression -> expression PLUS expression .)
    DIFFERENT       reduce using rule 46 (expression -> expression PLUS expression .)
    WA              reduce using rule 46 (expression -> expression PLUS expression .)
    AW              reduce using rule 46 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! TIMES           [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]


state 64

    (47) expression -> expression MINUS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 47 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 47 (expression -> expression MINUS expression .)
    KHREJ           reduce using rule 47 (expression -> expression MINUS expression .)
    KMEL            reduce using rule 47 (expression -> expression MINUS expression .)
    ID              reduce using rule 47 (expression -> expression MINUS expression .)
    KTEB            reduce using rule 47 (expression -> expression MINUS expression .)
    (               reduce using rule 47 (expression -> expression MINUS expression .)
    INT             reduce using rule 47 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 47 (expression -> expression MINUS expression .)
    STRING          reduce using rule 47 (expression -> expression MINUS expression .)
    KHATE2          reduce using rule 47 (expression -> expression MINUS expression .)
    S7I7            reduce using rule 47 (expression -> expression MINUS expression .)
    WALO            reduce using rule 47 (expression -> expression MINUS expression .)
    JEREB           reduce using rule 47 (expression -> expression MINUS expression .)
    ILA             reduce using rule 47 (expression -> expression MINUS expression .)
    LKOLA           reduce using rule 47 (expression -> expression MINUS expression .)
    MA7ED           reduce using rule 47 (expression -> expression MINUS expression .)
    DIR             reduce using rule 47 (expression -> expression MINUS expression .)
    QRA             reduce using rule 47 (expression -> expression MINUS expression .)
    [               reduce using rule 47 (expression -> expression MINUS expression .)
    $end            reduce using rule 47 (expression -> expression MINUS expression .)
    )               reduce using rule 47 (expression -> expression MINUS expression .)
    ]               reduce using rule 47 (expression -> expression MINUS expression .)
    ,               reduce using rule 47 (expression -> expression MINUS expression .)
    }               reduce using rule 47 (expression -> expression MINUS expression .)
    ;               reduce using rule 47 (expression -> expression MINUS expression .)
    SUP             reduce using rule 47 (expression -> expression MINUS expression .)
    INF             reduce using rule 47 (expression -> expression MINUS expression .)
    EQUALSCOMP      reduce using rule 47 (expression -> expression MINUS expression .)
    SUPEQUALS       reduce using rule 47 (expression -> expression MINUS expression .)
    INFEQUALS       reduce using rule 47 (expression -> expression MINUS expression .)
    DIFFERENT       reduce using rule 47 (expression -> expression MINUS expression .)
    WA              reduce using rule 47 (expression -> expression MINUS expression .)
    AW              reduce using rule 47 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! TIMES           [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]


state 65

    (48) expression -> expression TIMES expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 48 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 48 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 48 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 48 (expression -> expression TIMES expression .)
    KHREJ           reduce using rule 48 (expression -> expression TIMES expression .)
    KMEL            reduce using rule 48 (expression -> expression TIMES expression .)
    ID              reduce using rule 48 (expression -> expression TIMES expression .)
    KTEB            reduce using rule 48 (expression -> expression TIMES expression .)
    (               reduce using rule 48 (expression -> expression TIMES expression .)
    INT             reduce using rule 48 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 48 (expression -> expression TIMES expression .)
    STRING          reduce using rule 48 (expression -> expression TIMES expression .)
    KHATE2          reduce using rule 48 (expression -> expression TIMES expression .)
    S7I7            reduce using rule 48 (expression -> expression TIMES expression .)
    WALO            reduce using rule 48 (expression -> expression TIMES expression .)
    JEREB           reduce using rule 48 (expression -> expression TIMES expression .)
    ILA             reduce using rule 48 (expression -> expression TIMES expression .)
    LKOLA           reduce using rule 48 (expression -> expression TIMES expression .)
    MA7ED           reduce using rule 48 (expression -> expression TIMES expression .)
    DIR             reduce using rule 48 (expression -> expression TIMES expression .)
    QRA             reduce using rule 48 (expression -> expression TIMES expression .)
    [               reduce using rule 48 (expression -> expression TIMES expression .)
    $end            reduce using rule 48 (expression -> expression TIMES expression .)
    )               reduce using rule 48 (expression -> expression TIMES expression .)
    ]               reduce using rule 48 (expression -> expression TIMES expression .)
    ,               reduce using rule 48 (expression -> expression TIMES expression .)
    }               reduce using rule 48 (expression -> expression TIMES expression .)
    ;               reduce using rule 48 (expression -> expression TIMES expression .)
    SUP             reduce using rule 48 (expression -> expression TIMES expression .)
    INF             reduce using rule 48 (expression -> expression TIMES expression .)
    EQUALSCOMP      reduce using rule 48 (expression -> expression TIMES expression .)
    SUPEQUALS       reduce using rule 48 (expression -> expression TIMES expression .)
    INFEQUALS       reduce using rule 48 (expression -> expression TIMES expression .)
    DIFFERENT       reduce using rule 48 (expression -> expression TIMES expression .)
    WA              reduce using rule 48 (expression -> expression TIMES expression .)
    AW              reduce using rule 48 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]


state 66

    (49) expression -> expression DIVIDE expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 49 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 49 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 49 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 49 (expression -> expression DIVIDE expression .)
    KHREJ           reduce using rule 49 (expression -> expression DIVIDE expression .)
    KMEL            reduce using rule 49 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 49 (expression -> expression DIVIDE expression .)
    KTEB            reduce using rule 49 (expression -> expression DIVIDE expression .)
    (               reduce using rule 49 (expression -> expression DIVIDE expression .)
    INT             reduce using rule 49 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 49 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 49 (expression -> expression DIVIDE expression .)
    KHATE2          reduce using rule 49 (expression -> expression DIVIDE expression .)
    S7I7            reduce using rule 49 (expression -> expression DIVIDE expression .)
    WALO            reduce using rule 49 (expression -> expression DIVIDE expression .)
    JEREB           reduce using rule 49 (expression -> expression DIVIDE expression .)
    ILA             reduce using rule 49 (expression -> expression DIVIDE expression .)
    LKOLA           reduce using rule 49 (expression -> expression DIVIDE expression .)
    MA7ED           reduce using rule 49 (expression -> expression DIVIDE expression .)
    DIR             reduce using rule 49 (expression -> expression DIVIDE expression .)
    QRA             reduce using rule 49 (expression -> expression DIVIDE expression .)
    [               reduce using rule 49 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 49 (expression -> expression DIVIDE expression .)
    )               reduce using rule 49 (expression -> expression DIVIDE expression .)
    ]               reduce using rule 49 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 49 (expression -> expression DIVIDE expression .)
    }               reduce using rule 49 (expression -> expression DIVIDE expression .)
    ;               reduce using rule 49 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 49 (expression -> expression DIVIDE expression .)
    INF             reduce using rule 49 (expression -> expression DIVIDE expression .)
    EQUALSCOMP      reduce using rule 49 (expression -> expression DIVIDE expression .)
    SUPEQUALS       reduce using rule 49 (expression -> expression DIVIDE expression .)
    INFEQUALS       reduce using rule 49 (expression -> expression DIVIDE expression .)
    DIFFERENT       reduce using rule 49 (expression -> expression DIVIDE expression .)
    WA              reduce using rule 49 (expression -> expression DIVIDE expression .)
    AW              reduce using rule 49 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]


state 67

    (4) var_assign -> ID EQUALS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KMEL            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ID              reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KTEB            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    (               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    INT             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    FLOAT           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    STRING          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    KHATE2          reduce using rule 4 (var_assign -> ID EQUALS expression .)
    S7I7            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    WALO            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    JEREB           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ILA             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    LKOLA           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    MA7ED           reduce using rule 4 (var_assign -> ID EQUALS expression .)
    DIR             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    QRA             reduce using rule 4 (var_assign -> ID EQUALS expression .)
    [               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    $end            reduce using rule 4 (var_assign -> ID EQUALS expression .)
    }               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    ;               reduce using rule 4 (var_assign -> ID EQUALS expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! MINUS           [ reduce using rule 4 (var_assign -> ID EQUALS expression .) ]
  ! PLUS            [ reduce using rule 4 (var_assign -> ID EQUALS expression .) ]


state 68

    (5) var_assign -> ID EQUALS input .

    KHREJ           reduce using rule 5 (var_assign -> ID EQUALS input .)
    KMEL            reduce using rule 5 (var_assign -> ID EQUALS input .)
    ID              reduce using rule 5 (var_assign -> ID EQUALS input .)
    KTEB            reduce using rule 5 (var_assign -> ID EQUALS input .)
    (               reduce using rule 5 (var_assign -> ID EQUALS input .)
    MINUS           reduce using rule 5 (var_assign -> ID EQUALS input .)
    PLUS            reduce using rule 5 (var_assign -> ID EQUALS input .)
    INT             reduce using rule 5 (var_assign -> ID EQUALS input .)
    FLOAT           reduce using rule 5 (var_assign -> ID EQUALS input .)
    STRING          reduce using rule 5 (var_assign -> ID EQUALS input .)
    KHATE2          reduce using rule 5 (var_assign -> ID EQUALS input .)
    S7I7            reduce using rule 5 (var_assign -> ID EQUALS input .)
    WALO            reduce using rule 5 (var_assign -> ID EQUALS input .)
    JEREB           reduce using rule 5 (var_assign -> ID EQUALS input .)
    ILA             reduce using rule 5 (var_assign -> ID EQUALS input .)
    LKOLA           reduce using rule 5 (var_assign -> ID EQUALS input .)
    MA7ED           reduce using rule 5 (var_assign -> ID EQUALS input .)
    DIR             reduce using rule 5 (var_assign -> ID EQUALS input .)
    QRA             reduce using rule 5 (var_assign -> ID EQUALS input .)
    [               reduce using rule 5 (var_assign -> ID EQUALS input .)
    $end            reduce using rule 5 (var_assign -> ID EQUALS input .)
    }               reduce using rule 5 (var_assign -> ID EQUALS input .)
    ;               reduce using rule 5 (var_assign -> ID EQUALS input .)


state 69

    (71) dimensions -> dimensions [ . expression ]
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 90
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 70

    (70) dimensions -> [ expression . ]
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    ]               shift and go to state 91
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 71

    (6) var_assign -> arrayelt EQUALS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    KHREJ           reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    KMEL            reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    ID              reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    KTEB            reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    (               reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    INT             reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    FLOAT           reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    STRING          reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    KHATE2          reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    S7I7            reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    WALO            reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    JEREB           reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    ILA             reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    LKOLA           reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    MA7ED           reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    DIR             reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    QRA             reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    [               reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    $end            reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    }               reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    ;               reduce using rule 6 (var_assign -> arrayelt EQUALS expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! MINUS           [ reduce using rule 6 (var_assign -> arrayelt EQUALS expression .) ]
  ! PLUS            [ reduce using rule 6 (var_assign -> arrayelt EQUALS expression .) ]


state 72

    (31) condition -> ( . condition ) AW ( condition )
    (32) condition -> ( . condition ) WA ( condition )
    (35) condition -> ( . condition ) WA condition
    (36) condition -> ( . condition ) AW condition
    (50) expression -> ( . expression )
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 72
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 92
    expression                     shift and go to state 93
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 73

    (72) printing -> KTEB ( condition . )
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               shift and go to state 94
    WA              shift and go to state 95
    AW              shift and go to state 96


state 74

    (73) printing -> KTEB ( incrementation . )

    )               shift and go to state 97


state 75

    (74) printing -> KTEB ( decrementation . )

    )               shift and go to state 98


state 76

    (39) condition -> expression . SUP expression
    (40) condition -> expression . INF expression
    (41) condition -> expression . EQUALSCOMP expression
    (42) condition -> expression . SUPEQUALS expression
    (43) condition -> expression . INFEQUALS expression
    (44) condition -> expression . DIFFERENT expression
    (45) condition -> expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    SUP             shift and go to state 99
    INF             shift and go to state 100
    EQUALSCOMP      shift and go to state 101
    SUPEQUALS       shift and go to state 102
    INFEQUALS       shift and go to state 103
    DIFFERENT       shift and go to state 104
    )               reduce using rule 45 (condition -> expression .)
    WA              reduce using rule 45 (condition -> expression .)
    AW              reduce using rule 45 (condition -> expression .)
    ;               reduce using rule 45 (condition -> expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 77

    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION
    (53) expression -> ID .
    (69) arrayelt -> ID . dimensions
    (70) dimensions -> . [ expression ]
    (71) dimensions -> . dimensions [ expression ]

    INCREMENTATION  shift and go to state 44
    DECREMENTATION  shift and go to state 45
    SUP             reduce using rule 53 (expression -> ID .)
    INF             reduce using rule 53 (expression -> ID .)
    EQUALSCOMP      reduce using rule 53 (expression -> ID .)
    SUPEQUALS       reduce using rule 53 (expression -> ID .)
    INFEQUALS       reduce using rule 53 (expression -> ID .)
    DIFFERENT       reduce using rule 53 (expression -> ID .)
    PLUS            reduce using rule 53 (expression -> ID .)
    MINUS           reduce using rule 53 (expression -> ID .)
    TIMES           reduce using rule 53 (expression -> ID .)
    DIVIDE          reduce using rule 53 (expression -> ID .)
    )               reduce using rule 53 (expression -> ID .)
    WA              reduce using rule 53 (expression -> ID .)
    AW              reduce using rule 53 (expression -> ID .)
    [               shift and go to state 47

    dimensions                     shift and go to state 46

state 78

    (50) expression -> ( expression ) .

    PLUS            reduce using rule 50 (expression -> ( expression ) .)
    MINUS           reduce using rule 50 (expression -> ( expression ) .)
    TIMES           reduce using rule 50 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 50 (expression -> ( expression ) .)
    KHREJ           reduce using rule 50 (expression -> ( expression ) .)
    KMEL            reduce using rule 50 (expression -> ( expression ) .)
    ID              reduce using rule 50 (expression -> ( expression ) .)
    KTEB            reduce using rule 50 (expression -> ( expression ) .)
    (               reduce using rule 50 (expression -> ( expression ) .)
    INT             reduce using rule 50 (expression -> ( expression ) .)
    FLOAT           reduce using rule 50 (expression -> ( expression ) .)
    STRING          reduce using rule 50 (expression -> ( expression ) .)
    KHATE2          reduce using rule 50 (expression -> ( expression ) .)
    S7I7            reduce using rule 50 (expression -> ( expression ) .)
    WALO            reduce using rule 50 (expression -> ( expression ) .)
    JEREB           reduce using rule 50 (expression -> ( expression ) .)
    ILA             reduce using rule 50 (expression -> ( expression ) .)
    LKOLA           reduce using rule 50 (expression -> ( expression ) .)
    MA7ED           reduce using rule 50 (expression -> ( expression ) .)
    DIR             reduce using rule 50 (expression -> ( expression ) .)
    QRA             reduce using rule 50 (expression -> ( expression ) .)
    [               reduce using rule 50 (expression -> ( expression ) .)
    $end            reduce using rule 50 (expression -> ( expression ) .)
    )               reduce using rule 50 (expression -> ( expression ) .)
    ]               reduce using rule 50 (expression -> ( expression ) .)
    ,               reduce using rule 50 (expression -> ( expression ) .)
    }               reduce using rule 50 (expression -> ( expression ) .)
    ;               reduce using rule 50 (expression -> ( expression ) .)
    SUP             reduce using rule 50 (expression -> ( expression ) .)
    INF             reduce using rule 50 (expression -> ( expression ) .)
    EQUALSCOMP      reduce using rule 50 (expression -> ( expression ) .)
    SUPEQUALS       reduce using rule 50 (expression -> ( expression ) .)
    INFEQUALS       reduce using rule 50 (expression -> ( expression ) .)
    DIFFERENT       reduce using rule 50 (expression -> ( expression ) .)
    WA              reduce using rule 50 (expression -> ( expression ) .)
    AW              reduce using rule 50 (expression -> ( expression ) .)


state 79

    (56) try -> JEREB { instruction_list . } MASD9CH { instruction_list }
    (57) try -> JEREB { instruction_list . } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (30) instruction_list -> instruction_list . instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 105
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    [               shift and go to state 37

  ! }               [ reduce using rule 75 (empty -> .) ]
  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction                    shift and go to state 38
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 80

    (7) if -> ILA ( condition . ) { instruction_list }
    (8) if -> ILA ( condition . ) { instruction_list } WLA { instruction_list }
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               shift and go to state 106
    WA              shift and go to state 95
    AW              shift and go to state 96


state 81

    (9) for -> LKOLA ( var_assign . ; condition ; incrementation ) { instruction_list }
    (10) for -> LKOLA ( var_assign . ; condition ; decrementation ) { instruction_list }

    ;               shift and go to state 107


state 82

    (11) for -> LKOLA ( expression . ; condition ; incrementation ) { instruction_list }
    (12) for -> LKOLA ( expression . ; condition ; decrementation ) { instruction_list }
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    ;               shift and go to state 108
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 83

    (4) var_assign -> ID . EQUALS expression
    (5) var_assign -> ID . EQUALS input
    (53) expression -> ID .
    (69) arrayelt -> ID . dimensions
    (70) dimensions -> . [ expression ]
    (71) dimensions -> . dimensions [ expression ]

    EQUALS          shift and go to state 43
    ;               reduce using rule 53 (expression -> ID .)
    PLUS            reduce using rule 53 (expression -> ID .)
    MINUS           reduce using rule 53 (expression -> ID .)
    TIMES           reduce using rule 53 (expression -> ID .)
    DIVIDE          reduce using rule 53 (expression -> ID .)
    [               shift and go to state 47

    dimensions                     shift and go to state 46

state 84

    (13) while -> MA7ED ( condition . ) { instruction_list }
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               shift and go to state 109
    WA              shift and go to state 95
    AW              shift and go to state 96


state 85

    (14) doWhile -> DIR { instruction_list . } MA7ED ( condition )
    (30) instruction_list -> instruction_list . instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 110
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    [               shift and go to state 37

  ! }               [ reduce using rule 75 (empty -> .) ]
  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction                    shift and go to state 38
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 86

    (54) input -> QRA ( expression . )
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    )               shift and go to state 111
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 87

    (55) input -> QRA ( ) .

    KHREJ           reduce using rule 55 (input -> QRA ( ) .)
    KMEL            reduce using rule 55 (input -> QRA ( ) .)
    ID              reduce using rule 55 (input -> QRA ( ) .)
    KTEB            reduce using rule 55 (input -> QRA ( ) .)
    (               reduce using rule 55 (input -> QRA ( ) .)
    MINUS           reduce using rule 55 (input -> QRA ( ) .)
    PLUS            reduce using rule 55 (input -> QRA ( ) .)
    INT             reduce using rule 55 (input -> QRA ( ) .)
    FLOAT           reduce using rule 55 (input -> QRA ( ) .)
    STRING          reduce using rule 55 (input -> QRA ( ) .)
    KHATE2          reduce using rule 55 (input -> QRA ( ) .)
    S7I7            reduce using rule 55 (input -> QRA ( ) .)
    WALO            reduce using rule 55 (input -> QRA ( ) .)
    JEREB           reduce using rule 55 (input -> QRA ( ) .)
    ILA             reduce using rule 55 (input -> QRA ( ) .)
    LKOLA           reduce using rule 55 (input -> QRA ( ) .)
    MA7ED           reduce using rule 55 (input -> QRA ( ) .)
    DIR             reduce using rule 55 (input -> QRA ( ) .)
    QRA             reduce using rule 55 (input -> QRA ( ) .)
    [               reduce using rule 55 (input -> QRA ( ) .)
    $end            reduce using rule 55 (input -> QRA ( ) .)
    }               reduce using rule 55 (input -> QRA ( ) .)
    ;               reduce using rule 55 (input -> QRA ( ) .)


state 88

    (68) array -> [ arraylist ] .

    PLUS            reduce using rule 68 (array -> [ arraylist ] .)
    MINUS           reduce using rule 68 (array -> [ arraylist ] .)
    TIMES           reduce using rule 68 (array -> [ arraylist ] .)
    DIVIDE          reduce using rule 68 (array -> [ arraylist ] .)
    KHREJ           reduce using rule 68 (array -> [ arraylist ] .)
    KMEL            reduce using rule 68 (array -> [ arraylist ] .)
    ID              reduce using rule 68 (array -> [ arraylist ] .)
    KTEB            reduce using rule 68 (array -> [ arraylist ] .)
    (               reduce using rule 68 (array -> [ arraylist ] .)
    INT             reduce using rule 68 (array -> [ arraylist ] .)
    FLOAT           reduce using rule 68 (array -> [ arraylist ] .)
    STRING          reduce using rule 68 (array -> [ arraylist ] .)
    KHATE2          reduce using rule 68 (array -> [ arraylist ] .)
    S7I7            reduce using rule 68 (array -> [ arraylist ] .)
    WALO            reduce using rule 68 (array -> [ arraylist ] .)
    JEREB           reduce using rule 68 (array -> [ arraylist ] .)
    ILA             reduce using rule 68 (array -> [ arraylist ] .)
    LKOLA           reduce using rule 68 (array -> [ arraylist ] .)
    MA7ED           reduce using rule 68 (array -> [ arraylist ] .)
    DIR             reduce using rule 68 (array -> [ arraylist ] .)
    QRA             reduce using rule 68 (array -> [ arraylist ] .)
    [               reduce using rule 68 (array -> [ arraylist ] .)
    $end            reduce using rule 68 (array -> [ arraylist ] .)
    )               reduce using rule 68 (array -> [ arraylist ] .)
    ]               reduce using rule 68 (array -> [ arraylist ] .)
    ,               reduce using rule 68 (array -> [ arraylist ] .)
    }               reduce using rule 68 (array -> [ arraylist ] .)
    ;               reduce using rule 68 (array -> [ arraylist ] .)
    SUP             reduce using rule 68 (array -> [ arraylist ] .)
    INF             reduce using rule 68 (array -> [ arraylist ] .)
    EQUALSCOMP      reduce using rule 68 (array -> [ arraylist ] .)
    SUPEQUALS       reduce using rule 68 (array -> [ arraylist ] .)
    INFEQUALS       reduce using rule 68 (array -> [ arraylist ] .)
    DIFFERENT       reduce using rule 68 (array -> [ arraylist ] .)
    WA              reduce using rule 68 (array -> [ arraylist ] .)
    AW              reduce using rule 68 (array -> [ arraylist ] .)


state 89

    (67) arraylist -> arraylist , . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 112
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 90

    (71) dimensions -> dimensions [ expression . ]
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    ]               shift and go to state 113
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 91

    (70) dimensions -> [ expression ] .

    [               reduce using rule 70 (dimensions -> [ expression ] .)
    EQUALS          reduce using rule 70 (dimensions -> [ expression ] .)
    PLUS            reduce using rule 70 (dimensions -> [ expression ] .)
    MINUS           reduce using rule 70 (dimensions -> [ expression ] .)
    TIMES           reduce using rule 70 (dimensions -> [ expression ] .)
    DIVIDE          reduce using rule 70 (dimensions -> [ expression ] .)
    KHREJ           reduce using rule 70 (dimensions -> [ expression ] .)
    KMEL            reduce using rule 70 (dimensions -> [ expression ] .)
    ID              reduce using rule 70 (dimensions -> [ expression ] .)
    KTEB            reduce using rule 70 (dimensions -> [ expression ] .)
    (               reduce using rule 70 (dimensions -> [ expression ] .)
    INT             reduce using rule 70 (dimensions -> [ expression ] .)
    FLOAT           reduce using rule 70 (dimensions -> [ expression ] .)
    STRING          reduce using rule 70 (dimensions -> [ expression ] .)
    KHATE2          reduce using rule 70 (dimensions -> [ expression ] .)
    S7I7            reduce using rule 70 (dimensions -> [ expression ] .)
    WALO            reduce using rule 70 (dimensions -> [ expression ] .)
    JEREB           reduce using rule 70 (dimensions -> [ expression ] .)
    ILA             reduce using rule 70 (dimensions -> [ expression ] .)
    LKOLA           reduce using rule 70 (dimensions -> [ expression ] .)
    MA7ED           reduce using rule 70 (dimensions -> [ expression ] .)
    DIR             reduce using rule 70 (dimensions -> [ expression ] .)
    QRA             reduce using rule 70 (dimensions -> [ expression ] .)
    $end            reduce using rule 70 (dimensions -> [ expression ] .)
    }               reduce using rule 70 (dimensions -> [ expression ] .)
    )               reduce using rule 70 (dimensions -> [ expression ] .)
    ]               reduce using rule 70 (dimensions -> [ expression ] .)
    ,               reduce using rule 70 (dimensions -> [ expression ] .)
    ;               reduce using rule 70 (dimensions -> [ expression ] .)
    SUP             reduce using rule 70 (dimensions -> [ expression ] .)
    INF             reduce using rule 70 (dimensions -> [ expression ] .)
    EQUALSCOMP      reduce using rule 70 (dimensions -> [ expression ] .)
    SUPEQUALS       reduce using rule 70 (dimensions -> [ expression ] .)
    INFEQUALS       reduce using rule 70 (dimensions -> [ expression ] .)
    DIFFERENT       reduce using rule 70 (dimensions -> [ expression ] .)
    WA              reduce using rule 70 (dimensions -> [ expression ] .)
    AW              reduce using rule 70 (dimensions -> [ expression ] .)


state 92

    (31) condition -> ( condition . ) AW ( condition )
    (32) condition -> ( condition . ) WA ( condition )
    (35) condition -> ( condition . ) WA condition
    (36) condition -> ( condition . ) AW condition
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               shift and go to state 114
    WA              shift and go to state 95
    AW              shift and go to state 96


state 93

    (50) expression -> ( expression . )
    (39) condition -> expression . SUP expression
    (40) condition -> expression . INF expression
    (41) condition -> expression . EQUALSCOMP expression
    (42) condition -> expression . SUPEQUALS expression
    (43) condition -> expression . INFEQUALS expression
    (44) condition -> expression . DIFFERENT expression
    (45) condition -> expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 78
    SUP             shift and go to state 99
    INF             shift and go to state 100
    EQUALSCOMP      shift and go to state 101
    SUPEQUALS       shift and go to state 102
    INFEQUALS       shift and go to state 103
    DIFFERENT       shift and go to state 104
    WA              reduce using rule 45 (condition -> expression .)
    AW              reduce using rule 45 (condition -> expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! )               [ reduce using rule 45 (condition -> expression .) ]


state 94

    (72) printing -> KTEB ( condition ) .

    KHREJ           reduce using rule 72 (printing -> KTEB ( condition ) .)
    KMEL            reduce using rule 72 (printing -> KTEB ( condition ) .)
    ID              reduce using rule 72 (printing -> KTEB ( condition ) .)
    KTEB            reduce using rule 72 (printing -> KTEB ( condition ) .)
    (               reduce using rule 72 (printing -> KTEB ( condition ) .)
    MINUS           reduce using rule 72 (printing -> KTEB ( condition ) .)
    PLUS            reduce using rule 72 (printing -> KTEB ( condition ) .)
    INT             reduce using rule 72 (printing -> KTEB ( condition ) .)
    FLOAT           reduce using rule 72 (printing -> KTEB ( condition ) .)
    STRING          reduce using rule 72 (printing -> KTEB ( condition ) .)
    KHATE2          reduce using rule 72 (printing -> KTEB ( condition ) .)
    S7I7            reduce using rule 72 (printing -> KTEB ( condition ) .)
    WALO            reduce using rule 72 (printing -> KTEB ( condition ) .)
    JEREB           reduce using rule 72 (printing -> KTEB ( condition ) .)
    ILA             reduce using rule 72 (printing -> KTEB ( condition ) .)
    LKOLA           reduce using rule 72 (printing -> KTEB ( condition ) .)
    MA7ED           reduce using rule 72 (printing -> KTEB ( condition ) .)
    DIR             reduce using rule 72 (printing -> KTEB ( condition ) .)
    QRA             reduce using rule 72 (printing -> KTEB ( condition ) .)
    [               reduce using rule 72 (printing -> KTEB ( condition ) .)
    $end            reduce using rule 72 (printing -> KTEB ( condition ) .)
    }               reduce using rule 72 (printing -> KTEB ( condition ) .)


state 95

    (33) condition -> condition WA . ( condition )
    (37) condition -> condition WA . condition
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 116
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 115
    expression                     shift and go to state 76
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 96

    (34) condition -> condition AW . ( condition )
    (38) condition -> condition AW . condition
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 118
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 117
    expression                     shift and go to state 76
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 97

    (73) printing -> KTEB ( incrementation ) .

    KHREJ           reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    KMEL            reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    ID              reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    KTEB            reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    (               reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    MINUS           reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    PLUS            reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    INT             reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    FLOAT           reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    STRING          reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    KHATE2          reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    S7I7            reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    WALO            reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    JEREB           reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    ILA             reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    LKOLA           reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    MA7ED           reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    DIR             reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    QRA             reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    [               reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    $end            reduce using rule 73 (printing -> KTEB ( incrementation ) .)
    }               reduce using rule 73 (printing -> KTEB ( incrementation ) .)


state 98

    (74) printing -> KTEB ( decrementation ) .

    KHREJ           reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    KMEL            reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    ID              reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    KTEB            reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    (               reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    MINUS           reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    PLUS            reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    INT             reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    FLOAT           reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    STRING          reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    KHATE2          reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    S7I7            reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    WALO            reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    JEREB           reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    ILA             reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    LKOLA           reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    MA7ED           reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    DIR             reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    QRA             reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    [               reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    $end            reduce using rule 74 (printing -> KTEB ( decrementation ) .)
    }               reduce using rule 74 (printing -> KTEB ( decrementation ) .)


state 99

    (39) condition -> expression SUP . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 119
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 100

    (40) condition -> expression INF . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 120
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 101

    (41) condition -> expression EQUALSCOMP . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 121
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 102

    (42) condition -> expression SUPEQUALS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 122
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 103

    (43) condition -> expression INFEQUALS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 123
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 104

    (44) condition -> expression DIFFERENT . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 124
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 105

    (56) try -> JEREB { instruction_list } . MASD9CH { instruction_list }
    (57) try -> JEREB { instruction_list } . MASD9CH { instruction_list } AKHIRAN { instruction_list }

    MASD9CH         shift and go to state 125


state 106

    (7) if -> ILA ( condition ) . { instruction_list }
    (8) if -> ILA ( condition ) . { instruction_list } WLA { instruction_list }

    {               shift and go to state 126


state 107

    (9) for -> LKOLA ( var_assign ; . condition ; incrementation ) { instruction_list }
    (10) for -> LKOLA ( var_assign ; . condition ; decrementation ) { instruction_list }
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 72
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 127
    expression                     shift and go to state 76
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 108

    (11) for -> LKOLA ( expression ; . condition ; incrementation ) { instruction_list }
    (12) for -> LKOLA ( expression ; . condition ; decrementation ) { instruction_list }
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 72
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    expression                     shift and go to state 76
    condition                      shift and go to state 128
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 109

    (13) while -> MA7ED ( condition ) . { instruction_list }

    {               shift and go to state 129


state 110

    (14) doWhile -> DIR { instruction_list } . MA7ED ( condition )

    MA7ED           shift and go to state 130


state 111

    (54) input -> QRA ( expression ) .

    KHREJ           reduce using rule 54 (input -> QRA ( expression ) .)
    KMEL            reduce using rule 54 (input -> QRA ( expression ) .)
    ID              reduce using rule 54 (input -> QRA ( expression ) .)
    KTEB            reduce using rule 54 (input -> QRA ( expression ) .)
    (               reduce using rule 54 (input -> QRA ( expression ) .)
    MINUS           reduce using rule 54 (input -> QRA ( expression ) .)
    PLUS            reduce using rule 54 (input -> QRA ( expression ) .)
    INT             reduce using rule 54 (input -> QRA ( expression ) .)
    FLOAT           reduce using rule 54 (input -> QRA ( expression ) .)
    STRING          reduce using rule 54 (input -> QRA ( expression ) .)
    KHATE2          reduce using rule 54 (input -> QRA ( expression ) .)
    S7I7            reduce using rule 54 (input -> QRA ( expression ) .)
    WALO            reduce using rule 54 (input -> QRA ( expression ) .)
    JEREB           reduce using rule 54 (input -> QRA ( expression ) .)
    ILA             reduce using rule 54 (input -> QRA ( expression ) .)
    LKOLA           reduce using rule 54 (input -> QRA ( expression ) .)
    MA7ED           reduce using rule 54 (input -> QRA ( expression ) .)
    DIR             reduce using rule 54 (input -> QRA ( expression ) .)
    QRA             reduce using rule 54 (input -> QRA ( expression ) .)
    [               reduce using rule 54 (input -> QRA ( expression ) .)
    $end            reduce using rule 54 (input -> QRA ( expression ) .)
    }               reduce using rule 54 (input -> QRA ( expression ) .)
    ;               reduce using rule 54 (input -> QRA ( expression ) .)


state 112

    (67) arraylist -> arraylist , expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    ]               reduce using rule 67 (arraylist -> arraylist , expression .)
    ,               reduce using rule 67 (arraylist -> arraylist , expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 113

    (71) dimensions -> dimensions [ expression ] .

    [               reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    EQUALS          reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    PLUS            reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    MINUS           reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    TIMES           reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    DIVIDE          reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    KHREJ           reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    KMEL            reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    ID              reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    KTEB            reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    (               reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    INT             reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    FLOAT           reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    STRING          reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    KHATE2          reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    S7I7            reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    WALO            reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    JEREB           reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    ILA             reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    LKOLA           reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    MA7ED           reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    DIR             reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    QRA             reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    $end            reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    }               reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    )               reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    ]               reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    ,               reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    ;               reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    SUP             reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    INF             reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    EQUALSCOMP      reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    SUPEQUALS       reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    INFEQUALS       reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    DIFFERENT       reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    WA              reduce using rule 71 (dimensions -> dimensions [ expression ] .)
    AW              reduce using rule 71 (dimensions -> dimensions [ expression ] .)


state 114

    (31) condition -> ( condition ) . AW ( condition )
    (32) condition -> ( condition ) . WA ( condition )
    (35) condition -> ( condition ) . WA condition
    (36) condition -> ( condition ) . AW condition

    AW              shift and go to state 131
    WA              shift and go to state 132


state 115

    (37) condition -> condition WA condition .
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               reduce using rule 37 (condition -> condition WA condition .)
    WA              reduce using rule 37 (condition -> condition WA condition .)
    AW              reduce using rule 37 (condition -> condition WA condition .)
    ;               reduce using rule 37 (condition -> condition WA condition .)

  ! WA              [ shift and go to state 95 ]
  ! AW              [ shift and go to state 96 ]


state 116

    (33) condition -> condition WA ( . condition )
    (31) condition -> ( . condition ) AW ( condition )
    (32) condition -> ( . condition ) WA ( condition )
    (35) condition -> ( . condition ) WA condition
    (36) condition -> ( . condition ) AW condition
    (50) expression -> ( . expression )
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 72
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 133
    expression                     shift and go to state 93
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 117

    (38) condition -> condition AW condition .
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               reduce using rule 38 (condition -> condition AW condition .)
    WA              reduce using rule 38 (condition -> condition AW condition .)
    AW              reduce using rule 38 (condition -> condition AW condition .)
    ;               reduce using rule 38 (condition -> condition AW condition .)

  ! WA              [ shift and go to state 95 ]
  ! AW              [ shift and go to state 96 ]


state 118

    (34) condition -> condition AW ( . condition )
    (31) condition -> ( . condition ) AW ( condition )
    (32) condition -> ( . condition ) WA ( condition )
    (35) condition -> ( . condition ) WA condition
    (36) condition -> ( . condition ) AW condition
    (50) expression -> ( . expression )
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 72
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 134
    expression                     shift and go to state 93
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 119

    (39) condition -> expression SUP expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    )               reduce using rule 39 (condition -> expression SUP expression .)
    WA              reduce using rule 39 (condition -> expression SUP expression .)
    AW              reduce using rule 39 (condition -> expression SUP expression .)
    ;               reduce using rule 39 (condition -> expression SUP expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 120

    (40) condition -> expression INF expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    )               reduce using rule 40 (condition -> expression INF expression .)
    WA              reduce using rule 40 (condition -> expression INF expression .)
    AW              reduce using rule 40 (condition -> expression INF expression .)
    ;               reduce using rule 40 (condition -> expression INF expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 121

    (41) condition -> expression EQUALSCOMP expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    )               reduce using rule 41 (condition -> expression EQUALSCOMP expression .)
    WA              reduce using rule 41 (condition -> expression EQUALSCOMP expression .)
    AW              reduce using rule 41 (condition -> expression EQUALSCOMP expression .)
    ;               reduce using rule 41 (condition -> expression EQUALSCOMP expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 122

    (42) condition -> expression SUPEQUALS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    )               reduce using rule 42 (condition -> expression SUPEQUALS expression .)
    WA              reduce using rule 42 (condition -> expression SUPEQUALS expression .)
    AW              reduce using rule 42 (condition -> expression SUPEQUALS expression .)
    ;               reduce using rule 42 (condition -> expression SUPEQUALS expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 123

    (43) condition -> expression INFEQUALS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    )               reduce using rule 43 (condition -> expression INFEQUALS expression .)
    WA              reduce using rule 43 (condition -> expression INFEQUALS expression .)
    AW              reduce using rule 43 (condition -> expression INFEQUALS expression .)
    ;               reduce using rule 43 (condition -> expression INFEQUALS expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 124

    (44) condition -> expression DIFFERENT expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression

    )               reduce using rule 44 (condition -> expression DIFFERENT expression .)
    WA              reduce using rule 44 (condition -> expression DIFFERENT expression .)
    AW              reduce using rule 44 (condition -> expression DIFFERENT expression .)
    ;               reduce using rule 44 (condition -> expression DIFFERENT expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 125

    (56) try -> JEREB { instruction_list } MASD9CH . { instruction_list }
    (57) try -> JEREB { instruction_list } MASD9CH . { instruction_list } AKHIRAN { instruction_list }

    {               shift and go to state 135


state 126

    (7) if -> ILA ( condition ) { . instruction_list }
    (8) if -> ILA ( condition ) { . instruction_list } WLA { instruction_list }
    (29) instruction_list -> . instruction
    (30) instruction_list -> . instruction_list instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    }               reduce using rule 75 (empty -> .)
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction_list               shift and go to state 136
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 127

    (9) for -> LKOLA ( var_assign ; condition . ; incrementation ) { instruction_list }
    (10) for -> LKOLA ( var_assign ; condition . ; decrementation ) { instruction_list }
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    ;               shift and go to state 137
    WA              shift and go to state 95
    AW              shift and go to state 96


state 128

    (11) for -> LKOLA ( expression ; condition . ; incrementation ) { instruction_list }
    (12) for -> LKOLA ( expression ; condition . ; decrementation ) { instruction_list }
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    ;               shift and go to state 138
    WA              shift and go to state 95
    AW              shift and go to state 96


state 129

    (13) while -> MA7ED ( condition ) { . instruction_list }
    (29) instruction_list -> . instruction
    (30) instruction_list -> . instruction_list instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    }               reduce using rule 75 (empty -> .)
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction_list               shift and go to state 139
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 130

    (14) doWhile -> DIR { instruction_list } MA7ED . ( condition )

    (               shift and go to state 140


state 131

    (31) condition -> ( condition ) AW . ( condition )
    (36) condition -> ( condition ) AW . condition
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 141
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 142
    expression                     shift and go to state 76
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 132

    (32) condition -> ( condition ) WA . ( condition )
    (35) condition -> ( condition ) WA . condition
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 143
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 144
    expression                     shift and go to state 76
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 133

    (33) condition -> condition WA ( condition . )
    (31) condition -> ( condition . ) AW ( condition )
    (32) condition -> ( condition . ) WA ( condition )
    (35) condition -> ( condition . ) WA condition
    (36) condition -> ( condition . ) AW condition
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               shift and go to state 145
    WA              shift and go to state 95
    AW              shift and go to state 96


state 134

    (34) condition -> condition AW ( condition . )
    (31) condition -> ( condition . ) AW ( condition )
    (32) condition -> ( condition . ) WA ( condition )
    (35) condition -> ( condition . ) WA condition
    (36) condition -> ( condition . ) AW condition
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               shift and go to state 146
    WA              shift and go to state 95
    AW              shift and go to state 96


state 135

    (56) try -> JEREB { instruction_list } MASD9CH { . instruction_list }
    (57) try -> JEREB { instruction_list } MASD9CH { . instruction_list } AKHIRAN { instruction_list }
    (29) instruction_list -> . instruction
    (30) instruction_list -> . instruction_list instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    }               reduce using rule 75 (empty -> .)
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction_list               shift and go to state 147
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 136

    (7) if -> ILA ( condition ) { instruction_list . }
    (8) if -> ILA ( condition ) { instruction_list . } WLA { instruction_list }
    (30) instruction_list -> instruction_list . instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 148
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    [               shift and go to state 37

  ! }               [ reduce using rule 75 (empty -> .) ]
  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction                    shift and go to state 38
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 137

    (9) for -> LKOLA ( var_assign ; condition ; . incrementation ) { instruction_list }
    (10) for -> LKOLA ( var_assign ; condition ; . decrementation ) { instruction_list }
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION

    ID              shift and go to state 151

    incrementation                 shift and go to state 149
    decrementation                 shift and go to state 150

state 138

    (11) for -> LKOLA ( expression ; condition ; . incrementation ) { instruction_list }
    (12) for -> LKOLA ( expression ; condition ; . decrementation ) { instruction_list }
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION

    ID              shift and go to state 151

    incrementation                 shift and go to state 152
    decrementation                 shift and go to state 153

state 139

    (13) while -> MA7ED ( condition ) { instruction_list . }
    (30) instruction_list -> instruction_list . instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 154
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    [               shift and go to state 37

  ! }               [ reduce using rule 75 (empty -> .) ]
  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction                    shift and go to state 38
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 140

    (14) doWhile -> DIR { instruction_list } MA7ED ( . condition )
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 72
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 155
    expression                     shift and go to state 76
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 141

    (31) condition -> ( condition ) AW ( . condition )
    (31) condition -> ( . condition ) AW ( condition )
    (32) condition -> ( . condition ) WA ( condition )
    (35) condition -> ( . condition ) WA condition
    (36) condition -> ( . condition ) AW condition
    (50) expression -> ( . expression )
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 72
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 156
    expression                     shift and go to state 93
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 142

    (36) condition -> ( condition ) AW condition .
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               reduce using rule 36 (condition -> ( condition ) AW condition .)
    WA              reduce using rule 36 (condition -> ( condition ) AW condition .)
    AW              reduce using rule 36 (condition -> ( condition ) AW condition .)
    ;               reduce using rule 36 (condition -> ( condition ) AW condition .)

  ! WA              [ shift and go to state 95 ]
  ! AW              [ shift and go to state 96 ]


state 143

    (32) condition -> ( condition ) WA ( . condition )
    (31) condition -> ( . condition ) AW ( condition )
    (32) condition -> ( . condition ) WA ( condition )
    (35) condition -> ( . condition ) WA condition
    (36) condition -> ( . condition ) AW condition
    (50) expression -> ( . expression )
    (31) condition -> . ( condition ) AW ( condition )
    (32) condition -> . ( condition ) WA ( condition )
    (33) condition -> . condition WA ( condition )
    (34) condition -> . condition AW ( condition )
    (35) condition -> . ( condition ) WA condition
    (36) condition -> . ( condition ) AW condition
    (37) condition -> . condition WA condition
    (38) condition -> . condition AW condition
    (39) condition -> . expression SUP expression
    (40) condition -> . expression INF expression
    (41) condition -> . expression EQUALSCOMP expression
    (42) condition -> . expression SUPEQUALS expression
    (43) condition -> . expression INFEQUALS expression
    (44) condition -> . expression DIFFERENT expression
    (45) condition -> . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (68) array -> . [ arraylist ]
    (69) arrayelt -> . ID dimensions

    (               shift and go to state 72
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    ID              shift and go to state 51
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    [               shift and go to state 37

    condition                      shift and go to state 157
    expression                     shift and go to state 93
    array                          shift and go to state 30
    arrayelt                       shift and go to state 52

state 144

    (35) condition -> ( condition ) WA condition .
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               reduce using rule 35 (condition -> ( condition ) WA condition .)
    WA              reduce using rule 35 (condition -> ( condition ) WA condition .)
    AW              reduce using rule 35 (condition -> ( condition ) WA condition .)
    ;               reduce using rule 35 (condition -> ( condition ) WA condition .)

  ! WA              [ shift and go to state 95 ]
  ! AW              [ shift and go to state 96 ]


state 145

    (33) condition -> condition WA ( condition ) .
    (31) condition -> ( condition ) . AW ( condition )
    (32) condition -> ( condition ) . WA ( condition )
    (35) condition -> ( condition ) . WA condition
    (36) condition -> ( condition ) . AW condition

    )               reduce using rule 33 (condition -> condition WA ( condition ) .)
    WA              reduce using rule 33 (condition -> condition WA ( condition ) .)
    AW              reduce using rule 33 (condition -> condition WA ( condition ) .)
    ;               reduce using rule 33 (condition -> condition WA ( condition ) .)

  ! AW              [ shift and go to state 131 ]
  ! WA              [ shift and go to state 132 ]


state 146

    (34) condition -> condition AW ( condition ) .
    (31) condition -> ( condition ) . AW ( condition )
    (32) condition -> ( condition ) . WA ( condition )
    (35) condition -> ( condition ) . WA condition
    (36) condition -> ( condition ) . AW condition

    )               reduce using rule 34 (condition -> condition AW ( condition ) .)
    WA              reduce using rule 34 (condition -> condition AW ( condition ) .)
    AW              reduce using rule 34 (condition -> condition AW ( condition ) .)
    ;               reduce using rule 34 (condition -> condition AW ( condition ) .)

  ! AW              [ shift and go to state 131 ]
  ! WA              [ shift and go to state 132 ]


state 147

    (56) try -> JEREB { instruction_list } MASD9CH { instruction_list . }
    (57) try -> JEREB { instruction_list } MASD9CH { instruction_list . } AKHIRAN { instruction_list }
    (30) instruction_list -> instruction_list . instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 158
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    [               shift and go to state 37

  ! }               [ reduce using rule 75 (empty -> .) ]
  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction                    shift and go to state 38
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 148

    (7) if -> ILA ( condition ) { instruction_list } .
    (8) if -> ILA ( condition ) { instruction_list } . WLA { instruction_list }

    KHREJ           reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    KMEL            reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    ID              reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    KTEB            reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    (               reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    MINUS           reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    PLUS            reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    INT             reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    FLOAT           reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    STRING          reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    KHATE2          reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    S7I7            reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    WALO            reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    JEREB           reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    ILA             reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    LKOLA           reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    MA7ED           reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    DIR             reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    QRA             reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    [               reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    $end            reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    }               reduce using rule 7 (if -> ILA ( condition ) { instruction_list } .)
    WLA             shift and go to state 159


state 149

    (9) for -> LKOLA ( var_assign ; condition ; incrementation . ) { instruction_list }

    )               shift and go to state 160


state 150

    (10) for -> LKOLA ( var_assign ; condition ; decrementation . ) { instruction_list }

    )               shift and go to state 161


state 151

    (2) incrementation -> ID . INCREMENTATION
    (3) decrementation -> ID . DECREMENTATION

    INCREMENTATION  shift and go to state 44
    DECREMENTATION  shift and go to state 45


state 152

    (11) for -> LKOLA ( expression ; condition ; incrementation . ) { instruction_list }

    )               shift and go to state 162


state 153

    (12) for -> LKOLA ( expression ; condition ; decrementation . ) { instruction_list }

    )               shift and go to state 163


state 154

    (13) while -> MA7ED ( condition ) { instruction_list } .

    KHREJ           reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    KMEL            reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    ID              reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    KTEB            reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    (               reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    MINUS           reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    PLUS            reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    INT             reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    FLOAT           reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    STRING          reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    KHATE2          reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    S7I7            reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    WALO            reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    JEREB           reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    ILA             reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    LKOLA           reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    MA7ED           reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    DIR             reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    QRA             reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    [               reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    $end            reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)
    }               reduce using rule 13 (while -> MA7ED ( condition ) { instruction_list } .)


state 155

    (14) doWhile -> DIR { instruction_list } MA7ED ( condition . )
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               shift and go to state 164
    WA              shift and go to state 95
    AW              shift and go to state 96


state 156

    (31) condition -> ( condition ) AW ( condition . )
    (31) condition -> ( condition . ) AW ( condition )
    (32) condition -> ( condition . ) WA ( condition )
    (35) condition -> ( condition . ) WA condition
    (36) condition -> ( condition . ) AW condition
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               shift and go to state 165
    WA              shift and go to state 95
    AW              shift and go to state 96


state 157

    (32) condition -> ( condition ) WA ( condition . )
    (31) condition -> ( condition . ) AW ( condition )
    (32) condition -> ( condition . ) WA ( condition )
    (35) condition -> ( condition . ) WA condition
    (36) condition -> ( condition . ) AW condition
    (33) condition -> condition . WA ( condition )
    (34) condition -> condition . AW ( condition )
    (37) condition -> condition . WA condition
    (38) condition -> condition . AW condition

    )               shift and go to state 166
    WA              shift and go to state 95
    AW              shift and go to state 96


state 158

    (56) try -> JEREB { instruction_list } MASD9CH { instruction_list } .
    (57) try -> JEREB { instruction_list } MASD9CH { instruction_list } . AKHIRAN { instruction_list }

    KHREJ           reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KMEL            reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    ID              reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KTEB            reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    (               reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MINUS           reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    PLUS            reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    INT             reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    FLOAT           reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    STRING          reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    KHATE2          reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    S7I7            reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    WALO            reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    JEREB           reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    ILA             reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    LKOLA           reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    MA7ED           reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    DIR             reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    QRA             reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    [               reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    $end            reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    }               reduce using rule 56 (try -> JEREB { instruction_list } MASD9CH { instruction_list } .)
    AKHIRAN         shift and go to state 167


state 159

    (8) if -> ILA ( condition ) { instruction_list } WLA . { instruction_list }

    {               shift and go to state 168


state 160

    (9) for -> LKOLA ( var_assign ; condition ; incrementation ) . { instruction_list }

    {               shift and go to state 169


state 161

    (10) for -> LKOLA ( var_assign ; condition ; decrementation ) . { instruction_list }

    {               shift and go to state 170


state 162

    (11) for -> LKOLA ( expression ; condition ; incrementation ) . { instruction_list }

    {               shift and go to state 171


state 163

    (12) for -> LKOLA ( expression ; condition ; decrementation ) . { instruction_list }

    {               shift and go to state 172


state 164

    (14) doWhile -> DIR { instruction_list } MA7ED ( condition ) .

    KHREJ           reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KMEL            reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    ID              reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KTEB            reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    (               reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MINUS           reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    PLUS            reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    INT             reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    FLOAT           reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    STRING          reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    KHATE2          reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    S7I7            reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    WALO            reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    JEREB           reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    ILA             reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    LKOLA           reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    MA7ED           reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    DIR             reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    QRA             reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    [               reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    $end            reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)
    }               reduce using rule 14 (doWhile -> DIR { instruction_list } MA7ED ( condition ) .)


state 165

    (31) condition -> ( condition ) AW ( condition ) .
    (31) condition -> ( condition ) . AW ( condition )
    (32) condition -> ( condition ) . WA ( condition )
    (35) condition -> ( condition ) . WA condition
    (36) condition -> ( condition ) . AW condition

    )               reduce using rule 31 (condition -> ( condition ) AW ( condition ) .)
    WA              reduce using rule 31 (condition -> ( condition ) AW ( condition ) .)
    AW              reduce using rule 31 (condition -> ( condition ) AW ( condition ) .)
    ;               reduce using rule 31 (condition -> ( condition ) AW ( condition ) .)

  ! AW              [ shift and go to state 131 ]
  ! WA              [ shift and go to state 132 ]


state 166

    (32) condition -> ( condition ) WA ( condition ) .
    (31) condition -> ( condition ) . AW ( condition )
    (32) condition -> ( condition ) . WA ( condition )
    (35) condition -> ( condition ) . WA condition
    (36) condition -> ( condition ) . AW condition

    )               reduce using rule 32 (condition -> ( condition ) WA ( condition ) .)
    WA              reduce using rule 32 (condition -> ( condition ) WA ( condition ) .)
    AW              reduce using rule 32 (condition -> ( condition ) WA ( condition ) .)
    ;               reduce using rule 32 (condition -> ( condition ) WA ( condition ) .)

  ! AW              [ shift and go to state 131 ]
  ! WA              [ shift and go to state 132 ]


state 167

    (57) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN . { instruction_list }

    {               shift and go to state 173


state 168

    (8) if -> ILA ( condition ) { instruction_list } WLA { . instruction_list }
    (29) instruction_list -> . instruction
    (30) instruction_list -> . instruction_list instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    }               reduce using rule 75 (empty -> .)
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction_list               shift and go to state 174
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 169

    (9) for -> LKOLA ( var_assign ; condition ; incrementation ) { . instruction_list }
    (29) instruction_list -> . instruction
    (30) instruction_list -> . instruction_list instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    }               reduce using rule 75 (empty -> .)
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    var_assign                     shift and go to state 4
    incrementation                 shift and go to state 6
    instruction_list               shift and go to state 175
    instruction                    shift and go to state 3
    printing                       shift and go to state 5
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 170

    (10) for -> LKOLA ( var_assign ; condition ; decrementation ) { . instruction_list }
    (29) instruction_list -> . instruction
    (30) instruction_list -> . instruction_list instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    }               reduce using rule 75 (empty -> .)
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    var_assign                     shift and go to state 4
    decrementation                 shift and go to state 7
    instruction_list               shift and go to state 176
    instruction                    shift and go to state 3
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 171

    (11) for -> LKOLA ( expression ; condition ; incrementation ) { . instruction_list }
    (29) instruction_list -> . instruction
    (30) instruction_list -> . instruction_list instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    }               reduce using rule 75 (empty -> .)
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    expression                     shift and go to state 8
    incrementation                 shift and go to state 6
    instruction_list               shift and go to state 177
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    decrementation                 shift and go to state 7
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 172

    (12) for -> LKOLA ( expression ; condition ; decrementation ) { . instruction_list }
    (29) instruction_list -> . instruction
    (30) instruction_list -> . instruction_list instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    }               reduce using rule 75 (empty -> .)
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    expression                     shift and go to state 8
    decrementation                 shift and go to state 7
    instruction_list               shift and go to state 178
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 173

    (57) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { . instruction_list }
    (29) instruction_list -> . instruction
    (30) instruction_list -> . instruction_list instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    }               reduce using rule 75 (empty -> .)
    [               shift and go to state 37

  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction_list               shift and go to state 179
    instruction                    shift and go to state 3
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 174

    (8) if -> ILA ( condition ) { instruction_list } WLA { instruction_list . }
    (30) instruction_list -> instruction_list . instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 180
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    [               shift and go to state 37

  ! }               [ reduce using rule 75 (empty -> .) ]
  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction                    shift and go to state 38
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 175

    (9) for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list . }
    (30) instruction_list -> instruction_list . instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 181
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    [               shift and go to state 37

  ! }               [ reduce using rule 75 (empty -> .) ]
  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    var_assign                     shift and go to state 4
    incrementation                 shift and go to state 6
    instruction                    shift and go to state 38
    printing                       shift and go to state 5
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 176

    (10) for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list . }
    (30) instruction_list -> instruction_list . instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 182
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    [               shift and go to state 37

  ! }               [ reduce using rule 75 (empty -> .) ]
  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    var_assign                     shift and go to state 4
    decrementation                 shift and go to state 7
    instruction                    shift and go to state 38
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 177

    (11) for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list . }
    (30) instruction_list -> instruction_list . instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 183
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    [               shift and go to state 37

  ! }               [ reduce using rule 75 (empty -> .) ]
  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    expression                     shift and go to state 8
    incrementation                 shift and go to state 6
    instruction                    shift and go to state 38
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    decrementation                 shift and go to state 7
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 178

    (12) for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list . }
    (30) instruction_list -> instruction_list . instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 184
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    [               shift and go to state 37

  ! }               [ reduce using rule 75 (empty -> .) ]
  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    expression                     shift and go to state 8
    decrementation                 shift and go to state 7
    instruction                    shift and go to state 38
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 179

    (57) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list . }
    (30) instruction_list -> instruction_list . instruction
    (15) instruction -> . var_assign
    (16) instruction -> . printing
    (17) instruction -> . incrementation
    (18) instruction -> . decrementation
    (19) instruction -> . expression
    (20) instruction -> . try
    (21) instruction -> . if
    (22) instruction -> . for
    (23) instruction -> . KHREJ
    (24) instruction -> . KMEL
    (25) instruction -> . while
    (26) instruction -> . doWhile
    (27) instruction -> . input
    (28) instruction -> . empty
    (4) var_assign -> . ID EQUALS expression
    (5) var_assign -> . ID EQUALS input
    (6) var_assign -> . arrayelt EQUALS expression
    (72) printing -> . KTEB ( condition )
    (73) printing -> . KTEB ( incrementation )
    (74) printing -> . KTEB ( decrementation )
    (2) incrementation -> . ID INCREMENTATION
    (3) decrementation -> . ID DECREMENTATION
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . ( expression )
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (53) expression -> . ID
    (58) expression -> . INT
    (59) expression -> . FLOAT
    (60) expression -> . STRING
    (61) expression -> . KHATE2
    (62) expression -> . S7I7
    (63) expression -> . WALO
    (64) expression -> . array
    (65) expression -> . arrayelt
    (56) try -> . JEREB { instruction_list } MASD9CH { instruction_list }
    (57) try -> . JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list }
    (7) if -> . ILA ( condition ) { instruction_list }
    (8) if -> . ILA ( condition ) { instruction_list } WLA { instruction_list }
    (9) for -> . LKOLA ( var_assign ; condition ; incrementation ) { instruction_list }
    (10) for -> . LKOLA ( var_assign ; condition ; decrementation ) { instruction_list }
    (11) for -> . LKOLA ( expression ; condition ; incrementation ) { instruction_list }
    (12) for -> . LKOLA ( expression ; condition ; decrementation ) { instruction_list }
    (13) while -> . MA7ED ( condition ) { instruction_list }
    (14) doWhile -> . DIR { instruction_list } MA7ED ( condition )
    (54) input -> . QRA ( expression )
    (55) input -> . QRA ( )
    (75) empty -> .
    (69) arrayelt -> . ID dimensions
    (68) array -> . [ arraylist ]

  ! shift/reduce conflict for } resolved as shift
  ! shift/reduce conflict for KHREJ resolved as shift
  ! shift/reduce conflict for KMEL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for KTEB resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KHATE2 resolved as shift
  ! shift/reduce conflict for S7I7 resolved as shift
  ! shift/reduce conflict for WALO resolved as shift
  ! shift/reduce conflict for JEREB resolved as shift
  ! shift/reduce conflict for ILA resolved as shift
  ! shift/reduce conflict for LKOLA resolved as shift
  ! shift/reduce conflict for MA7ED resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for QRA resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    }               shift and go to state 185
    KHREJ           shift and go to state 12
    KMEL            shift and go to state 13
    ID              shift and go to state 18
    KTEB            shift and go to state 20
    (               shift and go to state 21
    MINUS           shift and go to state 23
    PLUS            shift and go to state 22
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    KHATE2          shift and go to state 27
    S7I7            shift and go to state 28
    WALO            shift and go to state 29
    JEREB           shift and go to state 31
    ILA             shift and go to state 32
    LKOLA           shift and go to state 33
    MA7ED           shift and go to state 34
    DIR             shift and go to state 35
    QRA             shift and go to state 36
    [               shift and go to state 37

  ! }               [ reduce using rule 75 (empty -> .) ]
  ! KHREJ           [ reduce using rule 75 (empty -> .) ]
  ! KMEL            [ reduce using rule 75 (empty -> .) ]
  ! ID              [ reduce using rule 75 (empty -> .) ]
  ! KTEB            [ reduce using rule 75 (empty -> .) ]
  ! (               [ reduce using rule 75 (empty -> .) ]
  ! MINUS           [ reduce using rule 75 (empty -> .) ]
  ! PLUS            [ reduce using rule 75 (empty -> .) ]
  ! INT             [ reduce using rule 75 (empty -> .) ]
  ! FLOAT           [ reduce using rule 75 (empty -> .) ]
  ! STRING          [ reduce using rule 75 (empty -> .) ]
  ! KHATE2          [ reduce using rule 75 (empty -> .) ]
  ! S7I7            [ reduce using rule 75 (empty -> .) ]
  ! WALO            [ reduce using rule 75 (empty -> .) ]
  ! JEREB           [ reduce using rule 75 (empty -> .) ]
  ! ILA             [ reduce using rule 75 (empty -> .) ]
  ! LKOLA           [ reduce using rule 75 (empty -> .) ]
  ! MA7ED           [ reduce using rule 75 (empty -> .) ]
  ! DIR             [ reduce using rule 75 (empty -> .) ]
  ! QRA             [ reduce using rule 75 (empty -> .) ]
  ! [               [ reduce using rule 75 (empty -> .) ]

    instruction                    shift and go to state 38
    var_assign                     shift and go to state 4
    printing                       shift and go to state 5
    incrementation                 shift and go to state 6
    decrementation                 shift and go to state 7
    expression                     shift and go to state 8
    try                            shift and go to state 9
    if                             shift and go to state 10
    for                            shift and go to state 11
    while                          shift and go to state 14
    doWhile                        shift and go to state 15
    input                          shift and go to state 16
    empty                          shift and go to state 17
    arrayelt                       shift and go to state 19
    array                          shift and go to state 30

state 180

    (8) if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .

    KHREJ           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KMEL            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    ID              reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KTEB            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    (               reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MINUS           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    PLUS            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    INT             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    FLOAT           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    STRING          reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    KHATE2          reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    S7I7            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    WALO            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    JEREB           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    ILA             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    LKOLA           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    MA7ED           reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    DIR             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    QRA             reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    [               reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    $end            reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)
    }               reduce using rule 8 (if -> ILA ( condition ) { instruction_list } WLA { instruction_list } .)


state 181

    (9) for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .

    KHREJ           reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KMEL            reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    ID              reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KTEB            reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    (               reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MINUS           reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    PLUS            reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    INT             reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    FLOAT           reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    STRING          reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    KHATE2          reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    S7I7            reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    WALO            reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    JEREB           reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    ILA             reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    LKOLA           reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    MA7ED           reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    DIR             reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    QRA             reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    [               reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    $end            reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)
    }               reduce using rule 9 (for -> LKOLA ( var_assign ; condition ; incrementation ) { instruction_list } .)


state 182

    (10) for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .

    KHREJ           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KMEL            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    ID              reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KTEB            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    (               reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MINUS           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    PLUS            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    INT             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    FLOAT           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    STRING          reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    KHATE2          reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    S7I7            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    WALO            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    JEREB           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    ILA             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    LKOLA           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    MA7ED           reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    DIR             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    QRA             reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    [               reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    $end            reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)
    }               reduce using rule 10 (for -> LKOLA ( var_assign ; condition ; decrementation ) { instruction_list } .)


state 183

    (11) for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .

    KHREJ           reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KMEL            reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    ID              reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KTEB            reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    (               reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MINUS           reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    PLUS            reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    INT             reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    FLOAT           reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    STRING          reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    KHATE2          reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    S7I7            reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    WALO            reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    JEREB           reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    ILA             reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    LKOLA           reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    MA7ED           reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    DIR             reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    QRA             reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    [               reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    $end            reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)
    }               reduce using rule 11 (for -> LKOLA ( expression ; condition ; incrementation ) { instruction_list } .)


state 184

    (12) for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .

    KHREJ           reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KMEL            reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    ID              reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KTEB            reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    (               reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MINUS           reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    PLUS            reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    INT             reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    FLOAT           reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    STRING          reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    KHATE2          reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    S7I7            reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    WALO            reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    JEREB           reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    ILA             reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    LKOLA           reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    MA7ED           reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    DIR             reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    QRA             reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    [               reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    $end            reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)
    }               reduce using rule 12 (for -> LKOLA ( expression ; condition ; decrementation ) { instruction_list } .)


state 185

    (57) try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .

    KHREJ           reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KMEL            reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    ID              reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KTEB            reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    (               reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MINUS           reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    PLUS            reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    INT             reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    FLOAT           reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    STRING          reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    KHATE2          reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    S7I7            reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    WALO            reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    JEREB           reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    ILA             reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    LKOLA           reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    MA7ED           reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    DIR             reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    QRA             reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    [               reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    $end            reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)
    }               reduce using rule 57 (try -> JEREB { instruction_list } MASD9CH { instruction_list } AKHIRAN { instruction_list } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KHREJ in state 0 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 0 resolved as shift
WARNING: shift/reduce conflict for ( in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 0 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 0 resolved as shift
WARNING: shift/reduce conflict for WALO in state 0 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 0 resolved as shift
WARNING: shift/reduce conflict for ILA in state 0 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 0 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 0 resolved as shift
WARNING: shift/reduce conflict for DIR in state 0 resolved as shift
WARNING: shift/reduce conflict for QRA in state 0 resolved as shift
WARNING: shift/reduce conflict for [ in state 0 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 2 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 2 resolved as shift
WARNING: shift/reduce conflict for ( in state 2 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 2 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 2 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 2 resolved as shift
WARNING: shift/reduce conflict for WALO in state 2 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 2 resolved as shift
WARNING: shift/reduce conflict for ILA in state 2 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 2 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 2 resolved as shift
WARNING: shift/reduce conflict for DIR in state 2 resolved as shift
WARNING: shift/reduce conflict for QRA in state 2 resolved as shift
WARNING: shift/reduce conflict for [ in state 2 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 8 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 8 resolved as shift
WARNING: shift/reduce conflict for [ in state 18 resolved as shift
WARNING: shift/reduce conflict for [ in state 46 resolved as shift
WARNING: shift/reduce conflict for [ in state 51 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 55 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 55 resolved as shift
WARNING: shift/reduce conflict for ID in state 55 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 55 resolved as shift
WARNING: shift/reduce conflict for ( in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for INT in state 55 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING in state 55 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 55 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 55 resolved as shift
WARNING: shift/reduce conflict for WALO in state 55 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 55 resolved as shift
WARNING: shift/reduce conflict for ILA in state 55 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 55 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 55 resolved as shift
WARNING: shift/reduce conflict for DIR in state 55 resolved as shift
WARNING: shift/reduce conflict for QRA in state 55 resolved as shift
WARNING: shift/reduce conflict for [ in state 55 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 59 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 59 resolved as shift
WARNING: shift/reduce conflict for ID in state 59 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 59 resolved as shift
WARNING: shift/reduce conflict for ( in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for INT in state 59 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 59 resolved as shift
WARNING: shift/reduce conflict for STRING in state 59 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 59 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 59 resolved as shift
WARNING: shift/reduce conflict for WALO in state 59 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 59 resolved as shift
WARNING: shift/reduce conflict for ILA in state 59 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 59 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 59 resolved as shift
WARNING: shift/reduce conflict for DIR in state 59 resolved as shift
WARNING: shift/reduce conflict for QRA in state 59 resolved as shift
WARNING: shift/reduce conflict for [ in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for } in state 79 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 79 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 79 resolved as shift
WARNING: shift/reduce conflict for ID in state 79 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 79 resolved as shift
WARNING: shift/reduce conflict for ( in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for INT in state 79 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 79 resolved as shift
WARNING: shift/reduce conflict for STRING in state 79 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 79 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 79 resolved as shift
WARNING: shift/reduce conflict for WALO in state 79 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 79 resolved as shift
WARNING: shift/reduce conflict for ILA in state 79 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 79 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 79 resolved as shift
WARNING: shift/reduce conflict for DIR in state 79 resolved as shift
WARNING: shift/reduce conflict for QRA in state 79 resolved as shift
WARNING: shift/reduce conflict for [ in state 79 resolved as shift
WARNING: shift/reduce conflict for } in state 85 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 85 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 85 resolved as shift
WARNING: shift/reduce conflict for ID in state 85 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 85 resolved as shift
WARNING: shift/reduce conflict for ( in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for INT in state 85 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 85 resolved as shift
WARNING: shift/reduce conflict for STRING in state 85 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 85 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 85 resolved as shift
WARNING: shift/reduce conflict for WALO in state 85 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 85 resolved as shift
WARNING: shift/reduce conflict for ILA in state 85 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 85 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 85 resolved as shift
WARNING: shift/reduce conflict for DIR in state 85 resolved as shift
WARNING: shift/reduce conflict for QRA in state 85 resolved as shift
WARNING: shift/reduce conflict for [ in state 85 resolved as shift
WARNING: shift/reduce conflict for ) in state 93 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 126 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 126 resolved as shift
WARNING: shift/reduce conflict for ID in state 126 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 126 resolved as shift
WARNING: shift/reduce conflict for ( in state 126 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 126 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 126 resolved as shift
WARNING: shift/reduce conflict for INT in state 126 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 126 resolved as shift
WARNING: shift/reduce conflict for STRING in state 126 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 126 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 126 resolved as shift
WARNING: shift/reduce conflict for WALO in state 126 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 126 resolved as shift
WARNING: shift/reduce conflict for ILA in state 126 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 126 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 126 resolved as shift
WARNING: shift/reduce conflict for DIR in state 126 resolved as shift
WARNING: shift/reduce conflict for QRA in state 126 resolved as shift
WARNING: shift/reduce conflict for [ in state 126 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 129 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 129 resolved as shift
WARNING: shift/reduce conflict for ID in state 129 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 129 resolved as shift
WARNING: shift/reduce conflict for ( in state 129 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 129 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 129 resolved as shift
WARNING: shift/reduce conflict for INT in state 129 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 129 resolved as shift
WARNING: shift/reduce conflict for STRING in state 129 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 129 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 129 resolved as shift
WARNING: shift/reduce conflict for WALO in state 129 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 129 resolved as shift
WARNING: shift/reduce conflict for ILA in state 129 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 129 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 129 resolved as shift
WARNING: shift/reduce conflict for DIR in state 129 resolved as shift
WARNING: shift/reduce conflict for QRA in state 129 resolved as shift
WARNING: shift/reduce conflict for [ in state 129 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 135 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 135 resolved as shift
WARNING: shift/reduce conflict for ID in state 135 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 135 resolved as shift
WARNING: shift/reduce conflict for ( in state 135 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 135 resolved as shift
WARNING: shift/reduce conflict for INT in state 135 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 135 resolved as shift
WARNING: shift/reduce conflict for STRING in state 135 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 135 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 135 resolved as shift
WARNING: shift/reduce conflict for WALO in state 135 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 135 resolved as shift
WARNING: shift/reduce conflict for ILA in state 135 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 135 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 135 resolved as shift
WARNING: shift/reduce conflict for DIR in state 135 resolved as shift
WARNING: shift/reduce conflict for QRA in state 135 resolved as shift
WARNING: shift/reduce conflict for [ in state 135 resolved as shift
WARNING: shift/reduce conflict for } in state 136 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 136 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 136 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 136 resolved as shift
WARNING: shift/reduce conflict for ( in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for INT in state 136 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 136 resolved as shift
WARNING: shift/reduce conflict for STRING in state 136 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 136 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 136 resolved as shift
WARNING: shift/reduce conflict for WALO in state 136 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 136 resolved as shift
WARNING: shift/reduce conflict for ILA in state 136 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 136 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 136 resolved as shift
WARNING: shift/reduce conflict for DIR in state 136 resolved as shift
WARNING: shift/reduce conflict for QRA in state 136 resolved as shift
WARNING: shift/reduce conflict for [ in state 136 resolved as shift
WARNING: shift/reduce conflict for } in state 139 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 139 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 139 resolved as shift
WARNING: shift/reduce conflict for ID in state 139 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 139 resolved as shift
WARNING: shift/reduce conflict for ( in state 139 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 139 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 139 resolved as shift
WARNING: shift/reduce conflict for INT in state 139 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 139 resolved as shift
WARNING: shift/reduce conflict for STRING in state 139 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 139 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 139 resolved as shift
WARNING: shift/reduce conflict for WALO in state 139 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 139 resolved as shift
WARNING: shift/reduce conflict for ILA in state 139 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 139 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 139 resolved as shift
WARNING: shift/reduce conflict for DIR in state 139 resolved as shift
WARNING: shift/reduce conflict for QRA in state 139 resolved as shift
WARNING: shift/reduce conflict for [ in state 139 resolved as shift
WARNING: shift/reduce conflict for } in state 147 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 147 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 147 resolved as shift
WARNING: shift/reduce conflict for ID in state 147 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 147 resolved as shift
WARNING: shift/reduce conflict for ( in state 147 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for INT in state 147 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 147 resolved as shift
WARNING: shift/reduce conflict for STRING in state 147 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 147 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 147 resolved as shift
WARNING: shift/reduce conflict for WALO in state 147 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 147 resolved as shift
WARNING: shift/reduce conflict for ILA in state 147 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 147 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 147 resolved as shift
WARNING: shift/reduce conflict for DIR in state 147 resolved as shift
WARNING: shift/reduce conflict for QRA in state 147 resolved as shift
WARNING: shift/reduce conflict for [ in state 147 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 168 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 168 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 168 resolved as shift
WARNING: shift/reduce conflict for ( in state 168 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 168 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 168 resolved as shift
WARNING: shift/reduce conflict for INT in state 168 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 168 resolved as shift
WARNING: shift/reduce conflict for STRING in state 168 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 168 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 168 resolved as shift
WARNING: shift/reduce conflict for WALO in state 168 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 168 resolved as shift
WARNING: shift/reduce conflict for ILA in state 168 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 168 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 168 resolved as shift
WARNING: shift/reduce conflict for DIR in state 168 resolved as shift
WARNING: shift/reduce conflict for QRA in state 168 resolved as shift
WARNING: shift/reduce conflict for [ in state 168 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 169 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 169 resolved as shift
WARNING: shift/reduce conflict for ID in state 169 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 169 resolved as shift
WARNING: shift/reduce conflict for ( in state 169 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 169 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 169 resolved as shift
WARNING: shift/reduce conflict for INT in state 169 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 169 resolved as shift
WARNING: shift/reduce conflict for STRING in state 169 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 169 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 169 resolved as shift
WARNING: shift/reduce conflict for WALO in state 169 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 169 resolved as shift
WARNING: shift/reduce conflict for ILA in state 169 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 169 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 169 resolved as shift
WARNING: shift/reduce conflict for DIR in state 169 resolved as shift
WARNING: shift/reduce conflict for QRA in state 169 resolved as shift
WARNING: shift/reduce conflict for [ in state 169 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 170 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 170 resolved as shift
WARNING: shift/reduce conflict for ID in state 170 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 170 resolved as shift
WARNING: shift/reduce conflict for ( in state 170 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 170 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 170 resolved as shift
WARNING: shift/reduce conflict for INT in state 170 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 170 resolved as shift
WARNING: shift/reduce conflict for STRING in state 170 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 170 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 170 resolved as shift
WARNING: shift/reduce conflict for WALO in state 170 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 170 resolved as shift
WARNING: shift/reduce conflict for ILA in state 170 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 170 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 170 resolved as shift
WARNING: shift/reduce conflict for DIR in state 170 resolved as shift
WARNING: shift/reduce conflict for QRA in state 170 resolved as shift
WARNING: shift/reduce conflict for [ in state 170 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 171 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 171 resolved as shift
WARNING: shift/reduce conflict for ID in state 171 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 171 resolved as shift
WARNING: shift/reduce conflict for ( in state 171 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 171 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 171 resolved as shift
WARNING: shift/reduce conflict for INT in state 171 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 171 resolved as shift
WARNING: shift/reduce conflict for STRING in state 171 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 171 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 171 resolved as shift
WARNING: shift/reduce conflict for WALO in state 171 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 171 resolved as shift
WARNING: shift/reduce conflict for ILA in state 171 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 171 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 171 resolved as shift
WARNING: shift/reduce conflict for DIR in state 171 resolved as shift
WARNING: shift/reduce conflict for QRA in state 171 resolved as shift
WARNING: shift/reduce conflict for [ in state 171 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 172 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 172 resolved as shift
WARNING: shift/reduce conflict for ID in state 172 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 172 resolved as shift
WARNING: shift/reduce conflict for ( in state 172 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 172 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 172 resolved as shift
WARNING: shift/reduce conflict for INT in state 172 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 172 resolved as shift
WARNING: shift/reduce conflict for STRING in state 172 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 172 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 172 resolved as shift
WARNING: shift/reduce conflict for WALO in state 172 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 172 resolved as shift
WARNING: shift/reduce conflict for ILA in state 172 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 172 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 172 resolved as shift
WARNING: shift/reduce conflict for DIR in state 172 resolved as shift
WARNING: shift/reduce conflict for QRA in state 172 resolved as shift
WARNING: shift/reduce conflict for [ in state 172 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 173 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 173 resolved as shift
WARNING: shift/reduce conflict for ID in state 173 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 173 resolved as shift
WARNING: shift/reduce conflict for ( in state 173 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 173 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 173 resolved as shift
WARNING: shift/reduce conflict for INT in state 173 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 173 resolved as shift
WARNING: shift/reduce conflict for STRING in state 173 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 173 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 173 resolved as shift
WARNING: shift/reduce conflict for WALO in state 173 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 173 resolved as shift
WARNING: shift/reduce conflict for ILA in state 173 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 173 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 173 resolved as shift
WARNING: shift/reduce conflict for DIR in state 173 resolved as shift
WARNING: shift/reduce conflict for QRA in state 173 resolved as shift
WARNING: shift/reduce conflict for [ in state 173 resolved as shift
WARNING: shift/reduce conflict for } in state 174 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 174 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 174 resolved as shift
WARNING: shift/reduce conflict for ID in state 174 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 174 resolved as shift
WARNING: shift/reduce conflict for ( in state 174 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 174 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 174 resolved as shift
WARNING: shift/reduce conflict for INT in state 174 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 174 resolved as shift
WARNING: shift/reduce conflict for STRING in state 174 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 174 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 174 resolved as shift
WARNING: shift/reduce conflict for WALO in state 174 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 174 resolved as shift
WARNING: shift/reduce conflict for ILA in state 174 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 174 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 174 resolved as shift
WARNING: shift/reduce conflict for DIR in state 174 resolved as shift
WARNING: shift/reduce conflict for QRA in state 174 resolved as shift
WARNING: shift/reduce conflict for [ in state 174 resolved as shift
WARNING: shift/reduce conflict for } in state 175 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 175 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 175 resolved as shift
WARNING: shift/reduce conflict for ID in state 175 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 175 resolved as shift
WARNING: shift/reduce conflict for ( in state 175 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 175 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 175 resolved as shift
WARNING: shift/reduce conflict for INT in state 175 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 175 resolved as shift
WARNING: shift/reduce conflict for STRING in state 175 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 175 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 175 resolved as shift
WARNING: shift/reduce conflict for WALO in state 175 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 175 resolved as shift
WARNING: shift/reduce conflict for ILA in state 175 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 175 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 175 resolved as shift
WARNING: shift/reduce conflict for DIR in state 175 resolved as shift
WARNING: shift/reduce conflict for QRA in state 175 resolved as shift
WARNING: shift/reduce conflict for [ in state 175 resolved as shift
WARNING: shift/reduce conflict for } in state 176 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 176 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 176 resolved as shift
WARNING: shift/reduce conflict for ID in state 176 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 176 resolved as shift
WARNING: shift/reduce conflict for ( in state 176 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 176 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 176 resolved as shift
WARNING: shift/reduce conflict for INT in state 176 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 176 resolved as shift
WARNING: shift/reduce conflict for STRING in state 176 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 176 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 176 resolved as shift
WARNING: shift/reduce conflict for WALO in state 176 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 176 resolved as shift
WARNING: shift/reduce conflict for ILA in state 176 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 176 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 176 resolved as shift
WARNING: shift/reduce conflict for DIR in state 176 resolved as shift
WARNING: shift/reduce conflict for QRA in state 176 resolved as shift
WARNING: shift/reduce conflict for [ in state 176 resolved as shift
WARNING: shift/reduce conflict for } in state 177 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 177 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 177 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 177 resolved as shift
WARNING: shift/reduce conflict for ( in state 177 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 177 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 177 resolved as shift
WARNING: shift/reduce conflict for INT in state 177 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 177 resolved as shift
WARNING: shift/reduce conflict for STRING in state 177 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 177 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 177 resolved as shift
WARNING: shift/reduce conflict for WALO in state 177 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 177 resolved as shift
WARNING: shift/reduce conflict for ILA in state 177 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 177 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 177 resolved as shift
WARNING: shift/reduce conflict for DIR in state 177 resolved as shift
WARNING: shift/reduce conflict for QRA in state 177 resolved as shift
WARNING: shift/reduce conflict for [ in state 177 resolved as shift
WARNING: shift/reduce conflict for } in state 178 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 178 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 178 resolved as shift
WARNING: shift/reduce conflict for ID in state 178 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 178 resolved as shift
WARNING: shift/reduce conflict for ( in state 178 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 178 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 178 resolved as shift
WARNING: shift/reduce conflict for INT in state 178 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 178 resolved as shift
WARNING: shift/reduce conflict for STRING in state 178 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 178 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 178 resolved as shift
WARNING: shift/reduce conflict for WALO in state 178 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 178 resolved as shift
WARNING: shift/reduce conflict for ILA in state 178 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 178 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 178 resolved as shift
WARNING: shift/reduce conflict for DIR in state 178 resolved as shift
WARNING: shift/reduce conflict for QRA in state 178 resolved as shift
WARNING: shift/reduce conflict for [ in state 178 resolved as shift
WARNING: shift/reduce conflict for } in state 179 resolved as shift
WARNING: shift/reduce conflict for KHREJ in state 179 resolved as shift
WARNING: shift/reduce conflict for KMEL in state 179 resolved as shift
WARNING: shift/reduce conflict for ID in state 179 resolved as shift
WARNING: shift/reduce conflict for KTEB in state 179 resolved as shift
WARNING: shift/reduce conflict for ( in state 179 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 179 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 179 resolved as shift
WARNING: shift/reduce conflict for INT in state 179 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 179 resolved as shift
WARNING: shift/reduce conflict for STRING in state 179 resolved as shift
WARNING: shift/reduce conflict for KHATE2 in state 179 resolved as shift
WARNING: shift/reduce conflict for S7I7 in state 179 resolved as shift
WARNING: shift/reduce conflict for WALO in state 179 resolved as shift
WARNING: shift/reduce conflict for JEREB in state 179 resolved as shift
WARNING: shift/reduce conflict for ILA in state 179 resolved as shift
WARNING: shift/reduce conflict for LKOLA in state 179 resolved as shift
WARNING: shift/reduce conflict for MA7ED in state 179 resolved as shift
WARNING: shift/reduce conflict for DIR in state 179 resolved as shift
WARNING: shift/reduce conflict for QRA in state 179 resolved as shift
WARNING: shift/reduce conflict for [ in state 179 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (program -> instruction_list)
WARNING: rejected rule (empty -> <empty>) in state 2
